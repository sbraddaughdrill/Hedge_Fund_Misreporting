{
    "contents" : "# TODO: Add comment\n# \n# Author:  Brad\n# File:    Clean_Raw_Filings.R\n# Version: 1.0\n# Date:    06.10.2014\n# Purpose: Clean individual filings\n###############################################################################\n\n###############################################################################\n# INITIAL SETUP;\ncat(\"SECTION: INITIAL SETUP\", \"\\n\")\n###############################################################################\n\n# Clear workspace\nrm(list = ls(all = TRUE))\n\n# Limit History to not exceed 50 lines\nSys.setenv(R_HISTSIZE = 500)\n\nrepo <- c(\"http://cran.us.r-project.org\")\noptions(repos = structure(repo))\noptions(install.packages.check.source = FALSE)\n# String as factors is False -- used for read.csv\noptions(StringsAsFactors = FALSE)\n\n# Default maxprint option\noptions(max.print = 500)\n# options(max.print=99999)\n\n# Memory limit\n#memory.limit(size = 8183)\n\n# Set location (1=HOME,2=WORK,3=LAPTOP,4=CORALSEA FROM HOME,5=CORALSEA FROM WORK,6=CORALSEA FROM LAPTOP)\nLocation <- 1\n\nif (Location == 1) {\n  #setwd(\"C:/Research_temp3/\")\n  input_directory <- normalizePath(\"C:/Users/S.Brad/Dropbox/Research/Fund_Letters/Data\",winslash=\"\\\\\", mustWork=TRUE)\n  output_directory <- normalizePath(\"F:/Research_temp3\",winslash=\"\\\\\", mustWork=TRUE)\n  function_directory <- normalizePath(\"C:/Users/S.Brad/Dropbox/Research_Methods/R\", winslash = \"\\\\\", mustWork = TRUE)\n  treetag_directory <- normalizePath(\"C:/TreeTagger\",winslash=\"\\\\\", mustWork=TRUE)    \n  \n} else if (Location == 2) {\n  #setwd(\"C:/Research_temp3/\")\n  input_directory <- normalizePath(\"C:/Users/bdaughdr/Dropbox/Research/Fund_Letters/Data\",winslash=\"\\\\\", mustWork=TRUE)\n  output_directory <- normalizePath(\"C:/Research_temp3\",winslash=\"\\\\\", mustWork=TRUE)\n  function_directory <- normalizePath(\"C:/Users/bdaughdr/Dropbox/Research_Methods/R\",winslash=\"\\\\\", mustWork=TRUE) \n  treetag_directory <- normalizePath(\"C:/TreeTagger\",winslash=\"\\\\\", mustWork=TRUE)    \n  \n} else if (Location == 3) {\n  #setwd(\"C:/Research_temp3/\")\n  input_directory <- normalizePath(\"C:/Users/S.Brad/Dropbox/Research/Fund_Letters/Data\",winslash=\"\\\\\", mustWork=TRUE)\n  output_directory <- normalizePath(\"C:/Research_temp3\",winslash=\"\\\\\", mustWork=TRUE)\n  function_directory <- normalizePath(\"C:/Users/S.Brad/Dropbox/Research_Methods/R\", winslash = \"\\\\\", mustWork = TRUE)\n  treetag_directory <- normalizePath(\"C:/TreeTagger\",winslash=\"\\\\\", mustWork=TRUE)  \n  \n} else if (Location == 4) {\n  #setwd(\"//tsclient/C/Research_temp3/\")\n  input_directory <- normalizePath(\"H:/Research/Mutual_Fund_Letters/Data\", winslash = \"\\\\\", mustWork = TRUE)\n  output_directory <- normalizePath(\"C:/Users/bdaughdr/Documents/Research_temp3\",winslash=\"\\\\\", mustWork=TRUE)\n  function_directory <- normalizePath(\"//tsclient/C/Users/S.Brad/Dropbox/Research_Methods/R\", winslash = \"\\\\\", mustWork = TRUE)\n  treetag_directory <- normalizePath(\"//tsclient/C/TreeTagger\",winslash=\"\\\\\", mustWork=TRUE)    \n  \n} else if (Location == 5) {\n  #setwd(\"//tsclient/C/Research_temp3/\")\n  input_directory <- normalizePath(\"H:/Research/Mutual_Fund_Letters/Data\", winslash = \"\\\\\", mustWork = TRUE)\n  output_directory <- normalizePath(\"C:/Users/bdaughdr/Documents/Research_temp3\",winslash=\"\\\\\", mustWork=TRUE)\n  function_directory <- normalizePath(\"//tsclient/C/Users/bdaughdr/Dropbox/Research_Methods/R\", winslash = \"\\\\\", mustWork = TRUE)\n  treetag_directory <- normalizePath(\"//tsclient/C/TreeTagger\",winslash=\"\\\\\", mustWork=TRUE)       \n  \n} else if (Location == 6) {\n  #setwd(\"//tsclient/C/Research_temp2/\")\n  input_directory <- normalizePath(\"H:/Research/Mutual_Fund_Letters/Data\", winslash = \"\\\\\", mustWork = TRUE)\n  output_directory <- normalizePath(\"C:/Research_temp3\",winslash=\"\\\\\", mustWork=TRUE)\n  function_directory <- normalizePath(\"//tsclient/C/Users/S.Brad/Dropbox/Research_Methods/R\", winslash = \"\\\\\", mustWork = TRUE)\n  treetag_directory <- normalizePath(\"//tsclient/C/TreeTagger\",winslash=\"\\\\\", mustWork=TRUE)         \n  \n} else {\n  cat(\"ERROR ASSIGNING DIRECTORIES\", \"\\n\")\n  \n}\nrm(Location)\n\n\n###############################################################################\n# FUNCTIONS;\ncat(\"SECTION: FUNCTIONS\", \"\\n\")\n###############################################################################\n\n#source(file=paste(function_directory,\"functions_db.R\",sep=\"\\\\\"),echo=FALSE)\n#source(file=paste(function_directory,\"functions_statistics.R\",sep=\"\\\\\"),echo=FALSE)\n#source(file=paste(function_directory,\"functions_text_analysis.R\",sep=\"\\\\\"),echo=FALSE)\nsource(file=paste(function_directory,\"functions_text_parse.R\",sep=\"\\\\\"),echo=FALSE)\nsource(file=paste(function_directory,\"functions_utilities.R\",sep=\"\\\\\"),echo=FALSE)\n\n###############################################################################\n# LIBRARIES;\ncat(\"SECTION: LIBRARIES\", \"\\n\")\n###############################################################################\n\n#Load External Packages\nexternal_packages <- c(\"data.table\",\"gdata\",\"plyr\",\"reshape2\",\"stringr\",\"XML\")\ninvisible(unlist(sapply(external_packages,load_external_packages, repo_str=repo, simplify=FALSE, USE.NAMES=FALSE)))\ninstalled_packages <- list_installed_packages(external_packages)\n\nrm(installed_packages)\n\n\n###############################################################################\n#PARAMETERS;\n###############################################################################\n\n#If using windows, set to \"\\\\\" - if mac (or unix), set to \"/\";\nslash <- \"\\\\\"\n\n#First year you want index files for:\n\n#startyear <- 1993\nstartyear <- 2003\n\n#Last year you want index files for:\n#endyear <- 2004\nendyear <- 2013\n\n#First qtr you want index files for (usually 1):\nstartqtr <- 1\n\n#Last qtr you want index files for (usually 4):\nendqtr <- 4\n\ndownloadfolder <- \"MF_Shareholder_Reports_N-SAR-B\"\n\n#The sub directory where the downloaded filings are\ntxtfolder <- \"txt_extract\"\n\n#The sub directory where the combined filings will be located\ntxtfolder_clean <- \"txt_clean\"\n\n#Output Folder\ntxtoutput <- \"questions\"\n\n#The file that will contain the filings you want to download.\ninfile <- \"filings_list_comb.csv\"\n\nyr_qtr_comb <- expand.grid(yr = seq(startyear, endyear, 1), qtr = seq(1, 4, 1))\n\nyr_qtr_comb <- yr_qtr_comb[order(yr_qtr_comb[,\"yr\"],yr_qtr_comb[,\"qtr\"]),]\nrow.names(yr_qtr_comb) <- seq(nrow(yr_qtr_comb))\n\nyr_qtr_comb[,\"qtr\"] <- ifelse((yr_qtr_comb[,\"yr\"]==startyear & yr_qtr_comb[,\"qtr\"] < startqtr),NA,yr_qtr_comb[,\"qtr\"])\nyr_qtr_comb[,\"qtr\"] <- ifelse((yr_qtr_comb[,\"yr\"]==endyear & yr_qtr_comb[,\"qtr\"] > endqtr),NA,yr_qtr_comb[,\"qtr\"])\n\nrm(startyear,startqtr,endyear,endqtr)\n\nyr_qtr_comb <- yr_qtr_comb[(!is.na(yr_qtr_comb[,\"qtr\"])),]\nrow.names(yr_qtr_comb) <- seq(nrow(yr_qtr_comb))\n\nyr_qtr_comb2 <- data.frame(yr_qtr_comb,yr_qtr=NA,stringsAsFactors=FALSE)\n\nrm(yr_qtr_comb)\n\nyr_qtr_comb2[,\"yr_qtr\"] <- paste(yr_qtr_comb2[,\"yr\"],yr_qtr_comb2[,\"qtr\"],sep=\"_\")\n\n#Check to see if output directory exists.  If not, create it.\ncreate_directory(output_directory,remove=1)\n\n#Check to see if download folder exists.  If not, create it.\ndownload_folder_path <- paste(output_directory, downloadfolder, sep = slash, collapse = slash)  \ncreate_directory(download_folder_path,remove=1)\n\n\n###############################################################################\ncat(\"Get list files \\n\")\n###############################################################################\n\nfilings <- read.table(file=paste(download_folder_path,\"\\\\\",infile,sep=\"\"), header = TRUE, na.strings=\"NA\",stringsAsFactors=FALSE, \n                      sep = \",\", quote = \"\\\"\",dec = \".\", fill = TRUE, comment.char = \"\")\n\nfilings2 <- data.frame(yr_qtr=NA,\n                       filings,\n                       stringsAsFactors=FALSE)\n\nrm(filings)\n\nfilings2[,\"yr_qtr\"] <- paste(filings2[,\"yr\"],\n                             filings2[,\"qtr\"],\n                             sep=\"_\")\n\nfilings2 <- filings2[,c(c(\"yr\",\"qtr\",\"yr_qtr\"),\n                        colnames(filings2[,!(colnames(filings2) %in% c(\"yr\",\"qtr\",\"yr_qtr\"))]))]\n\nfilings_trim <- filings2[ filings2[,\"yr_qtr\"] %in% yr_qtr_comb2[,\"yr_qtr\"],]\nrow.names(filings_trim) <- seq(nrow(filings_trim))\n\nrm(filings2,yr_qtr_comb2)\n\nfilings_trim2 <- data.frame(overall_id=NA,\n                            filings_trim,\n                            stringsAsFactors=FALSE)\nfilings_trim2[,\"overall_id\"] <- seq(1,nrow(filings_trim2),1)\n\nrm(filings_trim)\n\n\n###############################################################################\ncat(\"Clean Files \\n\")\n###############################################################################\n\n#filings_info <- dlply(.data=filings_trim2[(filings_trim2[,\"yr\"]==2003 | filings_trim2[,\"yr\"]==2004 ),], .variables=c(\"yr\"), .fun = function(x, path_output,subfolder,subfolder_output){\nfilings_info <- dlply(.data=filings_trim2, .variables=c(\"yr\"), .fun = function(x, path_output,subfolder,subfolder_output){\n  \n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2003),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2004),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2005),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2006),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2007),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2008),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2009),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2010),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2011),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2012),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2013),]\n  \n  #  path_output <- paste(output_directory,downloadfolder,sep=slash)\n  #  subfolder <- txtfolder\n  #  subfolder_output <- txtfolder_clean\n  \n  filings_trim2_short <- x[,!(colnames(x) %in% c(\"file_header\",\"file_index_htm\"))]\n  \n  yr <-  unique(x[,\"yr\"])\n  \n  cat(\"\\n\",yr,\"\\n\")\n  \n  #Check to see if yr folder exists.  If not, create it.\n  yr_folder_path <- paste(path_output, yr, sep = \"\\\\\", collapse = \"\\\\\")   \n  create_directory(yr_folder_path,remove=1)\n  \n  sub_folder_path <- paste(yr_folder_path, subfolder, sep = \"\\\\\", collapse = \"\\\\\")   \n  create_directory(sub_folder_path,remove=1)\n  \n  sub_folder_output_path <- paste(yr_folder_path, subfolder_output, sep = \"\\\\\", collapse = \"\\\\\")   \n  create_directory(sub_folder_output_path,remove=1)\n  \n  #Get name of downloaded files\n  downloaded_files <- data.frame(file=list.files(sub_folder_path),stringsAsFactors=FALSE)\n  downloaded_files2 <- ddply(.data=downloaded_files, .variables=c(\"file\"), .fun = function(x,folder){\n    \n    filepath <- paste(folder,x,sep=\"\\\\\")\n    output <- data.frame(filepath=filepath,file.info(filepath),stringsAsFactors=FALSE)\n    \n  }, folder=sub_folder_path, \n  .progress = \"none\", .inform = FALSE, .parallel = FALSE, .paropts = NULL, .id = NA)\n  \n  rm(downloaded_files)\n  \n  #downloaded_files2 <- downloaded_files2[order(downloaded_files2[,\"filepath\"]),]\n  #downloaded_files2 <- downloaded_files2[order(downloaded_files2[,\"size\"]),]\n  downloaded_files2 <- downloaded_files2[order(-downloaded_files2[,\"size\"]),]\n  row.names(downloaded_files2) <- seq(nrow(downloaded_files2))\n  \n  downloaded_files3 <- data.frame(yr_id=NA,downloaded_files2,stringsAsFactors=FALSE)\n  downloaded_files3[,\"yr_id\"] <- seq(1,nrow(downloaded_files3),1)\n  \n  rm(downloaded_files2)\n  \n  #output_files <- dlply(.data=downloaded_files3[1:3,], .variables=c(\"yr_id\"), .fun = function(y,sub_folder_output_path){\n  output_files <- dlply(.data=downloaded_files3[,], .variables=c(\"yr_id\"), .fun = function(y,sub_folder_output_path){\n    \n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000089043-03-000004.csv\"),]\n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000355414-03-000145.csv\"),]\n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000355414-03-000365.csv\"),]\n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000898531-03-000424.csv\"),]\n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0001119381-03-000003.csv\"),]\n    \n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0001119381-04-000004.csv\"),]\n    \n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000799195-10-000004.csv\"),]\n    \n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0001092720-11-000010.csv\"),] \n    \n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000898432-13-001710.csv\"),]\n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000898432-13-001711.csv\"),]\n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000898432-13-001712.csv\"),]\n    \n    #  y <- downloaded_files3[1,]\n    \n    # sub_folder_output_path <- sub_folder_output_path\n    \n    file <- unique(y[,\"file\"])\n    filepath <- unique(y[,\"filepath\"])\n    \n    #file_out <- file\n    #filepath_out <- paste(sub_folder_output_path,file_out,sep=\"\\\\\")\n    \n    cat(file,\"\\n\")\n    \n    filing <- read.table(file=filepath, header = TRUE, na.strings=\"\",stringsAsFactors=FALSE, \n                         sep = \",\", quote = \"\\\"\",dec = \".\", fill = TRUE, comment.char = \"\")\n    \n    filing_no_text0 <- filing[,!(colnames(filing) %in% c(\"TEXT\"))]\n    filing_no_text1 <- unique(filing_no_text0)\n    filing_no_text2 <- data.frame(file=NA,filing_no_text1,stringsAsFactors=FALSE)\n    filing_no_text2[,\"file\"] <- file\n    rm(filing_no_text0,filing_no_text1)\n    \n    filing_text0 <- filing[,(colnames(filing) %in% c(\"DOCUMENT_INDEX\",\"TEXT\"))]\n    filing_text1 <- data.frame(file=NA,filing_text0,stringsAsFactors=FALSE)\n    filing_text1[,\"file\"] <- file\n    rm(filing_text0)\n    \n    #filing_text1 <- data.frame(file=NA,filing,stringsAsFactors=FALSE)\n    #filing_text1[,\"file\"] <- file\n    \n    rm(filing)\n    \n    #questions_all <- formatC(seq(0,137,1), width = 3, format = \"d\", flag = \"0\") \n    questions_all <- formatC(c(seq(0,137,1),999), width = 3, format = \"d\", flag = \"0\")\n    \n    \n    #ONLY KEEP DOCUMENT_INDEX OF 1\n    filing_text1_trim <- filing_text1\n    #filing_text1_trim <- filing_text1_trim[filing_text1_trim[,\"DOCUMENT_INDEX\"]==1,]\n    \n    rm(filing_text1)\n    \n    \n    #CHECK TO SEE IF TEXT IS IN RIGHT FORMATTING\n    \n    flag1 <- max(ifelse(grepl(\"FORM N-SAR\", filing_text1_trim[,\"TEXT\"]), 1, 0))\n    flag2 <- max(ifelse(grepl(\"SEMI-ANNUAL REPORT\", filing_text1_trim[,\"TEXT\"]), 1, 0))\n    flag3 <- max(ifelse(grepl(\"FOR REGISTERED INVESTMENT COMPANIES\", filing_text1_trim[,\"TEXT\"]), 1, 0))\n    flag4 <- max(ifelse(grepl(\"REPORT AS OF THE END OF SEMIANNUAL PERIOD\", filing_text1_trim[,\"TEXT\"]), 1, 0))\n    \n    flag_sum <- flag1 + flag2 + flag3 + flag4\n    \n    rm(flag1,flag2,flag3,flag4)\n    \n    if (flag_sum > 0) {\n      \n      cat(\"BAD FILING\", \"\\n\")\n      \n      questions_not_present <- questions_all\n      \n    } else {\n      \n      #cat(\"GOOD FILING\", \"\\n\")\n      \n      \n      #REMOVE PAGES\n      \n      #Remove space after beginning and before end of tags\n      filing_text_page_clean <- filing_text1_trim\n      filing_text_page_clean[,c(\"TEXT\")] <- gsub(\"<\\\\s*(?!$)\",\"<\", filing_text_page_clean[,c(\"TEXT\")],perl=TRUE)\n      filing_text_page_clean[,c(\"TEXT\")] <- gsub(\"</\\\\s*(?!$)\",\"</\", filing_text_page_clean[,c(\"TEXT\")],perl=TRUE)\n      filing_text_page_clean[,c(\"TEXT\")] <- gsub(\"\\\\s*>\",\">\", filing_text_page_clean[,c(\"TEXT\")],perl=TRUE)\n      \n      rm(filing_text1_trim)\n      \n      for (i in 1:ncol(filing_text_page_clean))\n      {\n        filing_text_page_clean[,i] <- unknownToNA(filing_text_page_clean[,i], unknown=c(\"\",\".\",\"n/a\",\"na\",\"<NA>\",\"NA\",NA,\"null\",\"NULL\",NULL,\"nan\",\"NaN\",NaN,\n                                                                                        NA_integer_,\"NA_integer_\",NA_complex_,\"NA_complex_\",\n                                                                                        NA_character_,\"NA_character_\",NA_real_,\"NA_real_\"),force=TRUE)\n        filing_text_page_clean[,i] <- ifelse(is.na(filing_text_page_clean[,i]),\"\", filing_text_page_clean[,i])\n      } \n      rm(i)\n      \n      #Add page ending tags\n      filing_text_page_clean[,\"TEXT\"] <- ifelse(grepl(\"<PAGE>\", filing_text_page_clean[,\"TEXT\"]), paste(filing_text_page_clean[,\"TEXT\"],\"</PAGE>\",sep=\" \"), filing_text_page_clean[,\"TEXT\"])\n      \n      \n      tags_sep_page <- c(\"PAGE\")\n      filing_text_page_sep <- ddply(.data=filing_text_page_clean,  .variables=c(\"file\",\"DOCUMENT_INDEX\"),  .fun = function(x,bycol,xmlcol,tags){\n        \n        # x <- filing_text_page_clean[filing_text_page_clean[,\"DOCUMENT_INDEX\"]==1,]\n        # bycol <- c(\"file\",\"DOCUMENT_INDEX\")\n        # xmlcol <- \"TEXT\"\n        # tags <- tags_sep_page\n        \n        file_temp <- unique(x[,\"file\"])\n        index_temp <- unique(x[,\"DOCUMENT_INDEX\"])\n        \n        #x_temp <- data.frame(x,id=NA,stringsAsFactors=FALSE)\n        #colnames(x_temp) <- c(colnames(x),\"id\")\n        #x_temp[,\"id\"] <- seq(1,nrow(x_temp),1)\n        \n        x_temp_split <- split_by_tag(x,xmlcol,tags)\n        x_temp_split[,xmlcol] <- ifelse(x_temp_split[,xmlcol]==\"\",\" \",x_temp_split[,xmlcol])\n        \n        x_temp_split <- data.table(x_temp_split, key = \"id\")\n        sep_temp <- x_temp_split[, list(TEXT = unlist(strsplit(TEXT, '\\n', fixed=TRUE))), by = id]\n        \n        rm(x_temp_split)\n        \n        sep_temp <- sep_temp[, expand_id := sequence(.N), by = \"id\"]\n        sep_temp <- as.data.frame(sep_temp,stringsAsFactors=FALSE)\n        sep_temp <- sep_temp[,c(\"id\",\"expand_id\",xmlcol)]\n        \n        sep_temp <- sep_temp[,!(colnames(sep_temp) %in% c(\"id\",\"expand_id\"))]\n        sep_temp_out <- data.frame(file=NA,index=NA,sep_temp,stringsAsFactors=FALSE)\n        rm(sep_temp)\n        \n        sep_temp_out[,\"file\"] <- file_temp\n        sep_temp_out[,\"index\"] <- index_temp\n        colnames(sep_temp_out) <- c(bycol,xmlcol)\n        \n        return(sep_temp_out)\n        \n      }, bycol=c(\"file\",\"DOCUMENT_INDEX\"),xmlcol=\"TEXT\", tags=tags_sep_page,\n      .progress = \"none\", .inform = FALSE, .drop = FALSE, .parallel = FALSE, .paropts = NULL)\n      \n      rm(filing_text_page_clean)\n      \n      filing_text_page_id <- data.frame(filing_text_page_sep,page_tag_temp=NA,stringsAsFactors=FALSE)\n      colnames(filing_text_page_id)[match(\"page_tag_temp\",names(filing_text_page_id))] <- \"PAGE_INDEX\"\n      rm(filing_text_page_sep)\n      \n      filing_text_page_id[,\"PAGE_INDEX\"] <- ifelse(grepl(\"<PAGE\", filing_text_page_id[,\"TEXT\"]), \"<PAGE>\", filing_text_page_id[,\"PAGE_INDEX\"])\n      filing_text_page_id[,\"PAGE_INDEX\"] <- ifelse(grepl(\"</PAGE\", filing_text_page_id[,\"TEXT\"]), \"</PAGE>\", filing_text_page_id[,\"PAGE_INDEX\"])\n      \n      index_page_temp <- llply(.data=tags_sep_page, create_tag_index,data=filing_text_page_id, tag_raw_col=\"PAGE_INDEX\",\n                               .progress = \"none\", .inform = FALSE,.parallel = FALSE, .paropts = NULL)\n      index_page <- do.call(cbind, index_page_temp)\n      index_page <- as.data.frame(index_page,stringsAsFactors=FALSE)\n      colnames(index_page) <- paste(tags_sep_page,\"INDEX\",sep=\"_\")\n      colnames(index_page) <- gsub(\"-\",\"_\", colnames(index_page))\n      rm(index_page_temp)\n      \n      filing_text_page_id[,\"PAGE_INDEX\"] <- index_page\n      rm(index_page)\n      \n      if(c(\"PAGE_INDEX\") %in% colnames(filing_text_page_id)) {\n        \n        filing_text_page_id_trim <- filing_text_page_id[(filing_text_page_id[,c(\"PAGE_INDEX\")]==0),]\n        \n      } else {\n        \n        #cat(\"NO page SECTION\",\"\\n\")\n        \n        filing_text_page_id_trim <- filing_text_page_id\n        \n      }\n      rm(filing_text_page_id)\n      \n      filing_text_page_id_trim <- filing_text_page_id_trim[,!(colnames(filing_text_page_id_trim) %in% c(\"PAGE_INDEX\"))]\n      row.names(filing_text_page_id_trim) <- seq(nrow(filing_text_page_id_trim))\n      \n      \n      #CLEAN TEXT\n      \n      filing_text_clean <- filing_text_page_id_trim\n      \n      #filing_text_clean[,\"TEXT\"] <- gsub(pattern=\"\\\\.{2,}\", replacement=\"\\\\.\", x=filing_text_clean[,\"TEXT\"])\n      #filing_text_clean[,\"TEXT\"] <- gsub(pattern=\"\\\\.{2,}\", replacement=\"\\\\.\", x=filing_text_clean[,\"TEXT\"])\n      #filing_text_clean[,\"TEXT\"] <- gsub(pattern=\"\\\\.{2,}\", replacement=\"\\\\.\", x=filing_text_clean[,\"TEXT\"])\n      #filing_text_clean[,\"TEXT\"] <- gsub(pattern=\"\\\\.{2,}\", replacement=\"\\\\.\", x=filing_text_clean[,\"TEXT\"])\n      #filing_text_clean[,\"TEXT\"] <- gsub(pattern=\"  \", replacement=\" \", x=filing_text_clean[,\"TEXT\"])\n      #filing_text_clean[,\"TEXT\"] <- gsub(pattern=\"  \", replacement=\" \", x=filing_text_clean[,\"TEXT\"])\n      #filing_text_clean[,\"TEXT\"] <- gsub(pattern=\"  \", replacement=\" \", x=filing_text_clean[,\"TEXT\"])\n      #filing_text_clean[,\"TEXT\"] <- gsub(pattern=\"  \", replacement=\" \", x=filing_text_clean[,\"TEXT\"])\n      filing_text_clean[,\"TEXT\"] <- gsub(\"^\\\\s+|\\\\s+$\", \"\", filing_text_clean[,\"TEXT\"])\n      \n      rm(filing_text_page_id_trim)\n      \n      \n      #REMOVE BLANK TEXT\n      \n      filing_text_trim <- filing_text_clean\n      \n      filing_text_trim <- filing_text_trim[!is.na(filing_text_trim[,\"TEXT\"]),]\n      filing_text_trim <- filing_text_trim[!filing_text_trim[,\"TEXT\"]==\"\",]\n      \n      rm(filing_text_clean)\n      \n      \n      #REMOVE FIRST WORDS WITH NO NUMBERS\n      \n      #       ###############################################################\n      #       temp <- data.frame(TEXT=NA,stringsAsFactors=FALSE)\n      #       temp[1,] <- \"042 H00AA00   0\"\n      #       temp[2,] <- \"043  00AA00      0\"\n      #       temp[3,] <- \"048  000100  0.750\"\n      #       temp[4,] <- \"048 A010100        0\"\n      #       temp[5,] <- \"054 A00AA00 N\"\n      #       temp[6,] <- \"072 Y000100       47\"\n      #       temp[7,] <- \"072AA000100    12551\"\n      #       temp[8,] <- \"072BB000100        0\"\n      #       temp[9,] <- \"072 Z000300     -115\"\n      #       temp[10,] <- \"072AA000300        0\"\n      #       temp[11,] <- \"072BB000300      607\"\n      #       temp[12,] <- \"072CC020300        0\"\n      #       temp[13,] <- \"073 A010300   0.0000\"\n      #       temp[14,] <- \"077 Q030000 N\"\n      #       temp[15,] <- \"078  000000 N\"\n      #       temp[16,] <- \"085 B00AA00 N\"\n      #       temp[17,] <- \"000A 0 AA1  FEDERATED SERVICES COMPANY\"\n      #       temp[18,] <- \"075 A000600        0\"\n      #       temp[19,] <- \"076  000600     0.00\"\n      #       temp[20,] <- \"000C 1 100  10\"\n      # \n      #       filing_text_trim_backup <-  filing_text_trim\n      #       filing_text_trim <- temp\n      #       ###############################################################\n      \n      \n      filing_text_sig_title <-  data.frame(filing_text_trim,\n                                           org_order=NA,\n                                           TEXT_CLEAN=NA,\n                                           item_number=NA,\n                                           item_letter=NA,\n                                           item_subnumber=NA,\n                                           series_number=NA,\n                                           repetition=NA,\n                                           value=NA,\n                                           error=NA,\n                                           stringsAsFactors=FALSE)\n      \n      filing_text_sig_title <- filing_text_sig_title[,c(\"org_order\",colnames(filing_text_sig_title[,!(colnames(filing_text_sig_title) %in% c(\"org_order\"))]))]\n      filing_text_sig_title[,\"org_order\"] <- seq(1,nrow(filing_text_sig_title))\n      \n      \n      filing_text_sig_title[,\"item_number\"] <- ldply(filing_text_sig_title[,\"TEXT\"], function(z) {\n        \n        return(unlist(strsplit(z, split=\" \"))[1])\n      })\n      rm(filing_text_trim)\n      \n      filing_text_sig_title2 <- filing_text_sig_title\n      #filing_text_sig_title2 <- filing_text_sig_title2[!(filing_text_sig_title2[,\"item_number\"]==\"SIGNATURE\"),]\n      #filing_text_sig_title2 <- filing_text_sig_title2[!(filing_text_sig_title2[,\"item_number\"]==\"TITLE\"),]\n      \n      filing_text_sig_title2[,\"item_letter\"] <- nchar(filing_text_sig_title2[,\"item_number\"])\n      filing_text_sig_title2[,\"item_subnumber\"] <- gsub(\"[^0-9]\",\"\",filing_text_sig_title2[,\"item_number\"])\n      filing_text_sig_title2[,\"series_number\"] <- nchar(filing_text_sig_title2[,\"item_subnumber\"])\n      \n      rm(filing_text_sig_title)\n      \n      filing_text_sig_title3 <- filing_text_sig_title2[!(filing_text_sig_title2[,\"series_number\"]==0),]\n      \n      if(nrow(filing_text_sig_title3)==0){      \n        \n        filing_text_sig_title3 <- filing_text_sig_title2[1,]\n        filing_text_sig_title3[,\"TEXT\"] <- paste(\"999__00\",filing_text_sig_title3[,\"org_order\"],\"00  TRASH FILINGS!!\",sep=\"\")\n        filing_text_sig_title3[,\"item_number\"] <- NA\n        filing_text_sig_title3[,\"item_letter\"] <- NA\n        filing_text_sig_title3[,\"item_subnumber\"] <- NA\n        filing_text_sig_title3[,\"series_number\"] <- NA\n        filing_text_sig_title3[,\"repetition\"] <- NA\n      }\n       \n      rm(filing_text_sig_title2)\n      \n      filing_text_sig_title4 <- filing_text_sig_title3\n      filing_text_sig_title4[,\"item_number\"] <- substr(filing_text_sig_title4[,\"TEXT\"], 1, 3)\n      filing_text_sig_title4[,\"item_letter\"] <- nchar(filing_text_sig_title4[,\"item_number\"])\n      filing_text_sig_title4[,\"item_subnumber\"] <- gsub(\"[^0-9]\",\"\",filing_text_sig_title4[,\"item_number\"])\n      filing_text_sig_title4[,\"series_number\"] <- nchar(filing_text_sig_title4[,\"item_subnumber\"])\n      filing_text_sig_title4[,\"repetition\"] <- filing_text_sig_title4[,\"item_letter\"] - filing_text_sig_title4[,\"series_number\"] \n      \n      rm(filing_text_sig_title3)\n      \n      filing_text_sig_title5 <- filing_text_sig_title4[filing_text_sig_title4[,\"repetition\"]==0,]\n      filing_text_sig_title5 <- filing_text_sig_title5[rowSums(is.na(filing_text_sig_title5[,1:ncol(filing_text_sig_title5)]))<(ncol(filing_text_sig_title5)),]\n      \n      if(nrow(filing_text_sig_title5)==0){ \n        \n        filing_text_sig_title5 <- filing_text_sig_title4[1,]\n        filing_text_sig_title5[,\"TEXT\"] <- paste(\"999__00\",filing_text_sig_title5[,\"org_order\"],\"00  TRASH FILINGS!!\",sep=\"\")\n        filing_text_sig_title5[,\"item_number\"] <- NA\n        filing_text_sig_title5[,\"item_letter\"] <- NA\n        filing_text_sig_title5[,\"item_subnumber\"] <- NA\n        filing_text_sig_title5[,\"series_number\"] <- NA\n        filing_text_sig_title5[,\"repetition\"] <- NA\n      }\n      \n      rm(filing_text_sig_title4)\n      \n      filing_text_sig_title6 <- filing_text_sig_title5\n      filing_text_sig_title6[,\"item_letter\"] <- NA\n      filing_text_sig_title6[,\"item_subnumber\"] <- NA\n      filing_text_sig_title6[,\"series_number\"] <- NA\n      filing_text_sig_title6[,\"repetition\"] <- NA\n      \n      #row.names(filing_text_sig_title6) <- seq(nrow(filing_text_sig_title6))\n      \n      rm(filing_text_sig_title5)\n      \n      \n      #EXPAND ID VARIABLES\n      \n      filing_text_expand_id <- filing_text_sig_title6\n      \n      #See if question doesn't have subpart\n      filing_text_expand_id[,\"TEXT_CLEAN\"] <- filing_text_expand_id[,\"TEXT\"]\n      \n      \n      #filing_text_expand_id[,\"TEXT_CLEAN\"] <- ifelse(grepl(\"[0-9]\",substr(filing_text_expand_id[,\"TEXT_CLEAN\"], 5, 5)),\n      #                                               paste(substr(filing_text_expand_id[,\"TEXT_CLEAN\"], 1, 4),substr(filing_text_expand_id[,\"TEXT_CLEAN\"], 5, nchar(filing_text_expand_id[,\"TEXT_CLEAN\"])),sep=\"0\"),\n      #                                               filing_text_expand_id[,\"TEXT_CLEAN\"])\n      \n      filing_text_expand_id[,\"item_letter\"] <- substr(filing_text_expand_id[,\"TEXT_CLEAN\"], 4, 5)\n      filing_text_expand_id[,\"item_subnumber\"] <- substr(filing_text_expand_id[,\"TEXT_CLEAN\"], 6, 7)\n      filing_text_expand_id[,\"series_number\"] <- substr(filing_text_expand_id[,\"TEXT_CLEAN\"], 8, 9)\n      filing_text_expand_id[,\"repetition\"] <- substr(filing_text_expand_id[,\"TEXT_CLEAN\"], 10, 11)\n      #filing_text_expand_id[,\"value\"] <- substr(filing_text_expand_id[,\"TEXT_CLEAN\"], 12, nchar(encodeString(filing_text_expand_id[,\"TEXT_CLEAN\"])))\n      filing_text_expand_id[,\"value\"] <- substr(filing_text_expand_id[,\"TEXT_CLEAN\"], 12, nchar(filing_text_expand_id[,\"TEXT_CLEAN\"]))\n      \n      rm(filing_text_sig_title6)\n      \n      \n      #CLEAN DATA\n      \n      filing_text_expand_id_clean <- filing_text_expand_id\n      \n      rm(filing_text_expand_id)\n      \n      filing_text_expand_id_clean[,\"item_letter\"] <- gsub(\"^\\\\s+|\\\\s+$\", \"\", filing_text_expand_id_clean[,\"item_letter\"])\n      filing_text_expand_id_clean[,\"item_letter\"] <- formatC( filing_text_expand_id_clean[,\"item_letter\"], width = 2, format = \"s\", flag = \" \") \n      filing_text_expand_id_clean[,\"item_letter\"] <- gsub(\" \", \"_\", filing_text_expand_id_clean[,\"item_letter\"])\n      \n      filing_text_expand_id_clean[,\"item_subnumber\"] <- gsub(\"^\\\\s+|\\\\s+$\", \"\", filing_text_expand_id_clean[,\"item_subnumber\"])\n      filing_text_expand_id_clean[,\"item_subnumber\"] <- formatC( filing_text_expand_id_clean[,\"item_subnumber\"], width = 2, format = \"s\", flag = \" \") \n      filing_text_expand_id_clean[,\"item_subnumber\"] <- gsub(\" \", \"0\", filing_text_expand_id_clean[,\"item_subnumber\"])\n      \n      filing_text_expand_id_clean[,\"repetition\"] <- gsub(\"^\\\\s+|\\\\s+$\", \"\", filing_text_expand_id_clean[,\"repetition\"])\n      filing_text_expand_id_clean[,\"repetition\"] <- formatC( filing_text_expand_id_clean[,\"repetition\"], width = 2, format = \"s\", flag = \" \") \n      filing_text_expand_id_clean[,\"repetition\"] <- gsub(\" \", \"0\", filing_text_expand_id_clean[,\"repetition\"])\n      \n      filing_text_expand_id_clean[,\"value\"] <- gsub(\"^\\\\s+|\\\\s+$\", \"\", filing_text_expand_id_clean[,\"value\"])\n      \n      \n      #FIND ERROR ROWS\n      \n      filing_text_expand_id_trim <- filing_text_expand_id_clean\n      \n      filing_text_expand_id_trim[,\"TEXT_CLEAN\"] <- substr(filing_text_expand_id_trim[,\"TEXT_CLEAN\"], 1, 11)\n      \n      filing_text_expand_id_trim[,\"TEXT_CLEAN\"] <- gsub(pattern=\"  \", replacement=\" \", x=filing_text_expand_id_trim[,\"TEXT_CLEAN\"])\n      filing_text_expand_id_trim[,\"TEXT_CLEAN\"] <- gsub(pattern=\"  \", replacement=\" \", x=filing_text_expand_id_trim[,\"TEXT_CLEAN\"])\n      filing_text_expand_id_trim[,\"TEXT_CLEAN\"] <- gsub(pattern=\" \", replacement=\"\", x=filing_text_expand_id_trim[,\"TEXT_CLEAN\"])\n      filing_text_expand_id_trim[,\"TEXT_CLEAN\"] <- gsub(pattern=\" \", replacement=\"\", x=filing_text_expand_id_trim[,\"TEXT_CLEAN\"])\n      filing_text_expand_id_trim[,\"TEXT_CLEAN\"] <- gsub(\"^\\\\s+|\\\\s+$\", \"\", filing_text_expand_id_trim[,\"TEXT_CLEAN\"])\n      \n      filing_text_expand_id_trim[,\"error\"] <- ifelse((filing_text_expand_id_trim[,\"item_number\"]==\"000\" & nchar(filing_text_expand_id_trim[,\"TEXT_CLEAN\"])<9),1,0)\n      \n      filing_text_expand_id_trim[,\"item_number\"] <- ifelse(filing_text_expand_id_trim[,\"error\"]==1,\"999\",filing_text_expand_id_trim[,\"item_number\"])\n      #filing_text_expand_id_trim[,\"item_letter\"] <- ifelse(filing_text_expand_id_trim[,\"error\"]==1,\"__\",filing_text_expand_id_trim[,\"item_letter\"])\n      #filing_text_expand_id_trim[,\"item_subnumber\"] <- ifelse(filing_text_expand_id_trim[,\"error\"]==1,\"00\",filing_text_expand_id_trim[,\"item_subnumber\"])\n      #filing_text_expand_id_trim[,\"series_number\"] <- ifelse(filing_text_expand_id_trim[,\"error\"]==1,filing_text_expand_id_trim[,\"org_order\"],filing_text_expand_id_trim[,\"series_number\"])\n      #filing_text_expand_id_trim[,\"repetition\"] <- ifelse(filing_text_expand_id_trim[,\"error\"]==1,\"00\",filing_text_expand_id_trim[,\"repetition\"])\n      #filing_text_expand_id_trim[,\"value\"] <- ifelse(filing_text_expand_id_trim[,\"error\"]==1,filing_text_expand_id_trim[,\"TEXT\"],filing_text_expand_id_trim[,\"value\"])\n      \n      #filing_text_expand_id_trim <- filing_text_expand_id_trim[order(filing_text_expand_id_trim[,\"file\"], filing_text_expand_id_trim[,\"DOCUMENT_INDEX\"],\n      #                                                               filing_text_expand_id_trim[,\"item_number\"], filing_text_expand_id_trim[,\"series_number\"],\n      #                                                               filing_text_expand_id_trim[,\"repetition\"], filing_text_expand_id_trim[,\"item_letter\"],\n      #                                                               filing_text_expand_id_trim[,\"item_subnumber\"]),]\n      \n      #filing_text_expand_id_trim_order <- c(\"file\",\"DOCUMENT_INDEX\",\"item_number\",\"item_letter\",\"item_subnumber\",\"series_number\",\"repetition\")\n      filing_text_expand_id_trim_order <- c(\"file\",\"DOCUMENT_INDEX\",\"item_number\",\"series_number\",\"repetition\",\"item_letter\",\"item_subnumber\")\n      filing_text_expand_id_trim <- setorderv(data.table(filing_text_expand_id_trim), filing_text_expand_id_trim_order, rep(1,length(filing_text_expand_id_trim_order)))\n      filing_text_expand_id_trim <- as.data.frame(filing_text_expand_id_trim,stringsAsFactors=FALSE)\n      \n      rm(filing_text_expand_id_clean)\n      \n      \n      #SEQUENCE DATA\n      \n      filing_text_cast_temp <- filing_text_expand_id_trim[,!(colnames(filing_text_expand_id_trim) %in% c(\"TEXT\",\"TEXT_CLEAN\",\"error\"))]\n      \n      rm(filing_text_expand_id_trim)\n      \n      filing_text_cast_id <- ddply(.data=filing_text_cast_temp,  .variables=filing_text_expand_id_trim_order, .fun = function(x){\n        \n        #filing_text_cast_id <- ddply(.data=filing_text_cast_temp,  .variables=c(\"file\",\"DOCUMENT_INDEX\",\"item_number\",\"series_number\",\"repetition\", \"item_letter\",\"item_subnumber\"), .fun = function(x){\n        \n        x_out <- data.frame(x,row_id=NA,stringsAsFactors=FALSE)\n        x_out[,\"row_id\"] <- seq(1,nrow(x_out))\n        \n        return(x_out)\n        \n      }, .progress = \"none\", .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)\n      \n      rm(filing_text_cast_temp)\n      \n      \n      #CAST DATA\n      \n      #     filing_text_questions <- dlply(.data=filing_text_cast_id, .variables=c(\"file\",\"DOCUMENT_INDEX\",\"item_number\"), .fun = function(x){\n      #       \n      #       # x <- filing_text_cast_id[filing_text_cast_id[,\"item_number\"]==\"000\",]\n      #       # x <- filing_text_cast_id[filing_text_cast_id[,\"item_number\"]==\"001\",]\n      #       # x <- filing_text_cast_id[filing_text_cast_id[,\"item_number\"]==\"002\",]\n      #       # x <- filing_text_cast_id[filing_text_cast_id[,\"item_number\"]==\"008\",]\n      #       # x <- filing_text_cast_id[filing_text_cast_id[,\"item_number\"]==\"010\",]\n      #       # x <- filing_text_cast_id[filing_text_cast_id[,\"item_number\"]==\"071\",]\n      #       # x <- filing_text_cast_id[filing_text_cast_id[,\"item_number\"]==\"072\",]\n      # \n      #       filing_text_questions_temp <- dcast(x, file + DOCUMENT_INDEX + item_number + series_number + repetition + row_id ~ item_number + item_letter + item_subnumber, value.var = \"value\")\n      # \n      #       return(filing_text_questions_temp)\n      #       \n      #     },.progress = \"none\", .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)\n      \n      questions_present <- unique(filing_text_cast_id[,\"item_number\"])\n      \n      #test <- filing_text_cast_id\n      #test[,\"DOCUMENT_INDEX\"] <- 1\n      #test <- rbind(test,filing_text_cast_id)\n      \n      for (j in 1:length(questions_present))\n      {\n        #j <- 1\n        \n        cast_temp <- dcast(filing_text_cast_id[filing_text_cast_id[,\"item_number\"]==questions_present[j],], \n                           file + DOCUMENT_INDEX + item_number + series_number + repetition + row_id ~ item_number + item_letter + item_subnumber, value.var = \"value\")\n        \n        col_all <- colnames(cast_temp)\n        col_no_change <- c(\"file\",\"DOCUMENT_INDEX\",\"item_number\",\"series_number\",\"repetition\",\"row_id\")\n        col_change <- col_all[!(col_all %in% col_no_change)]\n        \n        colnames(cast_temp) <- c(col_no_change,paste(\"q\",col_change,sep=\"_\"))\n        \n        cast_temp2 <- merge(filing_no_text2, cast_temp, \n                            by.x=c(\"file\",\"DOCUMENT_INDEX\"), by.y=c(\"file\",\"DOCUMENT_INDEX\"), \n                            all.x=FALSE, all.y=FALSE, sort=FALSE, suffixes=c(\".x\",\".y\"))\n        \n        rm(cast_temp)\n        \n        assign(paste(\"filing_text_q\", questions_present[j], sep = \"\"), cast_temp2, envir = .GlobalEnv)\n        \n        rm(cast_temp2,col_all,col_no_change,col_change)\n      }\n      rm(j)\n      \n      questions_not_present <- questions_all[!(questions_all %in% questions_present)]\n      \n      rm(filing_text_cast_id,questions_present)\n      \n    }\n    rm(flag_sum)\n    \n    \n    #CREATE EMPTY QUESTIONS FOR THE ONES THAT AREN'T PRESENT\n    \n    for (l in 1:length(questions_not_present))\n    {\n      #l <- 1\n      \n      #cast_temp <- data.frame(file=file,DOCUMENT_INDEX=1,item_number=questions_not_present[l],stringsAsFactors=FALSE)\n      cast_temp <- filing_no_text2[,c(\"file\",\"DOCUMENT_INDEX\",\"TYPE\")]\n      colnames(cast_temp)[match(\"TYPE\",names(cast_temp))] <- \"item_number\"\n      cast_temp[,\"item_number\"] <- questions_not_present[l]\n      \n      \n      cast_temp2 <- merge(filing_no_text2, cast_temp, \n                          by.x=c(\"file\",\"DOCUMENT_INDEX\"), by.y=c(\"file\",\"DOCUMENT_INDEX\"), \n                          all.x=FALSE, all.y=FALSE, sort=FALSE, suffixes=c(\".x\",\".y\"))\n      \n      rm(cast_temp)\n      \n      assign(paste(\"filing_text_q\", questions_not_present[l], sep = \"\"), \n             cast_temp2, \n             envir = .GlobalEnv)\n      \n      rm(cast_temp2)\n    }\n    rm(questions_not_present,l)\n    \n    str_comb <- paste0(\"filing_text_questions <- list(\",paste(\"filing_text_q\", questions_all, sep=\"\", collapse = \",\"),\")\")\n    expr_comb <- parse(text=str_comb)\n    eval(expr_comb)\n    rm(str_comb,expr_comb)\n    \n    str_rm <- paste0(\"rm(\",paste(\"filing_text_q\", questions_all, sep=\"\", collapse = \",\"),\",envir = .GlobalEnv)\")\n    expr_rm <- parse(text=str_rm)\n    eval(expr_rm)\n    rm(str_rm,expr_rm)\n    \n    rm(questions_all)\n    rm(file,filepath)\n    #rm(file_out,filepath_out)\n    rm(filing_no_text2)\n    \n    \n    \n    return(filing_text_questions)\n    \n  },\n  sub_folder_output_path=sub_folder_output_path,\n  .progress = \"none\",.inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)\n  \n  \n  #questions_all <- formatC(seq(0,137,1), width = 3, format = \"d\", flag = \"0\") \n  questions_all <- formatC(c(seq(0,137,1),999), width = 3, format = \"d\", flag = \"0\")\n  \n  for (k in 1:length(questions_all))\n  {\n    # k <- 1\n    # k <- 139\n    \n    #cat(\"Question Num\", k, \"\\n\") \n    #cat(\"Question ID\", questions_all[k], \"\\n\") \n    \n    #output_files_comb0 <- sapply(output_files, \"[\", (as.numeric(questions_all[k])+1))\n    output_files_comb0 <- sapply(output_files, \"[\", k)\n    output_files_comb1 <- rbindlist(output_files_comb0,fill=TRUE,use.names=TRUE)\n    output_files_comb  <- data.frame(yr=NA,output_files_comb1,stringsAsFactors=FALSE)\n    output_files_comb[,\"yr\"] <- yr\n    \n    rm(output_files_comb0,output_files_comb1)\n    \n    output_files_comb_id_cols_possible <- c(\"yr\",\"file\",\"DOCUMENT_INDEX\",\"TYPE\",\"SEQUENCE\",\"FILENAME\",\"DESCRIPTION\")\n    \n    output_files_comb_id_cols <- colnames(output_files_comb)[colnames(output_files_comb) %in% output_files_comb_id_cols_possible]\n    \n    output_files_comb_question_cols <- colnames(output_files_comb)[grep(questions_all[k], colnames(output_files_comb))]\n    output_files_comb_question_cols <- sort(output_files_comb_question_cols)\n    \n    output_files_comb_other_cols <- colnames(output_files_comb)[!(colnames(output_files_comb) %in% c(output_files_comb_id_cols,output_files_comb_question_cols))]\n    \n    #output_files_comb <- output_files_comb[,c(output_files_comb_id_cols,colnames(output_files_comb[,!(colnames(output_files_comb) %in% c(output_files_comb_id_cols))]))]\n    output_files_comb <- output_files_comb[,c(output_files_comb_id_cols,output_files_comb_other_cols,output_files_comb_question_cols)]\n    \n    rm(output_files_comb_id_cols_possible,output_files_comb_id_cols,output_files_comb_other_cols,output_files_comb_question_cols)\n    \n    assign(paste(\"filing_text_comb_q\", questions_all[k], sep = \"\"), output_files_comb, envir = .GlobalEnv)\n    \n    write.table(output_files_comb,file=paste(sub_folder_output_path,\"\\\\\",paste(\"nsar_b_temp_q\", questions_all[k], sep = \"\"),\".csv\",sep=\"\"), append=FALSE, na=\"NA\", \n                sep = \",\", quote = TRUE,dec = \".\",  qmethod = \"double\", col.names=TRUE, row.names = FALSE)\n    \n    rm(output_files_comb)\n    \n  }\n  rm(k)\n  \n  file_str <- paste(\"filing_text_comb_q\", questions_all, sep=\"\", collapse = \",\")\n  \n  str_comb <- paste0(\"filing_text_questions_comb <- list(\",file_str,\")\")\n  expr_comb <- parse(text=str_comb)\n  eval(expr_comb)\n  \n  str_rm <- paste0(\"rm(\",file_str,\",envir = .GlobalEnv)\")\n  expr_rm <- parse(text=str_rm)\n  eval(expr_rm)\n  \n  #rm(str_comb,expr_comb,str_rm,expr_rm)\n  rm(file_str)\n     \n  rm(output_files)\n  \n  rm(yr,yr_folder_path,sub_folder_path,sub_folder_output_path,downloaded_files3)\n  \n  return(questions_all)\n  \n},\npath_output=paste(output_directory,downloadfolder,sep=slash),\nsubfolder=txtfolder,subfolder_output=txtfolder_clean,\n.progress = \"text\",.inform = TRUE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)\n\n\n###############################################################################\ncat(\"Output Files \\n\")\n###############################################################################\n\n#Check to see if download folder exists.  If not, create it.\nquestion_folder_path <- paste(output_directory, downloadfolder, txtoutput, sep = slash, collapse = slash)  \ncreate_directory(question_folder_path,remove=1)\n\nyrs <- unique(filings_trim2[,\"yr\"])\n\nquestions_all <- formatC(c(seq(0,137,1),999), width = 3, format = \"d\", flag = \"0\")\n\nfor (m in 1:length(questions_all))\n{\n  # m <- 1\n  # m <- 139\n  \n  #cat(\"Question Num\", m, \"\\n\") \n  cat(\"Question ID\", questions_all[m], \"\\n\") \n  \n  filings_info_comb <- ldply(.data=yrs, .fun = function(x,path_output,subfolder_output,question_str,question_id){\n    \n    # x <- 2003\n    # path_output <- paste(output_directory,downloadfolder,sep=slash)\n    # subfolder_output <- txtfolder_clean\n    # question_str <- \"nsar_b_temp_q\"\n    # question_id <- questions_all[m]\n    \n    yr <-  as.numeric(x)\n    \n    #cat(\"\\n\",yr,\"\\n\")\n    \n    #Check to see if yr folder exists.  If not, create it.\n    yr_folder_path <- paste(path_output, yr, sep = \"\\\\\", collapse = \"\\\\\")   \n    #create_directory(yr_folder_path,remove=1)\n    \n    sub_folder_output_path <- paste(yr_folder_path, subfolder_output, sep = \"\\\\\", collapse = \"\\\\\")   \n    #create_directory(sub_folder_output_path,remove=1)\n\n    question_str_full <- paste(question_str,question_id,\".csv\",sep=\"\")\n    \n    filings <- read.table(file=paste(sub_folder_output_path,\"\\\\\",question_str_full,sep=\"\"), header = TRUE, na.strings=\"NA\",stringsAsFactors=FALSE, \n                          sep = \",\", quote = \"\\\"\",dec = \".\", fill = TRUE, comment.char = \"\")\n    \n    rm(yr,yr_folder_path,sub_folder_output_path,question_str_full)\n    \n    return(filings)\n    \n  }, path_output=paste(output_directory,downloadfolder,sep=slash), subfolder_output=txtfolder_clean, \n  question_str=\"nsar_b_temp_q\",question_id=questions_all[m], \n  .progress = \"none\", .inform = FALSE, .parallel = FALSE, .paropts = NULL, .id = NA)\n\n  #filings_info_comb0 <- sapply(filings_info, \"[\", (as.numeric(questions_all[m])+1))\n  #filings_info_comb0 <- sapply(filings_info, \"[\", m)\n  #filings_info_comb1 <- rbindlist(filings_info_comb0,fill=TRUE,use.names=TRUE)\n  #filings_info_comb  <- as.data.frame(filings_info_comb1,stringsAsFactors=FALSE) \n  #rm(filings_info_comb0,filings_info_comb1)\n  \n  \n  ## ORDER COLUMNS\n  \n  filings_info_comb_id_cols_possible <- c(\"yr\",\"file\",\"DOCUMENT_INDEX\",\"TYPE\",\"SEQUENCE\",\"FILENAME\",\"DESCRIPTION\")\n  \n  filings_info_comb_id_cols <- colnames(filings_info_comb)[colnames(filings_info_comb) %in% filings_info_comb_id_cols_possible]\n  \n  filings_info_comb_question_cols <- colnames(filings_info_comb)[grep(questions_all[m], colnames(filings_info_comb))]\n  filings_info_comb_question_cols <- sort(filings_info_comb_question_cols)\n  \n  filings_info_comb_other_cols <- colnames(filings_info_comb)[!(colnames(filings_info_comb) %in% c(filings_info_comb_id_cols,filings_info_comb_question_cols))]\n  \n  #filings_info_comb <- filings_info_comb[,c(filings_info_comb_id_cols,colnames(filings_info_comb[,!(colnames(filings_info_comb) %in% c(filings_info_comb_id_cols))]))]\n  filings_info_comb <- filings_info_comb[,c(filings_info_comb_id_cols,filings_info_comb_other_cols,filings_info_comb_question_cols)]\n  \n  rm(filings_info_comb_id_cols_possible,filings_info_comb_id_cols,filings_info_comb_other_cols,filings_info_comb_question_cols)\n  \n  \n  ## FIX COLUMN TYPE\n  \n  col_temp <- \"item_number\"\n  \n  #if (col_temp %in% colnames(filings_info_comb)) { filings_info_comb[,col_temp] <- as.numeric(filings_info_comb[,col_temp]) }\n  \n  col_temp <- \"repetition\"\n  \n  #if (col_temp %in% colnames(filings_info_comb)) { filings_info_comb[,col_temp] <- as.numeric(filings_info_comb[,col_temp]) }\n  \n  col_temp <- \"row_id\"\n  \n  #if (col_temp %in% colnames(filings_info_comb)) { filings_info_comb[,col_temp] <- as.numeric(filings_info_comb[,col_temp]) }\n  \n  col_temp <- \"item_subnumber\"\n  \n  #if (col_temp %in% colnames(filings_info_comb)) { filings_info_comb[,col_temp] <- as.numeric(filings_info_comb[,col_temp]) }\n  \n  write.table(filings_info_comb,file=paste(question_folder_path,\"\\\\\",paste(\"nsar_b_q\", questions_all[m], sep = \"\"),\".csv\",sep=\"\"), append=FALSE, na=\"NA\", \n              sep = \",\", quote = TRUE,dec = \".\",  qmethod = \"double\", col.names=TRUE, row.names = FALSE)\n  \n  rm(filings_info_comb,col_temp)\n}\nrm(m)\n\n\n\n###############################################################################\ncat(\"BAD Files \\n\")\n###############################################################################\n\n# aa <- ls()\n# aa <- as.data.frame(aa,stringsAsFactors=FALSE)\n# aa[,\"flag\"] <- ifelse(grepl(\"filing_text_q\",aa[,\"aa\"]),1,0)\n# bb <- aa[aa[,\"flag\"]==1,]\n# \n# cc <- bb\n# cc[,\"flag\"] <- seq(1:nrow(cc))\n# \n# dd <- dlply(.data=cc,  .variables=c(\"aa\"),  .fun = function(x){\n#   \n#   # x <- cc[1,]\n#   \n#   x_out <- get(x[,\"aa\"])\n#   \n#   x_cols_all <- colnames(x_out)\n#   x_cols_good <- c(\"file\",\"DOCUMENT_INDEX\",\"TYPE\",\"SEQUENCE\",\"FILENAME\",\"DESCRIPTION\",\"item_number\",\"series_number\",\"repetition\",\"row_id\")\n#   x_cols_bad <- x_cols_all[!(x_cols_all %in% x_cols_good)]\n#   \n#   colnames(x_out)[match(x_cols_bad,names(x_out))] <- \"bad_question_name\"\n#   \n#   x_out2 <- data.frame(bad_file_name=NA,x_out,stringsAsFactors=FALSE)\n#   x_out2[,\"bad_file_name\"] <- x[,\"aa\"]\n#   \n#   assign(paste(\"filing_text_comb\", x[\"flag\"], sep = \"\"),  x_out2, envir = .GlobalEnv)\n#   \n#   return(x_out2)\n#   \n# }, .progress = \"none\", .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)\n# \n# str_temp <- paste0(\"bad_list <- rbindlist(list(\",paste(\"filing_text_comb\",cc[,\"flag\"], sep=\"\", collapse = \",\"),\"),fill=TRUE)\")\n# expr_temp <- parse(text=str_temp)\n# eval(expr_temp)\n# \n# bad_list <- as.data.frame(bad_list,stringsAsFactors=FALSE)\n# \n# str(bad_list)\n# \n# #Check to see if download folder exists.  If not, create it.\n# question_bad_folder_path <- paste(output_directory, downloadfolder, \"questions_bad\", sep = slash, collapse = slash)  \n# create_directory(question_bad_folder_path,remove=1)\n# \n# write.table(bad_list,file=paste(question_bad_folder_path,\"\\\\\",\"nsar_b_questions_bad_full\",\".csv\",sep=\"\"), append=FALSE, na=\"NA\", \n#             sep = \",\", quote = TRUE,dec = \".\",  qmethod = \"double\", col.names=TRUE, row.names = FALSE)\n# \n# \n# bad_list_u <- unique(bad_list[,c(\"file\",\"DOCUMENT_INDEX\",\"TYPE\",\"SEQUENCE\",\"FILENAME\",\"DESCRIPTION\",\"row_id\")])\n# \n# str(bad_list_u)\n# \n# write.table(bad_list_u,file=paste(question_bad_folder_path,\"\\\\\",\"nsar_b_questions_bad_unique\",\".csv\",sep=\"\"), append=FALSE, na=\"NA\", \n#             sep = \",\", quote = TRUE,dec = \".\",  qmethod = \"double\", col.names=TRUE, row.names = FALSE)\n\n",
    "created" : 1408072201505.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "267|117|788|2|\n",
    "hash" : "3396173253",
    "id" : "6883E4F6",
    "lastKnownWriteTime" : 1409005475,
    "path" : "~/GitHub/Edgar_Filings_NSAR/Clean_Raw_Filings.R",
    "project_path" : "Clean_Raw_Filings.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}