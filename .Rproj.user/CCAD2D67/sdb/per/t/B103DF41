{
    "contents" : "# TODO: Add comment\n# \n# Author:  Brad\n# File:    Get_Header_Info.R\n# Version: 1.0\n# Date:    06.02.2014\n# Purpose: Get the header information\n###############################################################################\n\n###############################################################################\n# INITIAL SETUP;\ncat(\"SECTION: INITIAL SETUP\", \"\\n\")\n###############################################################################\n\n# Clear workspace\nrm(list = ls(all = TRUE))\n\n# Limit History to not exceed 50 lines\nSys.setenv(R_HISTSIZE = 500)\n\nrepo <- c(\"http://cran.us.r-project.org\")\noptions(repos = structure(repo))\noptions(install.packages.check.source = FALSE)\n# String as factors is False -- used for read.csv\noptions(StringsAsFactors = FALSE)\n\n# Default maxprint option\noptions(max.print = 500)\n# options(max.print=99999)\n\n# Memory limit\n#memory.limit(size = 8183)\n\n# Set location (1=HOME,2=WORK,3=CORALSEA FROM HOME,4=CORALSEA FROM WORK) Location <- 1\nLocation <- 1\n\nif (Location == 1) {\n  #setwd(\"C:/Research_temp3/\")\n  input_directory <- normalizePath(\"C:/Users/S.Brad/Dropbox/Research/Fund_Letters/Data\",winslash=\"\\\\\", mustWork=TRUE)\n  output_directory <- normalizePath(\"F:/Research_temp3\",winslash=\"\\\\\", mustWork=TRUE)\n  function_directory <- normalizePath(\"C:/Users/S.Brad/Dropbox/Research_Methods/R\", winslash = \"\\\\\", mustWork = TRUE)\n  treetag_directory <- normalizePath(\"C:/TreeTagger\",winslash=\"\\\\\", mustWork=TRUE)    \n  \n} else if (Location == 2) {\n  #setwd(\"C:/Research_temp3/\")\n  input_directory <- normalizePath(\"C:/Users/bdaughdr/Dropbox/Research/Fund_Letters/Data\",winslash=\"\\\\\", mustWork=TRUE)\n  output_directory <- normalizePath(\"C:/Research_temp3\",winslash=\"\\\\\", mustWork=TRUE)\n  function_directory <- normalizePath(\"C:/Users/bdaughdr/Dropbox/Research_Methods/R\",winslash=\"\\\\\", mustWork=TRUE) \n  treetag_directory <- normalizePath(\"C:/TreeTagger\",winslash=\"\\\\\", mustWork=TRUE)    \n  \n} else if (Location == 3) {\n  #setwd(\"//tsclient/C/Research_temp3/\")\n  input_directory <- normalizePath(\"H:/Research/Mutual_Fund_Letters/Data\", winslash = \"\\\\\", mustWork = TRUE)\n  #output_directory <- normalizePath(\"//tsclient/C/Research_temp3\", winslash = \"\\\\\", mustWork = TRUE)\n  output_directory <- normalizePath(\"C:/Users/bdaughdr/Documents/Research_temp3\",winslash=\"\\\\\", mustWork=TRUE)\n  function_directory <- normalizePath(\"//tsclient/C/Users/S.Brad/Dropbox/Research_Methods/R\", winslash = \"\\\\\", mustWork = TRUE)\n  treetag_directory <- normalizePath(\"//tsclient/C/TreeTagger\",winslash=\"\\\\\", mustWork=TRUE)    \n  \n} else if (Location == 4) {\n  #setwd(\"//tsclient/C/Research_temp3/\")\n  input_directory <- normalizePath(\"H:/Research/Mutual_Fund_Letters/Data\", winslash = \"\\\\\", mustWork = TRUE)\n  #output_directory <- normalizePath(\"//tsclient/C/Research_temp3\", winslash = \"\\\\\", mustWork = TRUE)\n  output_directory <- normalizePath(\"C:/Users/bdaughdr/Documents/Research_temp3\",winslash=\"\\\\\", mustWork=TRUE)\n  function_directory <- normalizePath(\"//tsclient/C/Users/bdaughdr/Dropbox/Research_Methods/R\", winslash = \"\\\\\", mustWork = TRUE)\n  treetag_directory <- normalizePath(\"//tsclient/C/TreeTagger\",winslash=\"\\\\\", mustWork=TRUE)       \n  \n} else {\n  cat(\"ERROR ASSIGNING DIRECTORIES\", \"\\n\")\n  \n}\nrm(Location)\n\n\n###############################################################################\n# FUNCTIONS;\ncat(\"SECTION: FUNCTIONS\", \"\\n\")\n###############################################################################\n\n#source(file=paste(function_directory,\"functions_db.R\",sep=\"\\\\\"),echo=FALSE)\n#source(file=paste(function_directory,\"functions_statistics.R\",sep=\"\\\\\"),echo=FALSE)\n#source(file=paste(function_directory,\"functions_text_analysis.R\",sep=\"\\\\\"),echo=FALSE)\nsource(file=paste(function_directory,\"functions_utilities.R\",sep=\"\\\\\"),echo=FALSE)\n\n\n\nimport_local_edgar_file <- function(file){\n  \n  #file <- filepath\n  \n  #webpage2 <- read.table(file=file,header = FALSE, na.strings=\"NA\",stringsAsFactors=FALSE, \n  #                       sep = \"\", quote = \"\\\"\",dec = \".\", fill = TRUE, comment.char = \"\")\n  #webpage2 <- read.table(file=file,header = FALSE, na.strings=\"\",sep=\"\\t\",stringsAsFactors=FALSE)\n  webpage2 <- read.table(file=file,header = FALSE, na.strings=\"\",sep=\"\\n\",stringsAsFactors=FALSE)\n  webpage2_row_count <- length(count.fields(file=file, sep = \"\\n\"))\n  \n  if(nrow(webpage2)!=webpage2_row_count) { cat(\"ROW COUNTS NOT EQUAL\",\"\\n\") }\n  \n  webpage_org_df <- as.data.frame(webpage2,stringsAsFactors=FALSE)\n  colnames(webpage_org_df) <- \"raw\"\n  webpage_org_df[,\"raw\"] <- toupper(webpage_org_df[,\"raw\"])\n  \n  webpage_df_xml_only1 <- webpage_org_df\n  webpage_df_xml_only2 <- webpage_df_xml_only1[!(is.na(webpage_df_xml_only1) | webpage_df_xml_only1==\"\")]\n  \n  webpage_df_xml_only_df <- as.data.frame(webpage_df_xml_only2,stringsAsFactors=FALSE)\n  colnames(webpage_df_xml_only_df) <- c(\"raw\")\n  \n  return(webpage_df_xml_only_df)\n  \n}  \n\nfix_edgar_tags <- function(file,entity_encoding){\n  \n  #file <- webpage_df_xml_only_df[,\"raw\"]\n  #entity_encoding <- entity_encoding_trim\n  \n  require(gdata)\n  \n  #Seperate tags and values\n  webpage_tags <- data.frame(tag_status_open=NA,\n                             tag_status_close=NA,\n                             raw=file,\n                             raw_encoded=NA,\n                             tag=NA,\n                             tag_short=NA,\n                             type=NA,\n                             value=NA,\n                             stringsAsFactors=FALSE)\n  #Get Tag\n  webpage_tags[,\"tag\"] <-  gsub(\".*?<(.*?)>.*\", \"\\\\1\", webpage_tags[,\"raw\"]) \n  \n  #Clean Tag\n  for(i in 1:ncol(webpage_tags))\n  {\n    webpage_tags[,i] <- iconv(webpage_tags[,i], \"latin1\", \"ASCII\", sub=\" \")\n  }\n  rm(i)\n  \n  for(i in which(sapply(webpage_tags,class)==\"character\"))\n  {\n    webpage_tags[[i]] = trim(webpage_tags[[i]])\n  }\n  rm(i)\n  \n  for (i in 1:ncol(webpage_tags))\n  {\n    webpage_tags[,i] <- unknownToNA(webpage_tags[,i], unknown=c(\"\",\".\",\"n/a\",\"na\",\"NA\",NA,\"null\",\"NULL\",NULL,\"nan\",\"NaN\",NaN,\n                                                                NA_integer_,\"NA_integer_\",NA_complex_,\"NA_complex_\",\n                                                                NA_character_,\"NA_character_\",NA_real_,\"NA_real_\"),force=TRUE)\n    webpage_tags[,i] <- ifelse(is.na(webpage_tags[,i]),NA, webpage_tags[,i])\n  } \n  rm(i)\n  \n  \n  #Determine is open/close tag\n  webpage_tags[,\"type\"] <-  ifelse(grepl(\"/\", webpage_tags[,\"tag\"]), \"close\", \"open\")\n  \n  #Get value\n  webpage_tags[,\"value\"] <- sapply(strsplit(webpage_tags[,\"raw\"], paste(\"<\",webpage_tags[,\"tag\"],\">\",sep=\"\")), \"[\", 2)\n  \n  \n  #Find all possible tags\n  raw_tags1 <- data.frame(raw=unique(webpage_tags[,\"tag\"]),\n                          cleaned=unique(webpage_tags[,\"tag\"]),\n                          stringsAsFactors=FALSE)\n  \n  #Replace hyphens\n  raw_tags1[,\"cleaned\"] <- gsub(\"-\",\"_\",raw_tags1[,\"cleaned\"])\n  \n  raw_tags1_trim <- raw_tags1[!(raw_tags1[,\"raw\"]==raw_tags1[,\"cleaned\"]),]\n  row.names(raw_tags1_trim) <- seq(nrow(raw_tags1_trim))\n  rm(raw_tags1)\n  \n  for (i in 1:nrow(raw_tags1_trim))\n  {\n    #i <- 1\n    #webpage_tags[,\"tag\"] <- gsub(raw_tags1_trim[i,\"raw\"],raw_tags1_trim[i,\"cleaned\"],webpage_tags[,\"tag\"])\n    #webpage_tags[,\"tag_short\"] <- gsub(raw_tags1_trim[i,\"raw\"],raw_tags1_trim[i,\"cleaned\"],webpage_tags[,\"tag_short\"])\n    \n    webpage_tags[,\"tag\"] <- ifelse(webpage_tags[,\"tag\"]==raw_tags1_trim[i,\"raw\"], raw_tags1_trim[i,\"cleaned\"], webpage_tags[,\"tag\"])\n    \n  } \n  rm(raw_tags1_trim,i)\n  \n  #Remove closing tag from tag_short column\n  webpage_tags[,\"tag_short\"] <- gsub(\"/\", \"\", webpage_tags[,\"tag\"])\n  \n  #Add brackets to tags\n  webpage_tags[,\"tag\"] <- paste(\"<\",webpage_tags[,\"tag\"],\">\",sep=\"\")\n  \n  #Find all possible tags\n  raw_tags2 <- data.frame(cleaned=unique(webpage_tags[,\"tag_short\"]),\n                          open_count=NA,\n                          close_count=NA,\n                          stringsAsFactors=FALSE)\n  \n  for (i in 1:nrow(raw_tags2))\n  {\n    #i <- 1\n    \n    webpage_tags[,\"tag_status_open\"] <- ifelse(grepl(paste(\"<\",raw_tags2[i,\"cleaned\"],\">\",sep=\"\"), webpage_tags[,\"tag\"]), 1, 0)\n    webpage_tags[,\"tag_status_close\"] <- ifelse(grepl(paste(\"</\",raw_tags2[i,\"cleaned\"],\">\",sep=\"\"), webpage_tags[,\"tag\"]), 1, 0)\n    \n    raw_tags2[i,\"open_count\"] <- sum(webpage_tags[,\"tag_status_open\"])\n    raw_tags2[i,\"close_count\"] <- sum(webpage_tags[,\"tag_status_close\"])\n    \n    webpage_tags[,\"tag_status_open\"] <- NA\n    webpage_tags[,\"tag_status_close\"] <- NA\n  } \n  rm(i)\n  \n  #Find tags that are not closed\n  raw_tags2_bad <- raw_tags2[which(raw_tags2[,\"open_count\"]-raw_tags2[,\"close_count\"] != 0),]\n  row.names(raw_tags2_bad) <- seq(nrow(raw_tags2_bad))\n  rm(raw_tags2)\n  \n  #Find rows that need to be fixed\n  colnames(webpage_tags)[match(\"tag_status_open\",names(webpage_tags))] <- \"Final_tag\"\n  colnames(webpage_tags)[match(\"tag_status_close\",names(webpage_tags))] <- \"Good\"\n  \n  #Find tags that need to be closed\n  webpage_tags[,\"Good\"] <- ifelse(webpage_tags[,\"tag_short\"] %in% raw_tags2_bad[,\"cleaned\"], 0, 1)\n  rm(raw_tags2_bad)\n  \n  #Entity Replacement\n  for (i in 1:nrow(entity_encoding))\n  {\n    webpage_tags[,\"value\"] <- gsub(entity_encoding[i,\"ASCII.Looks.Like\"], entity_encoding[i,\"Entity.Encoding\"], webpage_tags[,\"value\"])\n    \n  } \n  rm(entity_encoding,i)\n  \n  #Clean\n  for(i in which(sapply(webpage_tags,class)==\"character\"))\n  {\n    webpage_tags[[i]] = trim(webpage_tags[[i]])\n  }\n  rm(i)\n  \n  for (i in 1:ncol(webpage_tags))\n  {\n    webpage_tags[,i] <- unknownToNA(webpage_tags[,i], unknown=c(\"\",\".\",\"n/a\",\"na\",\"NA\",NA,\"null\",\"NULL\",NULL,\"nan\",\"NaN\",NaN,\n                                                                NA_integer_,\"NA_integer_\",NA_complex_,\"NA_complex_\",\n                                                                NA_character_,\"NA_character_\",NA_real_,\"NA_real_\"),force=TRUE)\n    webpage_tags[,i] <- ifelse(is.na(webpage_tags[,i]),NA, webpage_tags[,i])\n  } \n  rm(i)\n  \n  #Create raw encoded tags\n  webpage_tags[,\"raw_encoded\"] <- ifelse(is.na(webpage_tags[,\"value\"]),\n                                         webpage_tags[,\"tag\"], \n                                         paste(webpage_tags[,\"tag\"],webpage_tags[,\"value\"],sep=\"\"))\n  \n  #Creat final tags\n  webpage_tags[,\"Final_tag\"] <- ifelse(webpage_tags[,\"Good\"]==1, \n                                       webpage_tags[,\"raw_encoded\"], \n                                       paste(webpage_tags[,\"raw_encoded\"],\"</\",webpage_tags[,\"tag_short\"],\">\",sep=\"\"))\n  \n  return(webpage_tags)\n  \n}\n\nfind_individual_tags <- function(data,tag_raw_col,tag_short_col,tag_open_col,tag_close_col){\n  \n  #data <- webpage_sep\n  #tag_raw_col <- \"Final_tag\" \n  #tag_short_col <- \"tag_short\"\n  #tag_open_col <- \"tag_status_open\"\n  #tag_close_col <- \"tag_status_close\"\n  \n  sep_tags1 <- data.frame(cleaned=unique(data[,tag_short_col]),\n                          open_count=NA,\n                          close_count=NA,\n                          stringsAsFactors=FALSE)\n  \n  for (i in 1:nrow(sep_tags1))\n  {\n    #i <- 1\n    #i <- 2\n    \n    data[,tag_open_col] <- ifelse(grepl(paste(\"<\",sep_tags1[i,\"cleaned\"],\">\",sep=\"\"), data[,tag_raw_col]), 1, 0)\n    data[,tag_close_col] <- ifelse(grepl(paste(\"</\",sep_tags1[i,\"cleaned\"],\">\",sep=\"\"), data[,tag_raw_col]), 1, 0)\n    \n    sep_tags1[i,\"open_count\"] <- sum(data[,tag_open_col])\n    sep_tags1[i,\"close_count\"] <- sum(data[,tag_close_col])\n    \n    data[,tag_open_col] <- NA\n    data[,tag_close_col] <- NA\n  } \n  rm(i)\n  \n  return(sep_tags1)\n  \n}\n\ncreate_tag_index <- function(tag,data,tag_raw_col){\n  \n  #tag <- sep_tags2[1]\n  #data <- webpage_sep\n  #tag_raw_col <- \"Final_tag\"\n  \n  temp_tag <- data.frame(temp_col=data[,tag_raw_col], \n                         temp_open_flag=NA,\n                         temp_open_index=NA,\n                         temp_close_flag=NA,\n                         temp_close_index=NA,\n                         temp_diff_flag=NA,\n                         temp_comb_flag=NA,\n                         temp_comb_index=NA, \n                         stringsAsFactors=FALSE)\n  \n  temp_tag[,\"temp_open_flag\"] <- ifelse(grepl(paste(\"<\",tag,\">\",sep=\"\"), temp_tag[,\"temp_col\"]), 1, 0)\n  temp_tag[,\"temp_open_index\"] <- apply(data.frame(temp_tag[,\"temp_open_flag\"]), 2, cumsum)\n  \n  temp_tag[,\"temp_close_flag\"] <- ifelse(grepl(paste(\"</\",tag,\">\",sep=\"\"), temp_tag[,\"temp_col\"]), 1, 0)\n  temp_tag[,\"temp_close_index\"] <- apply(data.frame(temp_tag[,\"temp_close_flag\"]), 2, cumsum)\n  \n  temp_tag[,\"temp_diff_flag\"] <- (temp_tag[,\"temp_open_index\"]-temp_tag[,\"temp_close_index\"])\n  \n  temp_tag[,\"temp_comb_flag\"] <- (temp_tag[,\"temp_close_flag\"]+temp_tag[,\"temp_diff_flag\"])\n  temp_tag[,\"temp_comb_index\"] <- ifelse(temp_tag[,\"temp_comb_flag\"]==1, temp_tag[,\"temp_open_index\"], 0)\n  \n  colnames(temp_tag) <- c(tag_raw_col, \n                          paste(tag,\"OPEN_FLAG\",sep=\"_\"), paste(tag,\"OPEN_INDEX\",sep=\"_\"),\n                          paste(tag,\"CLOSE_FLAG\",sep=\"_\"), paste(tag,\"CLOSE_INDEX\",sep=\"_\"),\n                          paste(tag,\"DIFF_FLAG\",sep=\"_\"),\n                          paste(tag,\"COMB_FLAG\",sep=\"_\"), paste(tag,\"COMB_INDEX\",sep=\"_\"))\n  \n  output <- temp_tag[,c(paste(tag,\"COMB_INDEX\",sep=\"_\"))]\n  \n  return(output)\n  \n}\n\n# extract_filing_section_by_drop <- function(x,xml_col,index_col,sub_index_col){\n#   \n#   # filer_index_val <- \"FILER\"\n#   # filer_company_data_sub_index_val <- \"COMPANY_DATA\"\n#   \n#   # xml_col <- \"Final_tag\"\n#   # index_col <- paste(filer_index_val,\"INDEX\",sep=\"_\")\n#   # sub_index_col <- paste(filer_company_data_sub_index_val,\"INDEX\",sep=\"_\")\n#   # x <- filer_data_temp[filer_data_temp[,index_col]==1,]\n#   \n#   require(XML)\n#   \n#   xml_col_num <- which(colnames(x)==xml_col)\n#   index_col_num <- which(colnames(x)==index_col)\n#   sub_index_col_num <-  unlist(lapply(sub_index_col, function(y,cols){ which(cols==y) },cols=colnames(x)))\n#   sub_index_col_num_max <- max(sub_index_col_num)\n#   \n#   x_trim <- x[,c(xml_col_num,seq(index_col_num,sub_index_col_num_max))]\n#   \n#   keep_rows <- lapply(sub_index_col, function(y,data){\n#     \n#     #y <- \"FILER_INDEX\"\n#     #y <- \"SERIES_AND_CLASSES_CONTRACTS_DATA_INDEX\"\n#     #data <- x_trim\n#     \n#     if(y %in% colnames(data)) {\n#       \n#       return(which(data[,y]!=0))\n#       \n#     } else {\n#       \n#       return(NA)\n#       \n#     }\n#     \n#   },data=x_trim)\n#   keep_rows <- sort(unique(unlist(keep_rows)))\n#   drop_rows <- which(!(seq(1,nrow(x_trim)) %in% keep_rows))\n#   \n#   x_trim2 <- x_trim[c(1,drop_rows,nrow(x_trim)),]\n#   \n#   temp_df <- xmlToDataFrame(x_trim2[,xml_col])\n#   \n#   return(temp_df)\n# }\n# \n# extract_filing_section_by_keep <- function(x,xml_col,index_col,sub_index_col){\n#   \n#   # xml_col <- \"Final_tag\"\n#   # index_col <- filer_index_val2\n#   # sub_index_col <- filer_former_company_sub_index_val2\n#   # x <- filer_data_temp[filer_data_temp[,index_col]==1,]\n#   \n#   \n#   require(XML)\n#   \n#   xml_col_num <- which(colnames(x)==xml_col)\n#   index_col_num <- which(colnames(x)==index_col)\n#   sub_index_col_num <-  unlist(lapply(sub_index_col, function(y,cols){ which(cols==y) },cols=colnames(x)))\n#   sub_index_col_num_max <- max(sub_index_col_num)\n#   \n#   x_trim <- x[,c(xml_col_num,seq(index_col_num,sub_index_col_num_max))]\n#   \n#   keep_rows <- lapply(sub_index_col, function(y,data){\n#     \n#     #y <- \"FILER_INDEX\"\n#     #y <- \"SERIES_AND_CLASSES_CONTRACTS_DATA_INDEX\"\n#     #data <- x_trim\n#     \n#     if(y %in% colnames(data)) {\n#       \n#       return(which(data[,y]!=0))\n#       \n#     } else {\n#       \n#       return(NA)\n#       \n#     }\n#     \n#   },data=x_trim)\n#   keep_rows <- sort(unique(unlist(keep_rows)))\n#   drop_rows <- which(!(seq(1,nrow(x_trim)) %in% keep_rows))\n#   \n#   x_trim2 <- x_trim[c(1,keep_rows,nrow(x_trim)),]\n#   \n#   temp_df <- xmlToDataFrame(x_trim2[,xml_col])\n#   \n#   return(temp_df)\n# }\n\n\nextract_filing_section_by_drop <- function(x,xml_col,tag_col,index_col,sub_index_col,index_flag){\n  \n  #xml_col=\"Final_tag\"\n  #tag_col=\"tag_short\"\n\n  #index_col=filer_index_val\n  #sub_index_col=filer_former_company_sub_index_val\n  #index_flag <- filer_index_flag\n  \n  #x <- filer_data_temp[filer_data_temp[,filer_index_val2]==1,]\n  #x <- filer_data_temp[filer_data_temp[,filer_index_val2]==2,]\n  #x <- filer_data_temp[filer_data_temp[,filer_index_val2]==3,]\n  #x <- filer_data_temp[filer_data_temp[,filer_index_val2]==4,]\n  \n  #index_col=header_index_val\n  #sub_index_col=header_info_sub_index_val\n  #index_flag=header_index_flag\n  \n  #x <- header_data_temp[header_data_temp[,header_index_val2]==1,]\n  \n  require(XML)\n  \n  extract_filing_section_by_drop_sub <- function(x,xml_col,index_col_sub,sub_index_col_sub){\n\n    # xml_col <- xml_col\n    # index_col_sub <- index_col2\n    # sub_index_col_sub <- sub_index_col2\n    # x <- x\n    \n    xml_col_num <- which(colnames(x)==xml_col)\n    index_col_num <- which(colnames(x)==index_col_sub)\n    sub_index_col_num <-  unlist(lapply(sub_index_col_sub, function(y,cols){ which(cols==y) },cols=colnames(x)))\n    sub_index_col_num_max <- max(sub_index_col_num)\n    \n    x_trim <- x[,c(xml_col_num,seq(index_col_num,sub_index_col_num_max))]\n    \n    keep_rows <- lapply(sub_index_col_sub, function(y,data){\n      \n      #y <- \"FILER_INDEX\"\n      #y <- \"SERIES_AND_CLASSES_CONTRACTS_DATA_INDEX\"\n      #data <- x_trim\n      \n      if(y %in% colnames(data)) {\n        \n        return(which(data[,y]!=0))\n        \n      } else {\n        \n        return(NA)\n        \n      }\n      \n    },data=x_trim)\n    keep_rows <- sort(unique(unlist(keep_rows)))\n    drop_rows <- which(!(seq(1,nrow(x_trim)) %in% keep_rows))\n    \n    x_trim2 <- x_trim[c(1,drop_rows,nrow(x_trim)),]\n    \n    temp_df <- xmlToDataFrame(x_trim2[,xml_col])\n    \n    return(temp_df)\n  }\n  index_col2 <- paste(index_col,\"INDEX\",sep=\"_\")\n  sub_index_col2 <- paste(sub_index_col,\"INDEX\",sep=\"_\")\n  \n  index_val2 <- unique(x[,index_col2])\n  \n  flag <- (sub_index_col %in% x[,tag_col])\n  \n  if(any(flag)) {\n    \n    merge0 <- data.frame(file=file,index_col=index_val2,stringsAsFactors=FALSE)\n    colnames(merge0) <- c(\"file\",index_col2)\n    \n    merge1 <- extract_filing_section_by_drop_sub(x,xml_col,index_col2,sub_index_col2)\n    merge <- data.frame(merge0,merge1,stringsAsFactors=FALSE)\n    \n    rm(merge0,merge1)\n    \n  } else {\n    \n    merge <- data.frame(file=file,index_col=index_val2,stringsAsFactors=FALSE)\n    colnames(merge) <- c(\"file\",index_col2)\n    \n  }\n  \n  rm(index_col2,sub_index_col2,index_val2,flag)\n  \n  return(merge)\n  \n}\n\nextract_filing_section_by_keep <- function(x,xml_col,tag_col,index_col,sub_index_col,index_flag){\n  \n  #xml_col=\"Final_tag\"\n  #tag_col=\"tag_short\"\n  #index_col=filer_index_val\n  #sub_index_col=filer_former_company_sub_index_val\n  #index_flag <- filer_index_flag\n  #x <- filer_data_temp[filer_data_temp[,filer_index_val2]==1,]\n  #x <- filer_data_temp[filer_data_temp[,filer_index_val2]==2,]\n  #x <- filer_data_temp[filer_data_temp[,filer_index_val2]==3,]\n  #x <- filer_data_temp[filer_data_temp[,filer_index_val2]==4,]\n  \n  require(XML)\n  \n  extract_filing_section_by_keep_sub <- function(x,xml_col,index_col,sub_index_col){\n    \n    # xml_col <- \"Final_tag\"\n    # index_col <- filer_index_val2\n    # sub_index_col <- filer_former_company_sub_index_val2\n    # x <- filer_data_temp[filer_data_temp[,index_col]==1,]\n    \n    xml_col_num <- which(colnames(x)==xml_col)\n    index_col_num <- which(colnames(x)==index_col)\n    sub_index_col_num <-  unlist(lapply(sub_index_col, function(y,cols){ which(cols==y) },cols=colnames(x)))\n    sub_index_col_num_max <- max(sub_index_col_num)\n    \n    x_trim <- x[,c(xml_col_num,seq(index_col_num,sub_index_col_num_max))]\n    \n    keep_rows <- lapply(sub_index_col, function(y,data){\n      \n      #y <- \"FILER_INDEX\"\n      #y <- \"SERIES_AND_CLASSES_CONTRACTS_DATA_INDEX\"\n      #data <- x_trim\n      \n      if(y %in% colnames(data)) {\n        \n        return(which(data[,y]!=0))\n        \n      } else {\n        \n        return(NA)\n        \n      }\n      \n    },data=x_trim)\n    keep_rows <- sort(unique(unlist(keep_rows)))\n    drop_rows <- which(!(seq(1,nrow(x_trim)) %in% keep_rows))\n    \n    x_trim2 <- x_trim[c(1,keep_rows,nrow(x_trim)),]\n    \n    temp_df <- xmlToDataFrame(x_trim2[,xml_col])\n    \n    return(temp_df)\n  }\n  \n  index_col2 <- paste(index_col,\"INDEX\",sep=\"_\")\n  sub_index_col2 <- paste(sub_index_col,\"INDEX\",sep=\"_\")\n  \n  index_val2 <- unique(x[,index_col2])\n  \n  flag <- (sub_index_col %in% x[,tag_col])\n  \n  if(any(flag)) {\n    \n    merge0 <- data.frame(file=file,index_col=index_val2,stringsAsFactors=FALSE)\n    colnames(merge0) <- c(\"file\",index_col2)\n    \n    merge1 <- extract_filing_section_by_keep_sub(x,xml_col,index_col2,sub_index_col2)\n    merge <- data.frame(merge0,merge1,stringsAsFactors=FALSE)\n    \n    rm(merge0,merge1)\n    \n  } else {\n    \n    merge <- data.frame(file=file,index_col=index_val2,stringsAsFactors=FALSE)\n    colnames(merge) <- c(\"file\",index_col2)\n    \n  }\n  \n  rm(index_col2,sub_index_col2,index_val2,flag)\n  \n  return(merge)\n  \n}\n\ncreate_sub_index_sequence <- function(data,index_val,sub_index_val,nonindex_prefix){\n  \n  #data <- header_intro_merge2\n  #index_val <- header_index_val2\n  #sub_index_val <- header_info_sub_index_val2\n  #nonindex_prefix <- \"\"\n  \n  #data <- filer_company_data_merge2\n  #index_val <- paste(filer_index_val,\"INDEX\",sep=\"_\")\n  #sub_index_val <- paste(filer_company_data_sub_index_val,\"INDEX\",sep=\"_\")\n  #nonindex_prefix <- \"\"\n  \n  #data <- filer_filing_values_merge2\n  #index_val <- paste(filer_index_val,\"INDEX\",sep=\"_\")\n  #sub_index_val <- paste(filer_filing_values_sub_index_val,\"INDEX\",sep=\"_\")\n  #nonindex_prefix <- \"\"\n  \n  #data <- filer_former_company_merge2\n  #index_val <- paste(filer_index_val,\"INDEX\",sep=\"_\")\n  #sub_index_val <- paste(filer_former_company_sub_index_val,\"INDEX\",sep=\"_\")\n  #nonindex_prefix <- \"\"\n  \n  #data <- filer_business_address_merge2\n  #index_val <- paste(filer_index_val,\"INDEX\",sep=\"_\")\n  #sub_index_val <- paste(filer_business_address_sub_index_val,\"INDEX\",sep=\"_\")\n  #nonindex_prefix <- \"_BUSINESS\"\n  \n  #data <- series_class_contract_merge2\n  #index_val <- paste(series_index_val,\"INDEX\",sep=\"_\")\n  #sub_index_val <- paste(series_class_contract_sub_index_val,\"INDEX\",sep=\"_\")\n  #nonindex_prefix <- \"\"\n  \n  require(plyr)\n  \n  sub_index_val_top <- head(sub_index_val,1)\n  \n    data2 <- ddply(.data=data,.variables=index_val,.fun=function(x,sub_index_val_top){\n      \n      #x <- data[1,]\n      #sub_index_val_top <- sub_index_val_top\n      \n      data2_temp <- data.frame(tempseq=NA,x,stringsAsFactors=FALSE)\n      \n      \n#       if (ncol(data2_temp)==4) {\n# \n#         #data2_temp <- data2_temp[!is.na(data2_temp[,4]),]\n#         if(!is.na(data2_temp[,4])){\n#           \n#           data2_temp[,\"tempseq\"] <- seq(1,nrow(data2_temp),1)\n#         }\n#         \n#       } else if (ncol(data2_temp)>=5) {\n#         \n#         #data2_temp <- data2_temp[rowSums(is.na(data2_temp[,4:ncol(data2_temp)]))<(ncol(data2_temp)-3),]\n#         if(rowSums(is.na(data2_temp[,4:ncol(data2_temp)]))==(ncol(data2_temp)-3)){\n#           \n#           data2_temp[,\"tempseq\"] <- seq(1,nrow(data2_temp),1)\n#         }\n#         \n#       } else {\n#         \n#       }\n\n      data2_temp[,\"tempseq\"] <- seq(1,nrow(data2_temp),1)\n\n      colnames(data2_temp)[1] <- sub_index_val_top\n      \n      return(data2_temp)\n      \n    },sub_index_val_top=sub_index_val_top)\n    data2[sapply(data2, is.factor)] <- lapply(data2[sapply(data2, is.factor)], as.character)\n   \n  \n  if (ncol(data2)==3) {\n    \n    data2[,1] <- NA\n    \n  }\n  \n  data2_cols <- colnames(data2)\n  filer_company_data_index_cols <- c(\"file\",index_val,sub_index_val_top)\n  filer_company_data_non_index_cols <- data2_cols[!(data2_cols %in% filer_company_data_index_cols)]\n  data3 <- data2[,c(filer_company_data_index_cols,filer_company_data_non_index_cols)]\n  \n  data4 <- data3\n  data4_new_colnames <- c(filer_company_data_index_cols,paste(filer_company_data_non_index_cols,nonindex_prefix,sep=\"\"))\n  data4_new_colnames <- data4_new_colnames[!(data4_new_colnames==\"\")]\n  colnames(data4) <- data4_new_colnames\n  \n  data4 <- data4[order(data4[,\"file\"],data4[,index_val],data4[,sub_index_val_top]),]\n  row.names(data4) <- seq(nrow(data4))\n  \n  rm(data2,data3, filer_company_data_index_cols,filer_company_data_non_index_cols,data4_new_colnames)\n  \n  return(data4)\n}\n\ncreate_comb_df <- function(list,list_pos,list_file_col,filing_info,filing_info_file_col){\n  \n  #list <- trim_headings\n  #list_pos <- 1\n  #list_file_col <- \"file\"\n  #filing_info <- filings_trim2_short\n  #filing_info_file_col <- \"file_header\"\n  \n  require(plyr)\n  \n  temp_comb <- sapply(list, \"[\", list_pos)\n  temp_comb2 <- do.call(rbind.fill,temp_comb)\n  temp_comb3 <- merge(filing_info,temp_comb2, by.x=filing_info_file_col,by.y=list_file_col,\n                      all.x=TRUE, all.y=FALSE, sort=FALSE, suffixes=c(\".x\",\".y\"),incomparables = NA)\n  temp_comb3 <- temp_comb3[order(temp_comb3[,filing_info_file_col]),]\n  row.names(temp_comb3) <- seq(nrow(temp_comb3))\n  temp_comb3 <- temp_comb3[,c(colnames(filing_info),\n                              colnames(temp_comb3[,!(colnames(temp_comb3) %in% colnames(filing_info))]))]\n  \n  temp_comb4 <- temp_comb3\n  temp_comb4[sapply(temp_comb4, is.factor)] <- lapply(temp_comb4[sapply(temp_comb4, is.factor)], as.character)\n  \n  return(temp_comb4)\n  \n}\n\n\n###############################################################################\n# LIBRARIES;\ncat(\"SECTION: LIBRARIES\", \"\\n\")\n###############################################################################\n\n#Load External Packages\nexternal_packages <- c(\"gdata\",\"plyr\",\"XML\")\ninvisible(unlist(sapply(external_packages,load_external_packages, repo_str=repo, simplify=FALSE, USE.NAMES=FALSE)))\ninstalled_packages <- list_installed_packages(external_packages)\n\nrm(installed_packages)\n\n\n###############################################################################\n#PARAMETERS;\n###############################################################################\n\n#If using windows, set to \"\\\\\" - if mac (or unix), set to \"/\";\nslash <- \"\\\\\"\n\n#First year you want index files for:\n\n#startyear <- 1993\nstartyear <- 2003\n\n#Last year you want index files for:\n#endyear <- 2004\nendyear <- 2013\n\n#First qtr you want index files for (usually 1):\nstartqtr <- 1\n\n#Last qtr you want index files for (usually 4):\nendqtr <- 4\n\n#downloadfolder <- \"N-1\"\n#downloadfolder <- \"DEF 14A\"\n#downloadfolder <- \"MF_All\"\n#downloadfolder <- \"MF_SemiAnnual_Reports\"\n#downloadfolder <- \"MF_Annual_Reports\"\ndownloadfolder <- \"MF_Shareholder_Reports_N-CSR-A\"\n#downloadfolder <- \"MF_Shareholder_Reports_N-CSRS-A\"\n#downloadfolder <- \"MF_Shareholder_Reports_N-CSR\"\n#downloadfolder <- \"MF_Shareholder_Reports_N-CSRS\"\n\n#The sub directory you are going to download filings to\nheaderfolder <- \"header\"\n\n#The file that will contain the filings you want to download.\ninfile <- \"filings_list_comb.csv\"\n\nyr_qtr_comb <- expand.grid(yr = seq(startyear, endyear, 1), qtr = seq(1, 4, 1))\n\nyr_qtr_comb <- yr_qtr_comb[order(yr_qtr_comb[,\"yr\"],yr_qtr_comb[,\"qtr\"]),]\nrow.names(yr_qtr_comb) <- seq(nrow(yr_qtr_comb))\n\nyr_qtr_comb[,\"qtr\"] <- ifelse((yr_qtr_comb[,\"yr\"]==startyear & yr_qtr_comb[,\"qtr\"] < startqtr),NA,yr_qtr_comb[,\"qtr\"])\nyr_qtr_comb[,\"qtr\"] <- ifelse((yr_qtr_comb[,\"yr\"]==endyear & yr_qtr_comb[,\"qtr\"] > endqtr),NA,yr_qtr_comb[,\"qtr\"])\n\nrm(startyear,startqtr,endyear,endqtr)\n\nyr_qtr_comb <- yr_qtr_comb[(!is.na(yr_qtr_comb[,\"qtr\"])),]\nrow.names(yr_qtr_comb) <- seq(nrow(yr_qtr_comb))\n\nyr_qtr_comb2 <- data.frame(yr_qtr_comb,\n                           yr_qtr=NA,\n                           stringsAsFactors=FALSE)\n\nrm(yr_qtr_comb)\n\nyr_qtr_comb2[,\"yr_qtr\"] <- paste(yr_qtr_comb2[,\"yr\"],\n                                 yr_qtr_comb2[,\"qtr\"],\n                                 sep=\"_\")\n\n#Check to see if output directory exists.  If not, create it.\ncreate_directory(output_directory,remove=1)\n\n#Check to see if download folder exists.  If not, create it.\ndownload_folder_path <- paste(output_directory, downloadfolder, sep = slash, collapse = slash)  \ncreate_directory(download_folder_path,remove=1)\n\n\n###############################################################################\ncat(\"Get list files \\n\")\n###############################################################################\n\nfilings <- read.table(file=paste(download_folder_path,\"\\\\\",infile,sep=\"\"), header = TRUE, na.strings=\"NA\",stringsAsFactors=FALSE, \n                      sep = \",\", quote = \"\\\"\",dec = \".\", fill = TRUE, comment.char = \"\")\n\nfilings2 <- data.frame(yr_qtr=NA,\n                       filings,\n                       stringsAsFactors=FALSE)\n\nrm(filings)\n\nfilings2[,\"yr_qtr\"] <- paste(filings2[,\"yr\"],\n                             filings2[,\"qtr\"],\n                             sep=\"_\")\n\nfilings2 <- filings2[,c(c(\"yr\",\"qtr\",\"yr_qtr\"),\n                        colnames(filings2[,!(colnames(filings2) %in% c(\"yr\",\"qtr\",\"yr_qtr\"))]))]\n\nfilings_trim <- filings2[ filings2[,\"yr_qtr\"] %in% yr_qtr_comb2[,\"yr_qtr\"],]\nrow.names(filings_trim) <- seq(nrow(filings_trim))\n\nfilings_trim2 <- data.frame(overall_id=NA,\n                            filings_trim,\n                            stringsAsFactors=FALSE)\nfilings_trim2[,\"overall_id\"] <- seq(1,nrow(filings_trim2),1)\n\nrm(filings_trim)\n\n\n###############################################################################\ncat(\"Import HTML entities \\n\")\n###############################################################################\n\n#Encode HTML entities\n#entity_encoding0 <- read.csv(file=paste(output_directory,\"Entity_encoding.csv\",sep=\"\\\\\"),header=TRUE,na.strings=\"NA\",stringsAsFactors=FALSE)\nentity_encoding0 <- read.table(file=paste(output_directory,\"Entity_encoding.csv\",sep=\"\\\\\"), header = TRUE, na.strings=\"NA\",stringsAsFactors=FALSE, \n                              sep = \",\", quote = \"\\\"\",dec = \".\", fill = TRUE, comment.char = \"\")\n\n#Clean\nentity_encoding_clean <- entity_encoding0\n#for(i in 1:ncol(entity_encoding_clean))\n#{\n#  entity_encoding_clean[,i] <- iconv(entity_encoding_clean[,i], \"latin1\", \"ASCII\", sub=\"\")\n#}\n\nfor(i in which(sapply(entity_encoding_clean,class)==\"character\"))\n{\n  entity_encoding_clean[[i]] = trim(entity_encoding_clean[[i]])\n}\nrm(i)\n\nfor (i in 1:ncol(entity_encoding_clean))\n{\n  entity_encoding_clean[,i] <- unknownToNA(entity_encoding_clean[,i], unknown=c(\"\",\".\",\"n/a\",\"na\",\"NA\",NA,\"null\",\"NULL\",NULL,\"nan\",\"NaN\",NaN,\n                                                                                NA_integer_,\"NA_integer_\",NA_complex_,\"NA_complex_\",\n                                                                                NA_character_,\"NA_character_\",NA_real_,\"NA_real_\"),force=TRUE)\n  entity_encoding_clean[,i] <- ifelse(is.na(entity_encoding_clean[,i]),NA, entity_encoding_clean[,i])\n} \nrm(i)\n\nentity_encoding <- entity_encoding_clean[(!(is.na(entity_encoding_clean[,\"ASCII.Looks.Like\"])) & \n                                                 !(is.na(entity_encoding_clean[,\"Entity.Encoding\"]))),]\nrow.names(entity_encoding) <- seq(nrow(entity_encoding))\n\nrm(entity_encoding0,entity_encoding_clean)\n\n\n###############################################################################\ncat(\"Get header information \\n\")\n###############################################################################\n\nfilings_header_info <- dlply(.data=filings_trim2, .variables=c(\"yr\"), \n                             .fun = function(x, path_ouput,sub_folder,entity_encoding){\n                               \n                               #x <- filings_trim2[(filings_trim2[,\"yr\"]==2003),]\n                               #x <- filings_trim2[(filings_trim2[,\"yr\"]==2013),]\n                               #path_output <- paste(output_directory,downloadfolder,sep=slash)\n                               #subfolder <- headerfolder\n                               #entity_encoding <- entity_encoding\n                               \n                               filings_trim2_short <- x[,!(colnames(x) %in% c(\"file_txt\",\"file_index_htm\"))]\n                               \n                               yr <-  unique(x[,\"yr\"])\n                               \n                               cat(\"\\n\",yr,\"\\n\")\n                               \n                               #Check to see if yr folder exists.  If not, create it.\n                               yr_folder_path <- paste(path_output, yr, sep = \"\\\\\", collapse = \"\\\\\")   \n                               create_directory(yr_folder_path,remove=1)\n                               \n                               sub_folder_path <- paste(yr_folder_path, subfolder, sep = \"\\\\\", collapse = \"\\\\\")   \n                               create_directory(sub_folder_path,remove=1)\n                               \n                               #Get name of downloaded files\n                               downloaded_files <- data.frame(file=list.files(sub_folder_path),stringsAsFactors=FALSE)\n                               downloaded_files2 <- ddply(.data=downloaded_files, .variables=c(\"file\"), .fun = function(x,folder){\n                                 \n                                 filepath <- paste(folder,x,sep=\"\\\\\")\n                                 output <- data.frame(filepath=filepath,file.info(filepath),stringsAsFactors=FALSE)\n                                 \n                               }, folder=sub_folder_path, \n                               .progress = \"none\", .inform = FALSE, .parallel = FALSE, .paropts = NULL, .id = NA)\n                               \n                               rm(downloaded_files)\n                               \n                               downloaded_files2 <- downloaded_files2[order(downloaded_files2[,\"filepath\"]),]\n                               row.names(downloaded_files2) <- seq(nrow(downloaded_files2))\n                               \n                               downloaded_files3 <- data.frame(yr_id=NA,\n                                                               downloaded_files2,\n                                                               stringsAsFactors=FALSE)\n                               downloaded_files3[,\"yr_id\"] <- seq(1,nrow(downloaded_files3),1)\n                               \n                               rm(downloaded_files2)\n                               \n                               trim_headings_header <- dlply(.data=downloaded_files3, .variables=c(\"yr_id\"), \n                                                             .fun = function(y,entity_encoding){\n                                                               \n                                                               #y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000842939-03-000055.hdr.sgml\"),]\n                                                               #y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000078713-13-000036.hdr.sgml\"),]\n                                                               #y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0001193125-13-456867.hdr.sgml\"),]\n                                                               #y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0001571049-13-000837.hdr.sgml\"),]\n                                                               #y <- downloaded_files3[1,]\n                                                               \n                                                               #entity_encoding <- entity_encoding\n                                                               \n                                                               file <- unique(y[,\"file\"])\n                                                               filepath <- unique(y[,\"filepath\"])\n                                                               \n                                                               cat(\"\\n\",file,\"\\n\")\n                                                               \n                                                               webpage_df_xml_only_df <- import_local_edgar_file(filepath)\n                                                               webpage_df_xml_only_df[,\"raw\"] <- gsub(\"&NBSP;\",\" \",webpage_df_xml_only_df[,\"raw\"])\n                                                               \n                                                               webpage_tags <- fix_edgar_tags(webpage_df_xml_only_df[,\"raw\"],entity_encoding)\n                                                               \n                                                               rm(webpage_df_xml_only_df)\n                                                               \n                                                               webpage_sep <- webpage_tags\n                                                               webpage_sep[1,\"Final_tag\"] <- \"<SEC_HEADER>\"\n                                                               \n                                                               rm(webpage_tags)\n                                                               \n                                                               webpage_sep <- data.frame(webpage_sep,tag_status_open=NA,tag_status_close=NA,stringsAsFactors=FALSE)\n                                                               \n                                                               #Find all possible tags\n                                                               sep_tags1 <- find_individual_tags(data=webpage_sep,tag_raw_col=\"Final_tag\",tag_short_col=\"tag_short\",\n                                                                                                 tag_open_col=\"tag_status_open\",tag_close_col=\"tag_status_close\")\n                                                               sep_tags2 <- sep_tags1[,\"cleaned\"]\n                                                               \n                                                               index_temp <- llply(.data=sep_tags2, create_tag_index,data=webpage_sep, tag_raw_col=\"Final_tag\",\n                                                                                   .progress = \"none\", .inform = FALSE,.parallel = FALSE, .paropts = NULL)\n                                                               index <- do.call(cbind, index_temp)\n                                                               index <- as.data.frame(index,stringsAsFactors=FALSE)\n                                                               colnames(index) <- paste(sep_tags2,\"INDEX\",sep=\"_\")\n                                                               rm(index_temp)\n                                                               \n                                                               webpage_sep_index <- data.frame(file=file, Final_tag=webpage_sep[,\"Final_tag\"],tag_short=webpage_sep[,\"tag_short\"],index,stringsAsFactors=FALSE)\n                                                               rm(index)\n                                                               \n                                                               #Header Section - Setup\n                                                               header_index_val <- \"SEC_HEADER\"\n                                                               header_index_val2 <- paste(header_index_val,\"INDEX\",sep=\"_\")\n                                                               header_index_flag <- (header_index_val %in% sep_tags2)\n                                                               \n                                                               #Header Section - Intro\n                                                               header_info_sub_index_val <- c(\"FILER\",\"SERIES_AND_CLASSES_CONTRACTS_DATA\")\n                                                               header_info_sub_index_val2 <- paste(header_info_sub_index_val,\"INDEX\",sep=\"_\")\n                                                                \n#                                                                 if(header_index_flag) {\n#                                                                   \n#                                                                   header_data_temp <- webpage_sep_index[!(webpage_sep_index[,header_index_val2] %in% c(0)),]\n#                                                                   row.names(header_data_temp) <- seq(nrow(header_data_temp))\n#                                                                   \n#                                                                   header_intro_merge1 <- dlply(.data=header_data_temp, .variables=c(\"file\",header_index_val2), extract_filing_section_by_drop,\n#                                                                                                xml_col=\"Final_tag\",tag_col=\"tag_short\",index_col=header_index_val,\n#                                                                                                sub_index_col=header_info_sub_index_val, index_flag=header_index_flag)\n#                                                                   header_intro_merge2 <- do.call(rbind.fill,header_intro_merge1)\n#                                                                   \n#                                                                   header_intro_merge <-  create_sub_index_sequence(data=header_intro_merge2,index_val=header_index_val2,\n#                                                                                                                    sub_index_val=header_info_sub_index_val2,nonindex_prefix=\"\")\n#                                                                   \n#                                                                   rm(header_data_temp,header_intro_merge1,header_intro_merge2)\n#                                                                   \n#                                                                 } else {\n#                                                                   \n#                                                                   header_intro_merge <- data.frame(file=file,index_col=NA,sub_index_col=NA,stringsAsFactors=FALSE)\n#                                                                   colnames(header_intro_merge) <- c(\"file\",header_index_val2,head(header_info_sub_index_val2,1))\n#                                                                   \n#                                                                 }\n                                                                rm(header_info_sub_index_val,header_info_sub_index_val2)\n                                                                \n#                                                                 \n#                                                                 \n#                                                                 df_comb_list <- list(header_intro_merge)\n#                                                                 \n#                                                                 rm(header_intro_merge)\n#                                                                 \n#                                                                 rm(file,filepath)\n#                                                                 rm(sep_tags1,sep_tags2,webpage_sep,webpage_sep_index)\n#                                                                 \n#                                                                 return(df_comb_list)\n#                                                                \n                                                             },entity_encoding=entity_encoding,\n                                                             .progress = \"text\",.inform = TRUE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)\n                              \nheader_intro_comb <- create_comb_df(list=trim_headings_header,list_pos=1,list_file_col=\"file\",filing_info=filings_trim2_short,filing_info_file_col=\"file_header\")\n                               \n\ntrim_headings_filer <- dlply(.data=downloaded_files3, .variables=c(\"yr_id\"), \n                              .fun = function(y,entity_encoding){\n                                \n                                #y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000842939-03-000055.hdr.sgml\"),]\n                                #y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000078713-13-000036.hdr.sgml\"),]\n                                #y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0001193125-13-456867.hdr.sgml\"),]\n                                #y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0001571049-13-000837.hdr.sgml\"),]\n                                #y <- downloaded_files3[1,]\n                                \n                                #entity_encoding <- entity_encoding\n                                \n                                file <- unique(y[,\"file\"])\n                                filepath <- unique(y[,\"filepath\"])\n                                \n                                cat(\"\\n\",file,\"\\n\")\n                                \n                                webpage_df_xml_only_df <- import_local_edgar_file(filepath)\n                                webpage_df_xml_only_df[,\"raw\"] <- gsub(\"&NBSP;\",\" \",webpage_df_xml_only_df[,\"raw\"])\n                                \n                                webpage_tags <- fix_edgar_tags(webpage_df_xml_only_df[,\"raw\"],entity_encoding)\n                                \n                                rm(webpage_df_xml_only_df)\n                                \n                                webpage_sep <- webpage_tags\n                                webpage_sep[1,\"Final_tag\"] <- \"<SEC_HEADER>\"\n                                \n                                rm(webpage_tags)\n                                \n                                webpage_sep <- data.frame(webpage_sep,tag_status_open=NA,tag_status_close=NA,stringsAsFactors=FALSE)\n                                \n                                #Find all possible tags\n                                sep_tags1 <- find_individual_tags(data=webpage_sep,tag_raw_col=\"Final_tag\",tag_short_col=\"tag_short\",\n                                                                  tag_open_col=\"tag_status_open\",tag_close_col=\"tag_status_close\")\n                                sep_tags2 <- sep_tags1[,\"cleaned\"]\n                                \n                                index_temp <- llply(.data=sep_tags2, create_tag_index,data=webpage_sep, tag_raw_col=\"Final_tag\",\n                                                    .progress = \"none\", .inform = FALSE,.parallel = FALSE, .paropts = NULL)\n                                index <- do.call(cbind, index_temp)\n                                index <- as.data.frame(index,stringsAsFactors=FALSE)\n                                colnames(index) <- paste(sep_tags2,\"INDEX\",sep=\"_\")\n                                rm(index_temp)\n                                \n                                webpage_sep_index <- data.frame(file=file, Final_tag=webpage_sep[,\"Final_tag\"],tag_short=webpage_sep[,\"tag_short\"],index,stringsAsFactors=FALSE)\n                                rm(index)\n                                \n                                #Filer Section - Setup\n                                filer_index_val <- \"FILER\"\n                                filer_index_val2 <- paste(filer_index_val,\"INDEX\",sep=\"_\")\n                                filer_index_flag <- (filer_index_val %in% sep_tags2)\n                                \n                                #Filer Section - Company Data\n                                filer_company_data_sub_index_val <- \"COMPANY_DATA\"\n                                filer_company_data_sub_index_val2 <- paste(filer_company_data_sub_index_val,\"INDEX\",sep=\"_\")\n                                \n                                if(filer_index_flag) {\n                                  \n                                  filer_data_temp <- webpage_sep_index[!(webpage_sep_index[,filer_index_val2] %in% c(0)),]\n                                  row.names(filer_data_temp) <- seq(nrow(filer_data_temp))\n                                  \n                                  filer_company_data_merge1 <- dlply(.data=filer_data_temp, .variables=c(\"file\",filer_index_val2), extract_filing_section_by_keep,\n                                                                     xml_col=\"Final_tag\",tag_col=\"tag_short\",index_col=filer_index_val,\n                                                                     sub_index_col=filer_company_data_sub_index_val, index_flag=filer_index_flag)\n                                  filer_company_data_merge2 <- do.call(rbind.fill,filer_company_data_merge1)\n                                  \n                                  filer_company_data_merge <-  create_sub_index_sequence(data=filer_company_data_merge2,index_val=filer_index_val2,\n                                                                                         sub_index_val=filer_company_data_sub_index_val2,nonindex_prefix=\"\")\n                                  \n                                  rm(filer_data_temp,filer_company_data_merge1,filer_company_data_merge2)\n                                  \n                                } else {\n                                  \n                                  filer_company_data_merge <- data.frame(file=file,index_col=NA,sub_index_col=NA,stringsAsFactors=FALSE)\n                                  colnames(filer_company_data_merge) <- c(\"file\",filer_index_val2,head(filer_company_data_sub_index_val2,1))\n                                  \n                                }\n                                rm(filer_company_data_sub_index_val,filer_company_data_sub_index_val2)\n                                \n                                \n                                #Filer Section - Filing Values\n                                filer_filing_values_sub_index_val <- \"FILING_VALUES\"\n                                filer_filing_values_sub_index_val2 <- paste(filer_filing_values_sub_index_val,\"INDEX\",sep=\"_\")\n                                \n                                #                                                         if(filer_index_flag) {\n                                #                                                           \n                                #                                                           filer_data_temp <- webpage_sep_index[!(webpage_sep_index[,filer_index_val2] %in% c(0)),]\n                                #                                                           row.names(filer_data_temp) <- seq(nrow(filer_data_temp))\n                                #                                                           \n                                #                                                           filer_filing_values_merge1 <- dlply(.data=filer_data_temp, .variables=c(\"file\",filer_index_val2), extract_filing_section_by_keep,\n                                #                                                                                               xml_col=\"Final_tag\",tag_col=\"tag_short\",index_col=filer_index_val,\n                                #                                                                                               sub_index_col=filer_filing_values_sub_index_val, index_flag=filer_index_flag)\n                                #                                                           filer_filing_values_merge2 <- do.call(rbind.fill,filer_filing_values_merge1)\n                                #                                                           \n                                #                                                           filer_filing_values_merge <-  create_sub_index_sequence(data=filer_filing_values_merge2,index_val=filer_index_val2,\n                                #                                                                                                                   sub_index_val=filer_filing_values_sub_index_val2,nonindex_prefix=\"\")\n                                #                                                           \n                                #                                                           rm(filer_data_temp,filer_filing_values_merge1,filer_filing_values_merge2)\n                                #                                                           \n                                #                                                         } else {\n                                #                                                           \n                                #                                                           filer_filing_values_merge <- data.frame(file=file,index_col=NA,sub_index_col=NA,stringsAsFactors=FALSE)\n                                #                                                           colnames(filer_filing_values_merge) <- c(\"file\",filer_index_val2,head(filer_filing_values_sub_index_val2,1))\n                                #                                                           \n                                #                                                         }\n                                #                                                         rm(filer_filing_values_sub_index_val,filer_filing_values_sub_index_val2)\n                                \n                                \n                                #Filer Section - Business Address\n                                filer_business_address_sub_index_val <- \"BUSINESS_ADDRESS\"\n                                filer_business_address_sub_index_val2 <- paste(filer_business_address_sub_index_val,\"INDEX\",sep=\"_\")\n                                \n                                #                                                         if(filer_index_flag) {\n                                #                                                           \n                                #                                                           filer_data_temp <- webpage_sep_index[!(webpage_sep_index[,filer_index_val2] %in% c(0)),]\n                                #                                                           row.names(filer_data_temp) <- seq(nrow(filer_data_temp))\n                                #                                                           \n                                #                                                           filer_business_address_merge1 <- dlply(.data=filer_data_temp, .variables=c(\"file\",filer_index_val2), extract_filing_section_by_keep,\n                                #                                                                                                  xml_col=\"Final_tag\",tag_col=\"tag_short\",index_col=filer_index_val,\n                                #                                                                                                  sub_index_col=filer_business_address_sub_index_val, index_flag=filer_index_flag)\n                                #                                                           filer_business_address_merge2 <- do.call(rbind.fill,filer_business_address_merge1)\n                                #                                                           \n                                #                                                           filer_business_address_merge <-  create_sub_index_sequence(data=filer_business_address_merge2,index_val=filer_index_val2,\n                                #                                                                                                                      sub_index_val=filer_business_address_sub_index_val2,nonindex_prefix=\"_BUSINESS\")\n                                #                                                           \n                                #                                                           rm(filer_data_temp,filer_business_address_merge1,filer_business_address_merge2)\n                                #                                                           \n                                #                                                         } else {\n                                #                                                           \n                                #                                                           filer_business_address_merge <- data.frame(file=file,index_col=NA,sub_index_col=NA,stringsAsFactors=FALSE)\n                                #                                                           colnames(filer_business_address_merge) <- c(\"file\",filer_index_val2,head(filer_business_address_sub_index_val2,1))\n                                #                                                           \n                                #                                                         }\n                                #                                                         rm(filer_business_address_sub_index_val,filer_business_address_sub_index_val2)\n                                \n                                \n                                #Filer Section - Mail Address\n                                filer_mail_address_sub_index_val <- \"MAIL_ADDRESS\"\n                                filer_mail_address_sub_index_val2 <- paste(filer_mail_address_sub_index_val,\"INDEX\",sep=\"_\")\n                                \n                                #                                                         if(filer_index_flag) {\n                                #                                                           \n                                #                                                           filer_data_temp <- webpage_sep_index[!(webpage_sep_index[,filer_index_val2] %in% c(0)),]\n                                #                                                           row.names(filer_data_temp) <- seq(nrow(filer_data_temp))\n                                #                                                           \n                                #                                                           filer_mail_address_merge1 <- dlply(.data=filer_data_temp, .variables=c(\"file\",filer_index_val2), extract_filing_section_by_keep,\n                                #                                                                                              xml_col=\"Final_tag\",tag_col=\"tag_short\",index_col=filer_index_val,\n                                #                                                                                              sub_index_col=filer_mail_address_sub_index_val, index_flag=filer_index_flag)\n                                #                                                           filer_mail_address_merge2 <- do.call(rbind.fill,filer_mail_address_merge1)\n                                #                                                           \n                                #                                                           filer_mail_address_merge <-  create_sub_index_sequence(data=filer_mail_address_merge2,index_val=filer_index_val2,\n                                #                                                                                                                  sub_index_val=filer_mail_address_sub_index_val2,nonindex_prefix=\"_MAIL\")\n                                #                                                           \n                                #                                                           rm(filer_data_temp,filer_mail_address_merge1,filer_mail_address_merge2)\n                                #                                                           \n                                #                                                         } else {\n                                #                                                           \n                                #                                                           filer_mail_address_merge <- data.frame(file=file,index_col=NA,sub_index_col=NA,stringsAsFactors=FALSE)\n                                #                                                           colnames(filer_mail_address_merge) <- c(\"file\",filer_index_val2,head(filer_mail_address_sub_index_val2,1))\n                                #                                                           \n                                #                                                         }\n                                #                                                         rm(filer_mail_address_sub_index_val,filer_mail_address_sub_index_val2)\n                                \n                                \n                                #Filer Section - Former Company\n                                filer_former_company_sub_index_val <- \"FORMER_COMPANY\"\n                                filer_former_company_sub_index_val2 <- paste(filer_former_company_sub_index_val,\"INDEX\",sep=\"_\")\n                                \n                                #                                                         if(filer_index_flag) {\n                                #                                                           \n                                #                                                           filer_data_temp <- webpage_sep_index[!(webpage_sep_index[,filer_index_val2] %in% c(0)),]\n                                #                                                           row.names(filer_data_temp) <- seq(nrow(filer_data_temp))\n                                #                                                           \n                                #                                                           filer_former_company_merge1 <- dlply(.data=filer_data_temp, .variables=c(\"file\",filer_index_val2), extract_filing_section_by_keep,\n                                #                                                                                                xml_col=\"Final_tag\",tag_col=\"tag_short\",index_col=filer_index_val,\n                                #                                                                                                sub_index_col=filer_former_company_sub_index_val, index_flag=filer_index_flag)\n                                #                                                           filer_former_company_merge2 <- do.call(rbind.fill,filer_former_company_merge1)\n                                #                                                           \n                                #                                                           filer_former_company_merge <-  create_sub_index_sequence(data=filer_former_company_merge2,index_val=filer_index_val2,\n                                #                                                                                                                    sub_index_val=filer_former_company_sub_index_val2,nonindex_prefix=\"\")\n                                #                                                           \n                                #                                                           rm(filer_data_temp,filer_former_company_merge1,filer_former_company_merge2)\n                                #                                                           \n                                #                                                         } else {\n                                #                                                           \n                                #                                                           filer_former_company_merge <- data.frame(file=file,index_col=NA,sub_index_col=NA,stringsAsFactors=FALSE)\n                                #                                                           colnames(filer_former_company_merge) <- c(\"file\",filer_index_val2,head(filer_former_company_sub_index_val2,1))\n                                #                                                           \n                                #                                                         }\n                                #                                                         rm(filer_former_company_sub_index_val,filer_former_company_sub_index_val2)\n                                #                                                         \n                                #                                                         \n                                #                                                         rm(filer_index_val,filer_index_val2,filer_index_flag)\n                                \n                          \n                                #df_comb_list <- list(filer_company_data_merge,filer_filing_values_merge,filer_business_address_merge, filer_mail_address_merge,filer_former_company_merge)\n\n                                #rm(filer_company_data_merge,filer_filing_values_merge,filer_business_address_merge, filer_mail_address_merge,filer_former_company_merge)\n                                \n                                rm(file,filepath)\n                                rm(sep_tags1,sep_tags2,webpage_sep,webpage_sep_index)\n                                \n                                #return(df_comb_list)\n                                \n                              },\n                              entity_encoding=entity_encoding,\n                              .progress = \"text\",.inform = TRUE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)\n\nfiler_company_data_comb <- create_comb_df(list=trim_headings_filer,list_pos=1,list_file_col=\"file\",filing_info=filings_trim2_short,filing_info_file_col=\"file_header\")\nfiler_filing_values_comb <- create_comb_df(list=trim_headings_filer,list_pos=2,list_file_col=\"file\",filing_info=filings_trim2_short,filing_info_file_col=\"file_header\")\nfiler_business_address_comb <- create_comb_df(list=trim_headings_filer,list_pos=3,list_file_col=\"file\",filing_info=filings_trim2_short,filing_info_file_col=\"file_header\")\nfiler_mail_address_comb <- create_comb_df(list=trim_headings_filer,list_pos=4,list_file_col=\"file\",filing_info=filings_trim2_short,filing_info_file_col=\"file_header\")\nfiler_former_company_comb <- create_comb_df(list=trim_headings_filer,list_pos=5,list_file_col=\"file\",filing_info=filings_trim2_short,filing_info_file_col=\"file_header\")\n\n\n\ntrim_headings_series <- dlply(.data=downloaded_files3, .variables=c(\"yr_id\"), \n                              .fun = function(y,entity_encoding){\n                                \n                                #y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000842939-03-000055.hdr.sgml\"),]\n                                #y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000078713-13-000036.hdr.sgml\"),]\n                                #y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0001193125-13-456867.hdr.sgml\"),]\n                                #y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0001571049-13-000837.hdr.sgml\"),]\n                                #y <- downloaded_files3[1,]\n                                \n                                #entity_encoding <- entity_encoding\n                                \n                                file <- unique(y[,\"file\"])\n                                filepath <- unique(y[,\"filepath\"])\n                                \n                                cat(\"\\n\",file,\"\\n\")\n                                \n                                webpage_df_xml_only_df <- import_local_edgar_file(filepath)\n                                webpage_df_xml_only_df[,\"raw\"] <- gsub(\"&NBSP;\",\" \",webpage_df_xml_only_df[,\"raw\"])\n                                \n                                webpage_tags <- fix_edgar_tags(webpage_df_xml_only_df[,\"raw\"],entity_encoding)\n                                \n                                rm(webpage_df_xml_only_df)\n                                \n                                webpage_sep <- webpage_tags\n                                webpage_sep[1,\"Final_tag\"] <- \"<SEC_HEADER>\"\n                                \n                                rm(webpage_tags)\n                                \n                                webpage_sep <- data.frame(webpage_sep,tag_status_open=NA,tag_status_close=NA,stringsAsFactors=FALSE)\n                                \n                                #Find all possible tags\n                                sep_tags1 <- find_individual_tags(data=webpage_sep,tag_raw_col=\"Final_tag\",tag_short_col=\"tag_short\",\n                                                                  tag_open_col=\"tag_status_open\",tag_close_col=\"tag_status_close\")\n                                sep_tags2 <- sep_tags1[,\"cleaned\"]\n                                \n                                index_temp <- llply(.data=sep_tags2, create_tag_index,data=webpage_sep, tag_raw_col=\"Final_tag\",\n                                                    .progress = \"none\", .inform = FALSE,.parallel = FALSE, .paropts = NULL)\n                                index <- do.call(cbind, index_temp)\n                                index <- as.data.frame(index,stringsAsFactors=FALSE)\n                                colnames(index) <- paste(sep_tags2,\"INDEX\",sep=\"_\")\n                                rm(index_temp)\n                                \n                                webpage_sep_index <- data.frame(file=file, Final_tag=webpage_sep[,\"Final_tag\"],tag_short=webpage_sep[,\"tag_short\"],index,stringsAsFactors=FALSE)\n                                rm(index)\n                                  \n                                #Series Section - Setup\n                                series_index_val <- \"SERIES\"\n                                series_index_val2 <- paste(series_index_val,\"INDEX\",sep=\"_\")\n                                series_index_flag <- (series_index_val %in% sep_tags2)\n                                \n                                #Series Section - Other\n                                series_other_sub_index_val <- \"CLASS_CONTRACT\"\n                                series_other_sub_index_val2 <- paste(series_other_sub_index_val,\"INDEX\",sep=\"_\")\n                                \n                                #                                                         if(series_index_flag) {\n                                #                                                           \n                                #                                                           series_data_temp <- webpage_sep_index[!(webpage_sep_index[,series_index_val2] %in% c(0)),]\n                                #                                                           row.names(series_data_temp) <- seq(nrow(series_data_temp))\n                                #                                                           \n                                #                                                           series_other_merge1 <- dlply(.data=series_data_temp, .variables=c(\"file\",series_index_val2), extract_filing_section_by_drop,\n                                #                                                                                        xml_col=\"Final_tag\",tag_col=\"tag_short\",index_col=series_index_val,\n                                #                                                                                        sub_index_col=series_other_sub_index_val, index_flag=series_index_flag)\n                                #                                                           series_other_merge2 <- do.call(rbind.fill,series_other_merge1)\n                                #                                                           \n                                #                                                           series_other_merge <-  create_sub_index_sequence(data=series_other_merge2,index_val=series_index_val2,\n                                #                                                                                                            sub_index_val=series_other_sub_index_val2,nonindex_prefix=\"\")\n                                #                                                           \n                                #                                                           rm(series_data_temp,series_other_merge1,series_other_merge2)\n                                #                                                           \n                                #                                                         } else {\n                                #                                                           \n                                #                                                           series_other_merge <- data.frame(file=file,index_col=NA,sub_index_col=NA,stringsAsFactors=FALSE)\n                                #                                                           colnames(series_other_merge) <- c(\"file\",series_index_val2,head(series_other_sub_index_val2,1))\n                                #                                                           \n                                #                                                         }\n                                #                                                         rm(series_other_sub_index_val,series_other_sub_index_val2)\n                                \n                                #Series Section - Class Contract\n                                series_class_contract_sub_index_val <- \"CLASS_CONTRACT\"\n                                series_class_contract_sub_index_val2 <- paste(series_class_contract_sub_index_val,\"INDEX\",sep=\"_\")\n                                \n                                #                                                         if(series_index_flag) {\n                                #                                                           \n                                #                                                           series_data_temp <- webpage_sep_index[!(webpage_sep_index[,series_index_val2] %in% c(0)),]\n                                #                                                           row.names(series_data_temp) <- seq(nrow(series_data_temp))\n                                #                                                           \n                                #                                                           series_class_contract_merge1 <- dlply(.data=series_data_temp, .variables=c(\"file\",series_index_val2), extract_filing_section_by_keep,\n                                #                                                                                                 xml_col=\"Final_tag\",tag_col=\"tag_short\",index_col=series_index_val,\n                                #                                                                                                 sub_index_col=series_class_contract_sub_index_val, index_flag=series_index_flag)\n                                #                                                           series_class_contract_merge2 <- do.call(rbind.fill,series_class_contract_merge1)\n                                #                                                           \n                                #                                                           series_class_contract_merge <-  create_sub_index_sequence(data=series_class_contract_merge2,index_val=series_index_val2,\n                                #                                                                                                                     sub_index_val=series_class_contract_sub_index_val2,nonindex_prefix=\"\")\n                                #                                                           \n                                #                                                           rm(series_data_temp,series_class_contract_merge1,series_class_contract_merge2)\n                                #                                                           \n                                #                                                         } else {\n                                #                                                           \n                                #                                                           series_class_contract_merge <- data.frame(file=file,index_col=NA,sub_index_col=NA,stringsAsFactors=FALSE)\n                                #                                                           colnames(series_class_contract_merge) <- c(\"file\",series_index_val2,head(series_class_contract_sub_index_val2,1))\n                                #                                                           \n                                #                                                         }\n                                #                                                         rm(series_class_contract_sub_index_val,series_class_contract_sub_index_val2)\n                                #                                                         \n                                #                                                         rm(series_index_val,series_index_val2,series_index_flag)\n                                \n                                \n                                df_comb_list <- list(header_intro_merge,\n                                                     filer_company_data_merge)\n                                \n                                \n                                #df_comb_list <- list(header_intro_merge,\n                                #                     filer_company_data_merge,filer_filing_values_merge,filer_business_address_merge, filer_mail_address_merge,filer_former_company_merge,\n                                #                     series_other_merge,series_class_contract_merge)\n                                \n                                #rm(header_intro_merge)\n                                #rm(filer_company_data_merge,filer_filing_values_merge,filer_business_address_merge, filer_mail_address_merge,filer_former_company_merge)\n                                #rm(series_other_merge,series_class_contract_merge)\n                                \n                                rm(file,filepath)\n                                rm(sep_tags1,sep_tags2,webpage_sep,webpage_sep_index)\n                                \n                                #return(df_comb_list)\n                                \n                              },\n                              entity_encoding=entity_encoding,\n                              .progress = \"text\",.inform = TRUE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)\nseries_other_comb <- create_comb_df(list=trim_headings_series,list_pos=1,list_file_col=\"file\",filing_info=filings_trim2_short,filing_info_file_col=\"file_header\")\nseries_class_contract_comb <- create_comb_df(list=trim_headings_series,list_pos=2,list_file_col=\"file\",filing_info=filings_trim2_short,filing_info_file_col=\"file_header\")\n\n\n\n\n                               df_comb_list_all <- list(header_intro_comb,\n                                                        filer_company_data_comb,filer_filing_values_comb,filer_business_address_comb, filer_mail_address_comb,filer_former_company_comb,\n                                                        series_other_comb,series_class_contract_comb)\n                               \n                               rm(header_intro_comb)\n                               rm(filer_company_data_comb,filer_filing_values_comb,filer_business_address_comb,filer_mail_address_comb,filer_former_company_comb)\n                               rm(series_other_comb,series_class_contract_comb)\n                               \n                               rm(entity_encoding,yr,yr_folder_path,sub_folder_path,downloaded_files3)\n                               rm(trim_headings)\n                               \n                               return(df_comb_list_all)\n                               \n                             },\n                             path_output=paste(output_directory,downloadfolder,sep=slash),\n                             subfolder=headerfolder,entity_encoding=entity_encoding,\n                             .progress = \"text\",.inform = TRUE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)\n\n\n###############################################################################\ncat(\"Output Combined Files \\n\")\n###############################################################################\n\nwrite.table(filings_comb,file=paste(download_folder_path,\"\\\\\",outfile,sep=\"\"), append=FALSE, na=\"NA\", \n            sep = \",\", quote = TRUE,dec = \".\",  qmethod = \"double\", col.names=TRUE, row.names = FALSE)",
    "created" : 1401729084808.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "1021|65|1222|30|\n1235|65|1358|30|\n",
    "hash" : "962673311",
    "id" : "B103DF41",
    "lastKnownWriteTime" : 1402354056,
    "path" : "~/GitHub/Edgar_Filings_Shareholder_Letters/Get_Header_Info.R",
    "project_path" : "Get_Header_Info.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}