{
    "contents" : "# TODO: Add comment\n# \n# Author:  Brad\n# File:    Extract_Filings.R\n# Version: 1.0\n# Date:    06.10.2014\n# Purpose: Extract the letters from the individual filings\n###############################################################################\n\n###############################################################################\n# INITIAL SETUP;\ncat(\"SECTION: INITIAL SETUP\", \"\\n\")\n###############################################################################\n\n# Clear workspace\nrm(list = ls(all = TRUE))\n\n# Limit History to not exceed 50 lines\nSys.setenv(R_HISTSIZE = 500)\n\nrepo <- c(\"http://cran.us.r-project.org\")\noptions(repos = structure(repo))\noptions(install.packages.check.source = FALSE)\n# String as factors is False -- used for read.csv\noptions(StringsAsFactors = FALSE)\n\n# Default maxprint option\noptions(max.print = 500)\n# options(max.print=99999)\n\n# Memory limit\n#memory.limit(size = 8183)\n\n# Set location (1=HOME,2=WORK,3=LAPTOP,4=CORALSEA FROM HOME,5=CORALSEA FROM WORK,6=CORALSEA FROM LAPTOP)\nLocation <- 4\n\nif (Location == 1) {\n  #setwd(\"C:/Research_temp3/\")\n  input_directory <- normalizePath(\"C:/Users/S.Brad/Dropbox/Research/Fund_Letters/Data\",winslash=\"\\\\\", mustWork=TRUE)\n  output_directory <- normalizePath(\"F:/Research_temp3\",winslash=\"\\\\\", mustWork=TRUE)\n  function_directory <- normalizePath(\"C:/Users/S.Brad/Dropbox/Research_Methods/R\", winslash = \"\\\\\", mustWork = TRUE)\n  treetag_directory <- normalizePath(\"C:/TreeTagger\",winslash=\"\\\\\", mustWork=TRUE)    \n  \n} else if (Location == 2) {\n  #setwd(\"C:/Research_temp3/\")\n  input_directory <- normalizePath(\"C:/Users/bdaughdr/Dropbox/Research/Fund_Letters/Data\",winslash=\"\\\\\", mustWork=TRUE)\n  output_directory <- normalizePath(\"C:/Research_temp3\",winslash=\"\\\\\", mustWork=TRUE)\n  function_directory <- normalizePath(\"C:/Users/bdaughdr/Dropbox/Research_Methods/R\",winslash=\"\\\\\", mustWork=TRUE) \n  treetag_directory <- normalizePath(\"C:/TreeTagger\",winslash=\"\\\\\", mustWork=TRUE)    \n  \n} else if (Location == 3) {\n  #setwd(\"C:/Research_temp3/\")\n  input_directory <- normalizePath(\"C:/Users/S.Brad/Dropbox/Research/Fund_Letters/Data\",winslash=\"\\\\\", mustWork=TRUE)\n  output_directory <- normalizePath(\"C:/Research_temp3\",winslash=\"\\\\\", mustWork=TRUE)\n  function_directory <- normalizePath(\"C:/Users/S.Brad/Dropbox/Research_Methods/R\", winslash = \"\\\\\", mustWork = TRUE)\n  treetag_directory <- normalizePath(\"C:/TreeTagger\",winslash=\"\\\\\", mustWork=TRUE)  \n  \n} else if (Location == 4) {\n  #setwd(\"//tsclient/C/Research_temp3/\")\n  input_directory <- normalizePath(\"//tsclient/C/Users/S.Brad/Dropbox/Research/Fund_Letters/Data\", winslash = \"\\\\\", mustWork = TRUE)\n  output_directory <- normalizePath(\"C:/Users/bdaughdr/Documents/Research_temp3\",winslash=\"\\\\\", mustWork=TRUE)\n  function_directory <- normalizePath(\"//tsclient/C/Users/S.Brad/Dropbox/Research_Methods/R\", winslash = \"\\\\\", mustWork = TRUE)\n  treetag_directory <- normalizePath(\"//tsclient/C/TreeTagger\",winslash=\"\\\\\", mustWork=TRUE)    \n  \n} else if (Location == 5) {\n  #setwd(\"//tsclient/C/Research_temp3/\")\n  input_directory <- normalizePath(\"H:/Research/Mutual_Fund_Letters/Data\", winslash = \"\\\\\", mustWork = TRUE)\n  output_directory <- normalizePath(\"C:/Users/bdaughdr/Documents/Research_temp3\",winslash=\"\\\\\", mustWork=TRUE)\n  function_directory <- normalizePath(\"//tsclient/C/Users/bdaughdr/Dropbox/Research_Methods/R\", winslash = \"\\\\\", mustWork = TRUE)\n  treetag_directory <- normalizePath(\"//tsclient/C/TreeTagger\",winslash=\"\\\\\", mustWork=TRUE)       \n  \n} else if (Location == 6) {\n  #setwd(\"//tsclient/C/Research_temp2/\")\n  input_directory <- normalizePath(\"H:/Research/Mutual_Fund_Letters/Data\", winslash = \"\\\\\", mustWork = TRUE)\n  output_directory <- normalizePath(\"C:/Research_temp3\",winslash=\"\\\\\", mustWork=TRUE)\n  function_directory <- normalizePath(\"//tsclient/C/Users/S.Brad/Dropbox/Research_Methods/R\", winslash = \"\\\\\", mustWork = TRUE)\n  treetag_directory <- normalizePath(\"//tsclient/C/TreeTagger\",winslash=\"\\\\\", mustWork=TRUE)         \n  \n} else {\n  cat(\"ERROR ASSIGNING DIRECTORIES\", \"\\n\")\n  \n}\nrm(Location)\n\n\n###############################################################################\n# FUNCTIONS;\ncat(\"SECTION: FUNCTIONS\", \"\\n\")\n###############################################################################\n\n#source(file=paste(function_directory,\"functions_db.R\",sep=\"\\\\\"),echo=FALSE)\n#source(file=paste(function_directory,\"functions_statistics.R\",sep=\"\\\\\"),echo=FALSE)\n#source(file=paste(function_directory,\"functions_text_analysis.R\",sep=\"\\\\\"),echo=FALSE)\nsource(file=paste(function_directory,\"functions_text_parse.R\",sep=\"\\\\\"),echo=FALSE)\nsource(file=paste(function_directory,\"functions_utilities.R\",sep=\"\\\\\"),echo=FALSE)\n\nregex_execute <- function(data,levels,regex_data,regex_data_o_priority_col,regex_data_r_priority_col,regex_data_str_col,flags_all,flag_local,fileid_col,documentid_col,txtid_col,cum_cols) {\n  \n  #  data <- filing_text_letter0\n  #  levels <- nrow(letter_beginning_regex0)\n  #  regex_data <- letter_beginning_regex\n  #  flag_local <- \"letter_beginning\"\n  \n  #  data <- filing_text_letter1\n  #  levels <- nrow(letter_ending_regex0)\n  #  regex_data <- letter_ending_regex\n  #  flag_local <- \"letter_ending\"\n  \n  #  regex_data_o_priority_col=\"OVERALL_PRIORITY\"\n  #  regex_data_r_priority_col=\"REGEX_PRIORITY\"\n  #  regex_data_str_col <- \"regex\"\n  #  flags_all <- flags\n  #  fileid_col <- \"file\"\n  #  documentid_col <- \"DOCUMENT_INDEX\"\n  #  txtid_col <- \"text_id\"\n  #  cum_cols <- c(\"beg_cum_sum\",\"end_cum_sum\")\n  \n  require(data.table)\n  \n  flags_nonlocal <- flags_all[!(flags_all %in% flag_local)]\n  \n  doc_txt_id_cols <- c(documentid_col,txtid_col)\n  full_id_cols <- c(fileid_col,documentid_col,txtid_col)\n  \n  for (i in 1:levels)\n  {\n    #  i <- 1\n    #  i <- 2\n    \n    #cat(\"REGEX PRIORITY:\",i,\"\\n\")\n    \n    #regex_temp <- regex_data[regex_data[,regex_data_r_priority_col]==i,regex_data_str_col]\n    \n    filing_text_letter_id_temp <- regex_section_matches_expand(regex_strs=regex_data[regex_data[,regex_data_r_priority_col]==i,regex_data_str_col],\n                                                               data=data[,c(doc_txt_id_cols,xmltrim_col,flag_local)],\n                                                               dv_col=flag_local, txt_col=xmltrim_col)\n    \n    filing_text_letter_id <- merge(data[,c(fileid_col,doc_txt_id_cols,xmlcol,flags_nonlocal,cum_cols)],\n                                   filing_text_letter_id_temp,\n                                   by.x=c(doc_txt_id_cols), by.y=c(doc_txt_id_cols),\n                                   all.x=FALSE, all.y=FALSE, sort=FALSE, suffixes=c(\".x\",\".y\"))\n    \n    rm(filing_text_letter_id_temp)\n    invisible(gc(verbose = FALSE, reset = TRUE))\n    \n    filing_text_letter_id <- filing_text_letter_id[,c(full_id_cols,xmlcol,xmltrim_col,flags_all,cum_cols)]\n    \n    filing_text_letter_id <- setorderv(data.table(filing_text_letter_id), c(full_id_cols), rep(1,length(full_id_cols)))\n    filing_text_letter_id <- as.data.frame(filing_text_letter_id,stringsAsFactors=FALSE)\n    \n    #filing_text_letter_id <- filing_text_letter_id[order(filing_text_letter_id[,\"file\"], filing_text_letter_id[,\"DOCUMENT_INDEX\"], filing_text_letter_id[,txtid_col]),]\n    #row.names(filing_text_letter_id) <- seq(nrow(filing_text_letter_id))\n    \n    filing_text_letter_matches_local <- filing_text_letter_id[!is.na(filing_text_letter_id[,flag_local]),\n                                                              (colnames(filing_text_letter_id) %in% c(full_id_cols,xmlcol,xmltrim_col,flag_local))]\n    filing_text_letter_temp <- regex_section_matches_collapse(matches_expand=filing_text_letter_id, dv_col=flag_local, txtid_col=txtid_col)\n    \n    #rm(regex_temp,filing_text_letter_id)\n    rm(filing_text_letter_id)\n    invisible(gc(verbose = FALSE, reset = TRUE))\n    \n    if (nrow(filing_text_letter_matches_local)!=0) { filing_text_letter_matches_local <- data.frame(filing_text_letter_matches_local,\n                                                                                                    overall_priority=unique(regex_data[regex_data[,regex_data_r_priority_col]==i,regex_data_o_priority_col]),\n                                                                                                    regex_priority=i,stringsAsFactors=FALSE); break }\n    if (i!=levels) { rm(filing_text_letter_matches_local,filing_text_letter_temp) }\n    \n  }\n  #rm(regex_data,data)\n  rm(flags_nonlocal,doc_txt_id_cols,full_id_cols,i)\n  invisible(gc(verbose = FALSE, reset = TRUE))\n\n  return(list(filing_text_letter_temp,filing_text_letter_matches_local))\n}\n\nregex_expand <- function(regex_stubs,strs,strs_col,priority_col,stub_beg_col,stub_end_col) {\n  \n  #  regex_stubs <- letter_beginning_regex0\n  #  strs <- letter_beginning\n  #  strs_col <- \"regex\"\n  #  priority_col <- \"priority\"\n  #  stub_beg_col <- \"beg_txt\"\n  #  stub_end_col <- \"end_txt\"\n  \n  regex_expand0 <- ddply(.data=regex_stubs, .variables=priority_col, .fun = function(x,strs){\n    \n    #  x <- regex_stubs[1,]\n    strs[,strs_col] <- paste(x[,stub_beg_col], strs[,strs_col] , x[,stub_end_col], sep=\"\")\n    return(strs)\n  },strs=strs)\n  \n  return(regex_expand0)\n}\n\nregex_section_matches_collapse <- function(matches_expand,dv_col,txtid_col) {\n  \n  #  matches_expand <- filing_text_letter_id1\n  #  dv_col <- \"letter_beginning\"\n  #  txtid_col <- \"text_id\"\n  \n  matches_expand[,dv_col] <- ifelse(is.na(matches_expand[,c(dv_col)]),FALSE,TRUE)\n  filing_text_letter1 <- ddply(.data=matches_expand, .variables=txtid_col, .fun = function(x,dv_col){\n    \n    x[,dv_col] <- any(x[,dv_col])\n    return(x)\n    \n  },dv_col=dv_col)\n  filing_text_letter1[,dv_col] <- ifelse(filing_text_letter1[,c(dv_col)]==TRUE,1,0)\n  \n  filing_text_letter1_dt <- data.table(filing_text_letter1)\n  filing_text_letter1 <- unique(filing_text_letter1_dt,use.key=FALSE)\n  \n  rm(filing_text_letter1_dt)\n  invisible(gc(verbose = FALSE, reset = TRUE))\n  \n  return(as.data.frame(filing_text_letter1,stringsAsFactors=FALSE))\n}\n\n\nregex_section_matches_expand <- function(regex_strs,data,dv_col,txt_col) {\n  \n  #  regex_strs <- letter_beginning_regex[letter_beginning_regex[,\"REGEX_PRIORITY\"]==i,\"regex\"]\n  #  regex_strs <- regex_temp[,\"regex\"]\n  #  data <- filing_text_letter0\n  #  dv_col <- \"letter_beginning\"\n  #  txt_col <- xmltrim_col\n  \n  #ptm1 <- proc.time()\n  \n  invisible(gc(verbose = FALSE, reset = TRUE))\n  filing_text_letter_id1_dt <- ldply(.data=regex_strs, .fun = function(x,data,dv_col,txt_col){\n    \n    #  x <- regex_strs[[1]]\n    \n    data[,dv_col] <- ifelse(grepl(x, data[,c(txt_col)],ignore.case = TRUE, perl = TRUE), x, NA)\n    \n    #data_dt <- data.table(data)\n    #data <- unique(data_dt,use.key=FALSE)\n    #data <- as.data.frame(data,stringsAsFactors=FALSE)\n    \n    return(data)\n    \n  }, data=data, dv_col=dv_col, txt_col=txt_col)\n  \n  filing_text_letter_id1_dt <- data.table(filing_text_letter_id1_dt)\n  filing_text_letter_id1 <- unique(filing_text_letter_id1_dt,use.key=FALSE)\n  \n  rm(filing_text_letter_id1_dt)\n  invisible(gc(verbose = FALSE, reset = TRUE))\n  #proc.time() - ptm1\n  \n  return(as.data.frame(filing_text_letter_id1,stringsAsFactors=FALSE))\n}\n\n\n###############################################################################\n# LIBRARIES;\ncat(\"SECTION: LIBRARIES\", \"\\n\")\n###############################################################################\n\n#Load External Packages\nexternal_packages <- c(\"data.table\",\"gdata\",\"plyr\",\"stringr\",\"XML\")\ninvisible(unlist(sapply(external_packages,load_external_packages, repo_str=repo, simplify=FALSE, USE.NAMES=FALSE)))\ninstalled_packages <- list_installed_packages(external_packages)\n\nrm(installed_packages,repo)\n\n\n###############################################################################\n#PARAMETERS;\n###############################################################################\n\n#If using windows, set to \"\\\\\" - if mac (or unix), set to \"/\";\nslash <- \"\\\\\"\n\n#First year you want index files for:\n\n#startyear <- 1993\nstartyear <- 2003\n\n#Last year you want index files for:\n#endyear <- 2004\nendyear <- 2013\n\n#First qtr you want index files for (usually 1):\nstartqtr <- 1\n\n#Last qtr you want index files for (usually 4):\nendqtr <- 4\n\n#downloadfolder <- \"N-1\"\n#downloadfolder <- \"DEF 14A\"\n#downloadfolder <- \"MF_All\"\n#downloadfolder <- \"MF_SemiAnnual_Reports\"\n#downloadfolder <- \"MF_Annual_Reports\"\ndownloadfolder <- \"MF_Shareholder_Reports_N-CSR\"\n#downloadfolder <- \"MF_Shareholder_Reports_N-CSR-A\"\n#downloadfolder <- \"MF_Shareholder_Reports_N-CSRS\"\n#downloadfolder <- \"MF_Shareholder_Reports_N-CSRS-A\"\n\n#The sub directory where input filings are\ntxtfolder_in <- \"txt_substitute\"\n\n#The sub directory where the output filings will go\ntxtfolder_out <- \"letter\"\n\n#The file that will contain the filings you want to download.\ninfile <- \"filings_list_comb.csv\"\n\nyr_qtr_comb <- expand.grid(yr = seq(startyear, endyear, 1), qtr = seq(1, 4, 1))\n\nyr_qtr_comb <- yr_qtr_comb[order(yr_qtr_comb[,\"yr\"],yr_qtr_comb[,\"qtr\"]),]\nrow.names(yr_qtr_comb) <- seq(nrow(yr_qtr_comb))\n\nyr_qtr_comb[,\"qtr\"] <- ifelse((yr_qtr_comb[,\"yr\"]==startyear & yr_qtr_comb[,\"qtr\"] < startqtr),NA,yr_qtr_comb[,\"qtr\"])\nyr_qtr_comb[,\"qtr\"] <- ifelse((yr_qtr_comb[,\"yr\"]==endyear & yr_qtr_comb[,\"qtr\"] > endqtr),NA,yr_qtr_comb[,\"qtr\"])\n\nrm(startyear,startqtr,endyear,endqtr)\n\nyr_qtr_comb <- yr_qtr_comb[(!is.na(yr_qtr_comb[,\"qtr\"])),]\nrow.names(yr_qtr_comb) <- seq(nrow(yr_qtr_comb))\n\nyr_qtr_comb2 <- data.frame(yr_qtr_comb,yr_qtr=NA,stringsAsFactors=FALSE)\n\nrm(yr_qtr_comb)\n\nyr_qtr_comb2[,\"yr_qtr\"] <- paste(yr_qtr_comb2[,\"yr\"],yr_qtr_comb2[,\"qtr\"],sep=\"_\")\n\n#Check to see if output directory exists.  If not, create it.\ncreate_directory(output_directory,remove=1)\n\n#Check to see if download folder exists.  If not, create it.\ndownload_folder_path <- paste(output_directory, downloadfolder, sep = slash, collapse = slash)  \ncreate_directory(download_folder_path,remove=1)\n\n\n###############################################################################\ncat(\"Get list files \\n\")\n###############################################################################\n\nfilings <- read.table(file=paste(download_folder_path,\"\\\\\",infile,sep=\"\"), header = TRUE, na.strings=\"NA\",stringsAsFactors=FALSE, \n                      sep = \",\", quote = \"\\\"\",dec = \".\", fill = TRUE, comment.char = \"\")\n\nfilings2 <- data.frame(yr_qtr=NA,\n                       filings,\n                       stringsAsFactors=FALSE)\n\nrm(filings)\n\nfilings2[,\"yr_qtr\"] <- paste(filings2[,\"yr\"],\n                             filings2[,\"qtr\"],\n                             sep=\"_\")\n\nfilings2 <- filings2[,c(c(\"yr\",\"qtr\",\"yr_qtr\"),\n                        colnames(filings2[,!(colnames(filings2) %in% c(\"yr\",\"qtr\",\"yr_qtr\"))]))]\n\nfilings_trim <- filings2[ filings2[,\"yr_qtr\"] %in% yr_qtr_comb2[,\"yr_qtr\"],]\nrow.names(filings_trim) <- seq(nrow(filings_trim))\n\nfilings_trim2 <- data.frame(overall_id=NA,\n                            filings_trim,\n                            stringsAsFactors=FALSE)\nfilings_trim2[,\"overall_id\"] <- seq(1,nrow(filings_trim2),1)\n\nrm(filings2,filings_trim,yr_qtr_comb2)\n\n\n###############################################################################\ncat(\"Import Regex Strings \\n\")\n###############################################################################\n\nletter_beginning <- read.table(file=paste(input_directory,\"\\\\\",\"letter_beginning_final\",\".csv\",sep=\"\"), header = TRUE, na.strings=\"NA\",stringsAsFactors=FALSE, sep = \",\", quote = \"\\\"\",dec = \".\", fill = TRUE, comment.char = \"\")\nletter_ending <- read.table(file=paste(input_directory,\"\\\\\",\"letter_ending_final\",\".csv\",sep=\"\"), header = TRUE, na.strings=\"NA\",stringsAsFactors=FALSE, sep = \",\", quote = \"\\\"\",dec = \".\", fill = TRUE, comment.char = \"\")\nletter_position <- read.table(file=paste(input_directory,\"\\\\\",\"letter_position_final\",\".csv\",sep=\"\"), header = TRUE, na.strings=\"NA\",stringsAsFactors=FALSE, sep = \",\", quote = \"\\\"\",dec = \".\", fill = TRUE, comment.char = \"\")\nletter_signature <- read.table(file=paste(input_directory,\"\\\\\",\"letter_signature_final\",\".csv\",sep=\"\"), header = TRUE, na.strings=\"NA\",stringsAsFactors=FALSE, sep = \",\", quote = \"\\\"\",dec = \".\", fill = TRUE, comment.char = \"\")\nletter_closing <- read.table(file=paste(input_directory,\"\\\\\",\"letter_closing_final\",\".csv\",sep=\"\"), header = TRUE, na.strings=\"NA\",stringsAsFactors=FALSE, sep = \",\", quote = \"\\\"\",dec = \".\", fill = TRUE, comment.char = \"\")\n\n\n###############################################################################\ncat(\"Create Individual Regex Hash Tables \\n\")\n###############################################################################\n\n#BEGINNING MATCHES\nletter_beginning_regex0a <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=1,beg_txt=\"^\\\\s+\",end_txt=\"(S*)\\\\s*(,|:|-)\\\\s+$\",stringsAsFactors=FALSE)\nletter_beginning_regex0b <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=2,beg_txt=\"^\\\\s+\",end_txt=\"(S*)\\\\s+$\",stringsAsFactors=FALSE)\n#letter_beginning_regex0c <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=3,beg_txt=\"^\\\\s+(?=(\",end_txt=\"(S*)))\",stringsAsFactors=FALSE)\nletter_beginning_regex0 <- rbindlist(list(letter_beginning_regex0a,letter_beginning_regex0b))\nletter_beginning_regex0 <- as.data.frame(letter_beginning_regex0,stringsAsFactors=FALSE)\n\nletter_beginning_regex1 <- regex_expand(regex_stubs=letter_beginning_regex0,strs=letter_beginning,\n                                        strs_col=\"regex\", priority_col=\"REGEX_PRIORITY\",stub_beg_col=\"beg_txt\",stub_end_col=\"end_txt\")\n\nletter_beginning_regex <- merge(letter_beginning_regex0, letter_beginning_regex1, \n                                by.x=c(\"REGEX_PRIORITY\"), by.y=c(\"REGEX_PRIORITY\"), \n                                all.x=TRUE, all.y=FALSE, sort=FALSE, suffixes=c(\".x\",\".y\"),incomparables=NA)\ncolnames(letter_beginning_regex)[match(\"BEGINNINGS\",names(letter_beginning_regex))] <- \"STRING\"\nletter_beginning_regex[,\"TYPE\"] <- \"BEG\"\nletter_beginning_regex <- letter_beginning_regex[,c(\"TYPE\",\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"PRIORITY\",\n                                                    colnames(letter_beginning_regex[,!(colnames(letter_beginning_regex) %in% c(\"TYPE\",\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"PRIORITY\"))]))]\n\nrm(letter_beginning_regex0a,letter_beginning_regex0b)\nrm(letter_beginning_regex0,letter_beginning_regex1)\n\n\n#ENDING MATCHES\nletter_ending_regex0a <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=1,beg_txt=\"^\\\\s+\",end_txt=\"(\\\\s*)(,|:|-)\\\\s+$\",stringsAsFactors=FALSE)\nletter_ending_regex0b <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=2,beg_txt=\"^\\\\s+\",end_txt=\"\\\\s+$\",stringsAsFactors=FALSE)\nletter_ending_regex0c <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=3,beg_txt=\"^\\\\s+(?=(\",end_txt=\"(\\\\s+)))\",stringsAsFactors=FALSE)\nletter_ending_regex0d <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=4,beg_txt=\"^.*\\\\s+(?=(\",end_txt=\"(\\\\s+)))\",stringsAsFactors=FALSE)\n#letter_ending_regex0e <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=5,beg_txt=\".*\",end_txt=\".*\",stringsAsFactors=FALSE)\nletter_ending_regex0 <- rbindlist(list(letter_ending_regex0a,letter_ending_regex0b,letter_ending_regex0c,letter_ending_regex0d))\nletter_ending_regex0 <- as.data.frame(letter_ending_regex0,stringsAsFactors=FALSE)\n\nletter_ending_regex1 <- regex_expand(regex_stubs=letter_ending_regex0,strs=letter_ending,\n                                     strs_col=\"regex\", priority_col=\"REGEX_PRIORITY\",stub_beg_col=\"beg_txt\",stub_end_col=\"end_txt\")\n\nletter_ending_regex <- merge(letter_ending_regex0, letter_ending_regex1, \n                             by.x=c(\"REGEX_PRIORITY\"), by.y=c(\"REGEX_PRIORITY\"), \n                             all.x=TRUE, all.y=FALSE, sort=FALSE, suffixes=c(\".x\",\".y\"),incomparables=NA)\ncolnames(letter_ending_regex)[match(\"ENDINGS\",names(letter_ending_regex))] <- \"STRING\"\nletter_ending_regex[,\"TYPE\"] <- \"END\"\nletter_ending_regex <- letter_ending_regex[,c(\"TYPE\",\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"PRIORITY\",\n                                              colnames(letter_ending_regex[,!(colnames(letter_ending_regex) %in% c(\"TYPE\",\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"PRIORITY\"))]))]\n\nrm(letter_ending_regex0a,letter_ending_regex0b,letter_ending_regex0c,letter_ending_regex0d)\nrm(letter_ending_regex0,letter_ending_regex1)\n\n\n#SIGNATURE MATCHES\nletter_signature_regex0a <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=1,beg_txt=\"^\\\\s+(\\\\/|:|-)*\\\\s*\",end_txt=\"\\\\s*(\\\\/|:|-)*\\\\s+$\",stringsAsFactors=FALSE)\nletter_signature_regex0b <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=2,beg_txt=\"^\\\\s+(\\\\/|:|-)*\\\\s*(?=(\",end_txt=\"(\\\\s*(\\\\/|:|-)*\\\\s+)))\",stringsAsFactors=FALSE)\nletter_signature_regex0c <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=3,beg_txt=\"^\\\\s+(\\\\/|:|-)*\\\\s*\",end_txt=\"\\\\s*(\\\\/|:|-)*\\\\s+.*$\",stringsAsFactors=FALSE)\nletter_signature_regex0d <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=4,beg_txt=\"^.*\\\\s+(\\\\/|:|-)*\\\\s*(?=(\",end_txt=\"(\\\\s*(\\\\/|:|-)*\\\\s+)))\",stringsAsFactors=FALSE)\nletter_signature_regex0e <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=5,beg_txt=\".*\\\\s+(\\\\/|:|-)*\\\\s*\",end_txt=\"\\\\s*(\\\\/|:|-)*\\\\s+.*\",stringsAsFactors=FALSE)\n\n#letter_signature_regex0a <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=1,beg_txt=\"^\\\\s+\",end_txt=\"\\\\s+$\",stringsAsFactors=FALSE)\n#letter_signature_regex0b <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=2,beg_txt=\"^\\\\s+(?=(\",end_txt=\"(\\\\s+)))\",stringsAsFactors=FALSE)\n#letter_signature_regex0c <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=3,beg_txt=\"^\\\\s+\",end_txt=\"\\\\s+.*$\",stringsAsFactors=FALSE)\n#letter_signature_regex0d <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=4,beg_txt=\"^.*\\\\s+(?=(\",end_txt=\"(\\\\s+)))\",stringsAsFactors=FALSE)\n#letter_signature_regex0e <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=5,beg_txt=\".*\\\\s+\",end_txt=\"\\\\s+.*\",stringsAsFactors=FALSE)\nletter_signature_regex0 <- rbindlist(list(letter_signature_regex0a,letter_signature_regex0b,letter_signature_regex0c,letter_signature_regex0d,letter_signature_regex0e))\nletter_signature_regex0 <- as.data.frame(letter_signature_regex0,stringsAsFactors=FALSE)\n\nletter_signature_regex1 <- regex_expand(regex_stubs=letter_signature_regex0,strs=letter_signature,\n                                        strs_col=\"regex\", priority_col=\"REGEX_PRIORITY\",stub_beg_col=\"beg_txt\",stub_end_col=\"end_txt\")\n\nletter_signature_regex <- merge(letter_signature_regex0, letter_signature_regex1, \n                                by.x=c(\"REGEX_PRIORITY\"), by.y=c(\"REGEX_PRIORITY\"), \n                                all.x=TRUE, all.y=FALSE, sort=FALSE, suffixes=c(\".x\",\".y\"),incomparables=NA)\ncolnames(letter_signature_regex)[match(\"SIGNATURES\",names(letter_signature_regex))] <- \"STRING\"\nletter_signature_regex[,\"TYPE\"] <- \"SIG\"\nletter_signature_regex <- letter_signature_regex[,c(\"TYPE\",\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"PRIORITY\",\n                                                    colnames(letter_signature_regex[,!(colnames(letter_signature_regex) %in% c(\"TYPE\",\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"PRIORITY\"))]))]\n\nrm(letter_signature_regex0a,letter_signature_regex0b,letter_signature_regex0c,letter_signature_regex0d,letter_signature_regex0e)\nrm(letter_signature_regex0,letter_signature_regex1)\n\n\n#POSITION MATCHES\nletter_position_regex0a <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=1,beg_txt=\"^\\\\s+(TITLE(:|-))\\\\s*\",end_txt=\"(S*)\\\\+$\",stringsAsFactors=FALSE)\nletter_position_regex0b <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=2,beg_txt=\"^\\\\s+\",end_txt=\"(S*)\\\\s+$\",stringsAsFactors=FALSE)\nletter_position_regex0c <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=3,beg_txt=\"^\\\\s+(?=(\",end_txt=\"(S*)(\\\\s+)))\",stringsAsFactors=FALSE)\n#letter_position_regex0d <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=4,beg_txt=\"^.*\\\\s+(?=(\",end_txt=\"(S*)(\\\\s+)))\",stringsAsFactors=FALSE)\nletter_position_regex0 <- rbindlist(list(letter_position_regex0a,letter_position_regex0b,letter_position_regex0c))\nletter_position_regex0 <- as.data.frame(letter_position_regex0,stringsAsFactors=FALSE)\n\nletter_position_regex1 <- regex_expand(regex_stubs=letter_position_regex0,strs=letter_position,\n                                       strs_col=\"regex\", priority_col=\"REGEX_PRIORITY\",stub_beg_col=\"beg_txt\",stub_end_col=\"end_txt\")\n\nletter_position_regex <- merge(letter_position_regex0, letter_position_regex1, \n                               by.x=c(\"REGEX_PRIORITY\"), by.y=c(\"REGEX_PRIORITY\"), \n                               all.x=TRUE, all.y=FALSE, sort=FALSE, suffixes=c(\".x\",\".y\"),incomparables=NA)\ncolnames(letter_position_regex)[match(\"POSITIONS\",names(letter_position_regex))] <- \"STRING\"\nletter_position_regex[,\"TYPE\"] <- \"POS\"\nletter_position_regex <- letter_position_regex[,c(\"TYPE\",\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"PRIORITY\",\n                                                  colnames(letter_position_regex[,!(colnames(letter_position_regex) %in% c(\"TYPE\",\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"PRIORITY\"))]))]\n\nrm(letter_position_regex0a,letter_position_regex0b,letter_position_regex0c)\nrm(letter_position_regex0,letter_position_regex1)\n\n\n#CLOSING MATCHES\nletter_closing_regex0a <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=1,beg_txt=\"^\\\\s+\",end_txt=\"(\\\\s*)(,|:|-)\\\\s+$\",stringsAsFactors=FALSE)\nletter_closing_regex0b <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=2,beg_txt=\"^\\\\s+\",end_txt=\"\\\\s+$\",stringsAsFactors=FALSE)\nletter_closing_regex0c <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=3,beg_txt=\"^\\\\s+(?=(\",end_txt=\"(\\\\s+)))\",stringsAsFactors=FALSE)\nletter_closing_regex0d <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=4,beg_txt=\"^.*\\\\s+(?=(\",end_txt=\"(\\\\s+)))\",stringsAsFactors=FALSE)\n#letter_closing_regex0e <- data.frame(TYPE=NA,OVERALL_PRIORITY=99,REGEX_PRIORITY=4,beg_txt=\"^.*\\\\s+(?=(\",end_txt=\"(S*)(\\\\s+)))\",stringsAsFactors=FALSE)\nletter_closing_regex0 <- rbindlist(list(letter_closing_regex0a,letter_closing_regex0b,letter_closing_regex0c,letter_closing_regex0d))\nletter_closing_regex0 <- as.data.frame(letter_closing_regex0,stringsAsFactors=FALSE)\n\nletter_closing_regex1 <- regex_expand(regex_stubs=letter_closing_regex0,strs=letter_closing,\n                                      strs_col=\"regex\", priority_col=\"REGEX_PRIORITY\",stub_beg_col=\"beg_txt\",stub_end_col=\"end_txt\")\n\nletter_closing_regex <- merge(letter_closing_regex0, letter_closing_regex1, \n                              by.x=c(\"REGEX_PRIORITY\"), by.y=c(\"REGEX_PRIORITY\"), \n                              all.x=TRUE, all.y=FALSE, sort=FALSE, suffixes=c(\".x\",\".y\"),incomparables=NA)\ncolnames(letter_closing_regex)[match(\"CLOSINGS\",names(letter_closing_regex))] <- \"STRING\"\nletter_closing_regex[,\"TYPE\"] <- \"CLS\"\nletter_closing_regex <- letter_closing_regex[,c(\"TYPE\",\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"PRIORITY\",\n                                                colnames(letter_closing_regex[,!(colnames(letter_closing_regex) %in% c(\"TYPE\",\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"PRIORITY\"))]))]\n\nrm(letter_closing_regex0a,letter_closing_regex0b,letter_closing_regex0c,letter_closing_regex0d)\nrm(letter_closing_regex0,letter_closing_regex1)\n\n\n###############################################################################\ncat(\"Create Combined Regex Hash Table \\n\")\n###############################################################################\n\n#Add overall Priority for Letter Starting Phrases\nletter_regex_start <- letter_beginning_regex\n\nletter_regex_start[(letter_regex_start[,\"TYPE\"]==\"BEG\" & letter_regex_start[,\"REGEX_PRIORITY\"]==1),\"OVERALL_PRIORITY\"] <- 1\nletter_regex_start[(letter_regex_start[,\"TYPE\"]==\"BEG\" & letter_regex_start[,\"REGEX_PRIORITY\"]==2),\"OVERALL_PRIORITY\"] <- 2\n\nletter_regex_start <- letter_regex_start[order(letter_regex_start[,\"OVERALL_PRIORITY\"]),]\n\nletter_regex_start_check <- unique(letter_regex_start[,c(\"TYPE\",\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"beg_txt\",\"end_txt\")]) \nrow.names(letter_regex_start_check) <- seq(nrow(letter_regex_start_check))\n\n\n#Add overall Priority for Letter Stopping Phrases\nletter_regex_stop <- rbindlist(list(letter_ending_regex,letter_signature_regex,letter_position_regex,letter_closing_regex))\nletter_regex_stop <- as.data.frame(letter_regex_stop,stringsAsFactors=FALSE)\n\nletter_regex_stop[(letter_regex_stop[,\"TYPE\"]==\"END\" & letter_regex_stop[,\"REGEX_PRIORITY\"]==1),\"OVERALL_PRIORITY\"] <- 1\nletter_regex_stop[(letter_regex_stop[,\"TYPE\"]==\"SIG\" & letter_regex_stop[,\"REGEX_PRIORITY\"]==1),\"OVERALL_PRIORITY\"] <- 2\nletter_regex_stop[(letter_regex_stop[,\"TYPE\"]==\"CLS\" & letter_regex_stop[,\"REGEX_PRIORITY\"]==1),\"OVERALL_PRIORITY\"] <- 3\nletter_regex_stop[(letter_regex_stop[,\"TYPE\"]==\"POS\" & letter_regex_stop[,\"REGEX_PRIORITY\"]==1),\"OVERALL_PRIORITY\"] <- 4\nletter_regex_stop[(letter_regex_stop[,\"TYPE\"]==\"END\" & letter_regex_stop[,\"REGEX_PRIORITY\"]==2),\"OVERALL_PRIORITY\"] <- 5\nletter_regex_stop[(letter_regex_stop[,\"TYPE\"]==\"SIG\" & letter_regex_stop[,\"REGEX_PRIORITY\"]==2),\"OVERALL_PRIORITY\"] <- 6\nletter_regex_stop[(letter_regex_stop[,\"TYPE\"]==\"CLS\" & letter_regex_stop[,\"REGEX_PRIORITY\"]==2),\"OVERALL_PRIORITY\"] <- 7\nletter_regex_stop[(letter_regex_stop[,\"TYPE\"]==\"POS\" & letter_regex_stop[,\"REGEX_PRIORITY\"]==2),\"OVERALL_PRIORITY\"] <- 8\nletter_regex_stop[(letter_regex_stop[,\"TYPE\"]==\"END\" & letter_regex_stop[,\"REGEX_PRIORITY\"]==3),\"OVERALL_PRIORITY\"] <- 9\nletter_regex_stop[(letter_regex_stop[,\"TYPE\"]==\"SIG\" & letter_regex_stop[,\"REGEX_PRIORITY\"]==3),\"OVERALL_PRIORITY\"] <- 10\nletter_regex_stop[(letter_regex_stop[,\"TYPE\"]==\"CLS\" & letter_regex_stop[,\"REGEX_PRIORITY\"]==3),\"OVERALL_PRIORITY\"] <- 11\nletter_regex_stop[(letter_regex_stop[,\"TYPE\"]==\"POS\" & letter_regex_stop[,\"REGEX_PRIORITY\"]==3),\"OVERALL_PRIORITY\"] <- 12\nletter_regex_stop[(letter_regex_stop[,\"TYPE\"]==\"END\" & letter_regex_stop[,\"REGEX_PRIORITY\"]==4),\"OVERALL_PRIORITY\"] <- 13\nletter_regex_stop[(letter_regex_stop[,\"TYPE\"]==\"SIG\" & letter_regex_stop[,\"REGEX_PRIORITY\"]==4),\"OVERALL_PRIORITY\"] <- 14\nletter_regex_stop[(letter_regex_stop[,\"TYPE\"]==\"CLS\" & letter_regex_stop[,\"REGEX_PRIORITY\"]==4),\"OVERALL_PRIORITY\"] <- 15\nletter_regex_stop[(letter_regex_stop[,\"TYPE\"]==\"SIG\" & letter_regex_stop[,\"REGEX_PRIORITY\"]==5),\"OVERALL_PRIORITY\"] <- 16\n\nletter_regex_stop <- letter_regex_stop[order(letter_regex_stop[,\"OVERALL_PRIORITY\"]),]\n\nletter_regex_stop_check <- unique(letter_regex_stop[,c(\"TYPE\",\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"beg_txt\",\"end_txt\")]) \nrow.names(letter_regex_stop_check) <- seq(nrow(letter_regex_stop_check))\n\nrm(letter_regex_start_check,letter_regex_stop_check)\nrm(letter_beginning_regex,letter_ending_regex,letter_signature_regex,letter_position_regex,letter_closing_regex)\nrm(letter_beginning,letter_ending,letter_signature,letter_position,letter_closing)\n\n\n###############################################################################\ncat(\"Find Letters \\n\")\n###############################################################################\n\nletters_all <- dlply(.data=filings_trim2, .variables=c(\"yr\"),  .fun = function(x, path_output,subfolder,letter_regex_start,letter_regex_stop){\n  \n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2003),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2004),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2005),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2006),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2007),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2008),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2009),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2010),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2011),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2012),]\n  #  x <- filings_trim2[(filings_trim2[,\"yr\"]==2013),]\n  #  path_output <- paste(output_directory,downloadfolder,sep=slash)\n  #  subfolder <- txtfolder_in\n  #  subfolder_output <- txtfolder_out\n  \n  #  letter_regex_start <- letter_regex_start\n  #  letter_regex_stop <- letter_regex_stop\n  \n  yr <-  unique(x[,\"yr\"])\n  \n  cat(\"\\n\",yr,\"\\n\")\n  \n  #Check to see if yr folder exists.  If not, create it.\n  yr_folder_path <- paste(path_output, yr, sep = \"\\\\\", collapse = \"\\\\\")   \n  create_directory(yr_folder_path,remove=1)\n  \n  sub_folder_path <- paste(yr_folder_path, subfolder, sep = \"\\\\\", collapse = \"\\\\\")   \n  create_directory(sub_folder_path,remove=1)\n  \n  #sub_folder_output_path <- paste(yr_folder_path, subfolder_output, sep = \"\\\\\", collapse = \"\\\\\")   \n  #create_directory(sub_folder_output_path,remove=1)\n  \n  #Get name of downloaded files\n  downloaded_files <- data.frame(file=list.files(sub_folder_path),stringsAsFactors=FALSE)\n  downloaded_files2 <- ddply(.data=downloaded_files, .variables=c(\"file\"), .fun = function(x,folder){\n    \n    filepath <- paste(folder,x,sep=\"\\\\\")\n    output <- data.frame(filepath=filepath,file.info(filepath),stringsAsFactors=FALSE)\n    \n  }, folder=sub_folder_path, \n  .progress = \"none\", .inform = FALSE, .parallel = FALSE, .paropts = NULL, .id = NA)\n  \n  rm(downloaded_files)\n  \n  #downloaded_files2 <- downloaded_files2[order(downloaded_files2[,\"filepath\"]),]\n  downloaded_files2 <- downloaded_files2[order(-downloaded_files2[,\"size\"]),]\n  row.names(downloaded_files2) <- seq(nrow(downloaded_files2))\n  \n  downloaded_files3 <- data.frame(yr_id=NA,downloaded_files2,stringsAsFactors=FALSE)\n  downloaded_files3[,\"yr_id\"] <- seq(1,nrow(downloaded_files3),1)\n  \n  rm(downloaded_files2)\n  \n  letters <- dlply(.data=downloaded_files3, .variables=c(\"yr_id\"), .fun = function(y,letter_regex_start,letter_regex_stop){\n    \n    \n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000072760-03-000038.csv\"),]\n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000088053-03-000790.csv\"),]\n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000721291-03-000011.csv\"),]\n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000820027-03-000786.csv\"),]\n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000949377-03-000778.csv\"),]\n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000950136-03-003115.csv\"),]\n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0001017062-03-000375.csv\"),]\n    \n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000930413-04-002211.csv\"),]\n    \n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0000950129-04-005427.csv\"),]\n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0001193125-04-025954.csv\"),]\n    #  y <- downloaded_files3[(downloaded_files3[,\"file\"]==\"0001193125-04-025975.csv\"),]\n    \n    #  letter_regex_start <- letter_regex_start\n    #  letter_regex_stop <- letter_regex_stop\n    \n    xmlcol <- \"TEXT\"\n    xmltrim_col <- \"TEXT_TRIM\"\n    \n    file <- unique(y[,\"file\"])\n    filepath <- unique(y[,\"filepath\"])\n    \n    #file_out <- gsub(\".txt\",\".csv\",file)\n    #filepath_out <- paste(sub_folder_output_path,file_out,sep=\"\\\\\")\n    \n    cat(file,\"\\n\")\n    \n    filing <- read.table(file=filepath, header = TRUE, na.strings=\"\",stringsAsFactors=FALSE, \n                         sep = \",\", quote = \"\\\"\",dec = \".\", fill = TRUE, comment.char = \"\")\n    \n    filing_no_text0 <- filing[,!(colnames(filing) %in% c(\"text_id\",xmlcol,xmltrim_col))]\n    filing_no_text1 <- unique(filing_no_text0)\n    #filing_no_text2 <- data.frame(file=NA,filing_no_text1,stringsAsFactors=FALSE)\n    #filing_no_text2[,\"file\"] <- file\n    filing_no_text2 <- filing_no_text1\n    rm(filing_no_text0,filing_no_text1)\n    \n    filing_text0 <- filing[,(colnames(filing) %in% c(\"DOCUMENT_INDEX\",\"text_id\",xmlcol,xmltrim_col))]\n    filing_text1 <- data.frame(file=NA,filing_text0,stringsAsFactors=FALSE)\n    filing_text1[,\"file\"] <- file\n    rm(filing_text0)\n    \n    rm(filing)\n    \n    \n    #Clean Tags\n    filing_text_clean <- filing_text1\n    rm(filing_text1)\n    \n    for (i in 1:ncol(filing_text_clean))\n    {\n      filing_text_clean[,i] <- unknownToNA(filing_text_clean[,i], unknown=c(\"\",\".\",\"n/a\",\"na\",\"NA\",NA,\"null\",\"NULL\",NULL,\"nan\",\"NaN\",NaN,\n                                                                            NA_integer_,\"NA_integer_\",NA_complex_,\"NA_complex_\",\n                                                                            NA_character_,\"NA_character_\",NA_real_,\"NA_real_\"),force=TRUE)\n      filing_text_clean[,i] <- ifelse(is.na(filing_text_clean[,i]),\"\", filing_text_clean[,i])\n    } \n    rm(i)\n    \n    \n    filing_text_clean[,c(xmltrim_col)] <- paste(\" \", filing_text_clean[,c(xmltrim_col)],\" \",sep=\"\")\n    \n    \n    filing_text_clean[,c(xmltrim_col)] <- gsub(\" {2,}\", \" \",filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"^\\\\s+|\\\\s+$\", \"\", filing_text_clean[,c(xmltrim_col)])\n    \n    \n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"'\", \"\", filing_text_clean[,c(xmltrim_col)]) \n    \n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"&\", \" AND \", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"\\\\(S\\\\)\", \"S\", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"-INITIAL-\", \" -INITIAL- \", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"-INITIALS-\", \" -INITIALS- \", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"-S-\", \" -S- \", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"-SIGNATURE-\", \" -SIGNATURE- \", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"-SIGNATURES-\", \" -SIGNATURES- \", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"-SIGNED-\", \" -SIGNED- \", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"/INITIAL/\", \" /INITIAL/ \", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"/INITIALS/\", \" /INITIALS/ \", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"/S/\", \" /S/ \", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"/SIGNATURE/\", \" /SIGNATURE/ \", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"/SIGNATURES/\", \" /SIGNATURES/ \", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"/SIGNED/\", \" /SIGNED/ \", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"INITIALS:\", \" INITIALS: \", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"SIGNATURE:\", \" SIGNATURE: \", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"SIGNATURES:\", \" SIGNATURES: \", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"SIGNED:\", \" SIGNED: \", filing_text_clean[,c(xmltrim_col)])\n    \n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"BEST BUY\", \" BESTBUY \", filing_text_clean[,c(xmltrim_col)])\n    \n    \n    #Pad punctuation\n    \n    #hash_pattern <- \"([*=/.,:;!?()])\"\n    hash_pattern <- \"([*=,:;!?()])\"\n    filing_text_clean[,c(xmltrim_col)] <- gsub(hash_pattern,\" \\\\1 \",filing_text_clean[,c(xmltrim_col)])\n    #filing_text_clean[,c(xmltrim_col)] <- gsub(\"([[:punct:]])\",\" \\\\1 \",filing_text_clean[,c(xmltrim_col)])\n    \n    rm(hash_pattern)\n    \n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"--\", \"-\", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\" -\", \"-\", filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"- \", \"-\", filing_text_clean[,c(xmltrim_col)])\n    #filing_text_clean[,c(xmltrim_col)] <- gsub(\"-\", \"\", filing_text_clean[,c(xmltrim_col)])\n    \n    #filing_text_clean[,c(xmltrim_col)] <- gsub(\",\", \"\", filing_text_clean[,c(xmltrim_col)])\n    #filing_text_clean[,c(xmltrim_col)] <- gsub(\",\", \" \", filing_text_clean[,c(xmltrim_col)])\n    \n    #filing_text_clean[,c(xmltrim_col)] <- gsub(\":\", \"\", filing_text_clean[,c(xmltrim_col)])\n    #filing_text_clean[,c(xmltrim_col)] <- gsub(\":\", \" \", filing_text_clean[,c(xmltrim_col)])\n    \n    \n    filing_text_clean[,c(xmltrim_col)] <- gsub(\" {2,}\", \" \",filing_text_clean[,c(xmltrim_col)])\n    filing_text_clean[,c(xmltrim_col)] <- gsub(\"^\\\\s+|\\\\s+$\", \"\", filing_text_clean[,c(xmltrim_col)])\n    \n    filing_text_clean[,c(xmltrim_col)] <- paste(\" \", filing_text_clean[,c(xmltrim_col)],\" \",sep=\"\")\n    \n    \n    #ADD FLAGS TO DATA\n    \n    flags <- c(\"letter_beginning\",\"letter_ending\",\"letter_signature\",\"letter_position\",\"letter_closing\")\n    \n    filing_text_id_cols <- c(\"file\",\"DOCUMENT_INDEX\",\"text_id\",xmlcol,xmltrim_col)\n    \n    filing_text_letter0 <- data.frame(filing_text_clean, \n                                      matrix(NA, ncol=(length(flags)+2), nrow=nrow(filing_text_clean), \n                                             dimnames=list(c(), c(flags,\"beg_cum_sum\",\"end_cum_sum\"))), \n                                      stringsAsFactors=FALSE)\n    \n    filing_text_letter0 <- filing_text_letter0[,c(filing_text_id_cols,\n                                                  colnames(filing_text_letter0[,!(colnames(filing_text_letter0) %in% filing_text_id_cols)]))]\n    \n    rm(filing_text_clean)\n    \n    \n    #FIND BEG MATCHES  \n    \n    letter_beginning_regex <- letter_regex_start[letter_regex_start[,\"TYPE\"]==\"BEG\",c(\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"PRIORITY\",\"STRING\",\"regex\")]\n    colnames(letter_beginning_regex)[match(\"STRING\",names(letter_beginning_regex))] <- \"BEGINNINGS\"\n    row.names(letter_beginning_regex) <- seq(nrow(letter_beginning_regex))\n    \n    letter_beginning_regex0 <- letter_regex_start[letter_regex_start[,\"TYPE\"]==\"BEG\",c(\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"beg_txt\",\"end_txt\")]\n    letter_beginning_regex0 <- unique(letter_beginning_regex0)\n    row.names(letter_beginning_regex0) <- seq(nrow(letter_beginning_regex0))\n    \n    filing_text_letter_beg_out <- regex_execute(data=filing_text_letter0,levels=nrow(letter_beginning_regex0),\n                                                regex_data=letter_beginning_regex,regex_data_o_priority_col=\"OVERALL_PRIORITY\",regex_data_r_priority_col=\"REGEX_PRIORITY\",regex_data_str_col=\"regex\",\n                                                flags_all=flags,flag_local=\"letter_beginning\",\n                                                fileid_col=\"file\",documentid_col=\"DOCUMENT_INDEX\",txtid_col=\"text_id\",cum_cols=c(\"beg_cum_sum\",\"end_cum_sum\"))\n    \n    filing_text_letter1 <- filing_text_letter_beg_out[[1]]\n    filing_text_letter_matches_beg  <- filing_text_letter_beg_out[[2]]\n    #i <- unique(filing_text_letter_matches_beg[,\"regex_priority\"])\n    \n    rm(letter_beginning_regex0,letter_beginning_regex,filing_text_letter0,filing_text_letter_beg_out)\n    \n    \n    # CHECK TO SEE IF BEGINNING MATCHES FOUND\n    \n    if (nrow(filing_text_letter_matches_beg)==0) {\n      \n      cat(\"NO BEGINNING MATCHES FOUND\", \"\\n\")\n      \n      #CREATE MATCH SUMMARIES\n      matches_summary0a_h <- data.frame(file=file,type=\"letter_beginning\",\n                                        final_overall_priority=unique(filing_text_letter_matches_beg[,\"overall_priority\"]),\n                                        final_regex_priority=unique(filing_text_letter_matches_beg[,\"regex_priority\"]),\n                                        overall_matches=nrow(filing_text_letter_matches_beg),\n                                        unique_matches=length(unique(filing_text_letter_matches_beg[,c(\"text_id\")])), stringsAsFactors=FALSE)\n      matches_summary0b_h <- data.frame(file=file,type=\"letter_ending\",final_overall_priority=NA,final_regex_priority=NA,overall_matches=NA, unique_matches=NA,stringsAsFactors=FALSE)\n      matches_summary0c_h <- data.frame(file=file,type=\"letter_signature\",final_overall_priority=NA,final_regex_priority=NA,overall_matches=NA, unique_matches=NA,stringsAsFactors=FALSE)\n      matches_summary0d_h <- data.frame(file=file,type=\"letter_position\",final_overall_priority=NA,final_regex_priority=NA,overall_matches=NA, unique_matches=NA,stringsAsFactors=FALSE)\n      matches_summary0e_h <- data.frame(file=file,type=\"letter_closing\",final_overall_priority=NA,final_regex_priority=NA,overall_matches=NA, unique_matches=NA,stringsAsFactors=FALSE)\n      filing_text_letter_matches_summary_h <- rbindlist(list(matches_summary0a_h,matches_summary0b_h,matches_summary0c_h,matches_summary0d_h,matches_summary0e_h))\n      filing_text_letter_matches_summary_h <- data.frame(filing_text_letter_matches_summary_h,stringsAsFactors=FALSE)\n      rm(matches_summary0a_h,matches_summary0b_h,matches_summary0c_h,matches_summary0d_h,matches_summary0e_h)\n      \n      matches_summary0a_v <- data.frame(file=file,type=\"final_overall_priority\",letter_beginning=unique(filing_text_letter_matches_beg[,\"overall_priority\"]),\n                                        letter_ending=NA, letter_signature=NA, letter_position=NA,letter_closing=NA, stringsAsFactors=FALSE)\n      matches_summary0b_v <- data.frame(file=file,type=\"final_regex_priority\",letter_beginning=unique(filing_text_letter_matches_beg[,\"regex_priority\"]),\n                                        letter_ending=NA, letter_signature=NA, letter_position=NA,letter_closing=NA, stringsAsFactors=FALSE)\n      matches_summary0c_v <- data.frame(file=file,type=\"overall_matches\", letter_beginning=nrow(filing_text_letter_matches_beg),\n                                        letter_ending=NA,letter_signature=NA,letter_position=NA,letter_closing=NA, stringsAsFactors=FALSE)\n      matches_summary0d_v <- data.frame(file=file,type=\"unique_matches\",letter_beginning=length(unique(filing_text_letter_matches_beg[,c(\"text_id\")])),\n                                        letter_ending=NA, letter_signature=NA, letter_position=NA, letter_closing=NA,stringsAsFactors=FALSE)\n      filing_text_letter_matches_summary_v <- rbindlist(list(matches_summary0a_v,matches_summary0b_v,matches_summary0c_v,matches_summary0d_v))\n      filing_text_letter_matches_summary_v <- data.frame(filing_text_letter_matches_summary_v,stringsAsFactors=FALSE)\n      rm(matches_summary0a_v,matches_summary0b_v,matches_summary0c_v,matches_summary0d_v)\n      #rm(i)\n      \n      filing_text_letter_matches_end <- filing_text_letter_matches_beg\n      colnames(filing_text_letter_matches_end)[match(\"letter_beginning\",names(filing_text_letter_matches_end))] <- \"letter_ending\"\n      \n      filing_text_letter_matches_sign  <- filing_text_letter_matches_beg\n      colnames(filing_text_letter_matches_sign)[match(\"letter_beginning\",names(filing_text_letter_matches_sign))] <- \"letter_signature\"\n      \n      filing_text_letter_matches_pos <- filing_text_letter_matches_beg\n      colnames(filing_text_letter_matches_pos)[match(\"letter_beginning\",names(filing_text_letter_matches_pos))] <- \"letter_position\"\n      \n      filing_text_letter_matches_close  <- filing_text_letter_matches_beg\n      colnames(filing_text_letter_matches_close)[match(\"letter_beginning\",names(filing_text_letter_matches_close))] <- \"letter_closing\"\n      \n      filing_text_letter7 <- filing_text_letter1[1,]\n      filing_text_letter7[,\"beg_cum_sum\"] <- 0\n      filing_text_letter7[,xmlcol] <- NA\n      filing_text_letter7[,xmltrim_col] <- NA\n      \n      rm(filing_text_letter1)\n      \n      \n    } else {\n      \n      cat(\"BEGINNING MATCHES FOUND\", \"\\n\")\n      \n      \n      # IF BEGINNING MATCHES FOUND, THEN CHECK FOR ENDINGS\n      # TWO POSSIBILITTIES:\n      #  1.  CHECK ALL 3 SO THAT YOU CAN APPLY MORE CRITERIA TO WHICH ENDING TO CHOOSE.  THIS WILL BE AS PERFORANCE HIT BUT SHOULD BE THE WAY TO DO IT BECAUSE IT ALLOWS FOR ME FLEXIBILITY\n      #  2.  CHECK ONLY LETTER ENDINGS - IF NOT ENDINGS, CHECK SIGN, ETC.\n      \n      \n      #FIND END MATCHES\n      \n      letter_ending_regex <- letter_regex_stop[letter_regex_stop[,\"TYPE\"]==\"END\",c(\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"PRIORITY\",\"STRING\",\"regex\")]\n      colnames(letter_ending_regex)[match(\"STRING\",names(letter_ending_regex))] <- \"ENDINGS\"\n      row.names(letter_ending_regex) <- seq(nrow(letter_ending_regex))\n      \n      letter_ending_regex0 <- letter_regex_stop[letter_regex_stop[,\"TYPE\"]==\"END\",c(\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"beg_txt\",\"end_txt\")]\n      letter_ending_regex0 <- unique(letter_ending_regex0)\n      row.names(letter_ending_regex0) <- seq(nrow(letter_ending_regex0))\n      \n      filing_text_letter_end_out <- regex_execute(data=filing_text_letter1,levels=nrow(letter_ending_regex0),\n                                                  regex_data=letter_ending_regex,regex_data_o_priority_col=\"OVERALL_PRIORITY\",regex_data_r_priority_col=\"REGEX_PRIORITY\",regex_data_str_col=\"regex\",\n                                                  flags_all=flags,flag_local=\"letter_ending\",\n                                                  fileid_col=\"file\",documentid_col=\"DOCUMENT_INDEX\",txtid_col=\"text_id\",cum_cols=c(\"beg_cum_sum\",\"end_cum_sum\"))\n      \n      filing_text_letter2 <- filing_text_letter_end_out[[1]]\n      filing_text_letter_matches_end  <- filing_text_letter_end_out[[2]]\n      #j <- unique(filing_text_letter_matches_end[,\"regex_priority\"])\n      \n      rm(letter_ending_regex0,letter_ending_regex,filing_text_letter1,filing_text_letter_end_out)\n      \n      \n      #FIND SIGNATURE MATCHES\n      \n      letter_signature_regex <- letter_regex_stop[letter_regex_stop[,\"TYPE\"]==\"SIG\",c(\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"PRIORITY\",\"STRING\",\"regex\")]\n      colnames(letter_signature_regex)[match(\"STRING\",names(letter_signature_regex))] <- \"SIGNATURES\"\n      row.names(letter_signature_regex) <- seq(nrow(letter_signature_regex))\n      \n      letter_signature_regex0 <- letter_regex_stop[letter_regex_stop[,\"TYPE\"]==\"SIG\",c(\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"beg_txt\",\"end_txt\")]\n      letter_signature_regex0 <- unique(letter_signature_regex0)\n      row.names(letter_signature_regex0) <- seq(nrow(letter_signature_regex0))\n      \n      filing_text_letter_sign_out <- regex_execute(data=filing_text_letter2,levels=nrow(letter_signature_regex0),\n                                                   regex_data=letter_signature_regex,regex_data_o_priority_col=\"OVERALL_PRIORITY\",regex_data_r_priority_col=\"REGEX_PRIORITY\",regex_data_str_col=\"regex\",\n                                                   flags_all=flags,flag_local=\"letter_signature\",\n                                                   fileid_col=\"file\",documentid_col=\"DOCUMENT_INDEX\",txtid_col=\"text_id\",cum_cols=c(\"beg_cum_sum\",\"end_cum_sum\"))\n      \n      filing_text_letter3 <- filing_text_letter_sign_out[[1]]\n      filing_text_letter_matches_sign  <- filing_text_letter_sign_out[[2]]\n      #k <- unique(filing_text_letter_matches_sign[,\"regex_priority\"])\n      \n      rm(letter_signature_regex0,letter_signature_regex,filing_text_letter2,filing_text_letter_sign_out)\n      \n      \n      #FIND POSITION MATCHES\n      \n      letter_position_regex <- letter_regex_stop[letter_regex_stop[,\"TYPE\"]==\"POS\",c(\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"PRIORITY\",\"STRING\",\"regex\")]\n      colnames(letter_position_regex)[match(\"STRING\",names(letter_position_regex))] <- \"POSITIONS\"\n      row.names(letter_position_regex) <- seq(nrow(letter_position_regex))\n      \n      letter_position_regex0 <- letter_regex_stop[letter_regex_stop[,\"TYPE\"]==\"POS\",c(\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"beg_txt\",\"end_txt\")]\n      letter_position_regex0 <- unique(letter_position_regex0)\n      row.names(letter_position_regex0) <- seq(nrow(letter_position_regex0))\n      \n      \n      filing_text_letter_pos_out <- regex_execute(data=filing_text_letter3,levels=nrow(letter_position_regex0),\n                                                  regex_data=letter_position_regex,regex_data_o_priority_col=\"OVERALL_PRIORITY\",regex_data_r_priority_col=\"REGEX_PRIORITY\",regex_data_str_col=\"regex\",\n                                                  flags_all=flags,flag_local=\"letter_position\",\n                                                  fileid_col=\"file\",documentid_col=\"DOCUMENT_INDEX\",txtid_col=\"text_id\",cum_cols=c(\"beg_cum_sum\",\"end_cum_sum\"))\n      \n      filing_text_letter4 <- filing_text_letter_pos_out[[1]]\n      filing_text_letter_matches_pos  <- filing_text_letter_pos_out[[2]]\n      #l <- unique(filing_text_letter_matches_pos[,\"regex_priority\"])\n      \n      rm(letter_position_regex0,letter_position_regex,filing_text_letter3,filing_text_letter_pos_out)\n      \n      \n      \n      #FIND CLOSING MATCHES\n      \n      letter_closing_regex <- letter_regex_stop[letter_regex_stop[,\"TYPE\"]==\"CLS\",c(\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"PRIORITY\",\"STRING\",\"regex\")]\n      colnames(letter_closing_regex)[match(\"STRING\",names(letter_closing_regex))] <- \"CLOSINGS\"\n      row.names(letter_closing_regex) <- seq(nrow(letter_closing_regex))\n      \n      letter_closing_regex0 <- letter_regex_stop[letter_regex_stop[,\"TYPE\"]==\"CLS\",c(\"OVERALL_PRIORITY\",\"REGEX_PRIORITY\",\"beg_txt\",\"end_txt\")]\n      letter_closing_regex0 <- unique(letter_closing_regex0)\n      row.names(letter_closing_regex0) <- seq(nrow(letter_closing_regex0))\n      \n      filing_text_letter_close_out <- regex_execute(data=filing_text_letter4,levels=nrow(letter_closing_regex0),\n                                                    regex_data=letter_closing_regex,regex_data_o_priority_col=\"OVERALL_PRIORITY\",regex_data_r_priority_col=\"REGEX_PRIORITY\",regex_data_str_col=\"regex\",\n                                                    flags_all=flags,flag_local=\"letter_closing\",\n                                                    fileid_col=\"file\",documentid_col=\"DOCUMENT_INDEX\",txtid_col=\"text_id\",cum_cols=c(\"beg_cum_sum\",\"end_cum_sum\"))\n      \n      filing_text_letter5 <- filing_text_letter_close_out[[1]]\n      filing_text_letter_matches_close  <- filing_text_letter_close_out[[2]]\n      #m <- unique(filing_text_letter_matches_close[,\"regex_priority\"])\n      \n      rm(letter_closing_regex0,letter_closing_regex,filing_text_letter4,filing_text_letter_close_out)\n      \n      \n      #CREATE MATCH SUMMARIES\n      matches_summary0a_h <- data.frame(file=file,type=\"letter_beginning\",\n                                        final_overall_priority=unique(filing_text_letter_matches_beg[,\"overall_priority\"]),\n                                        final_regex_priority=unique(filing_text_letter_matches_beg[,\"regex_priority\"]),\n                                        overall_matches=nrow(filing_text_letter_matches_beg),\n                                        unique_matches=length(unique(filing_text_letter_matches_beg[,c(\"text_id\")])),\n                                        stringsAsFactors=FALSE)\n      matches_summary0b_h <- data.frame(file=file,type=\"letter_ending\",\n                                        final_overall_priority=unique(filing_text_letter_matches_end[,\"overall_priority\"]),\n                                        final_regex_priority=unique(filing_text_letter_matches_end[,\"regex_priority\"]),\n                                        overall_matches=nrow(filing_text_letter_matches_end),\n                                        unique_matches=length(unique(filing_text_letter_matches_end[,c(\"text_id\")])),\n                                        stringsAsFactors=FALSE)\n      matches_summary0c_h <- data.frame(file=file,type=\"letter_signature\",\n                                        final_overall_priority=unique(filing_text_letter_matches_sign[,\"overall_priority\"]),\n                                        final_regex_priority=unique(filing_text_letter_matches_sign[,\"regex_priority\"]),\n                                        overall_matches=nrow(filing_text_letter_matches_sign),\n                                        unique_matches=length(unique(filing_text_letter_matches_sign[,c(\"text_id\")])),\n                                        stringsAsFactors=FALSE)\n      matches_summary0d_h <- data.frame(file=file,type=\"letter_position\",\n                                        final_overall_priority=unique(filing_text_letter_matches_pos[,\"overall_priority\"]),\n                                        final_regex_priority=unique(filing_text_letter_matches_pos[,\"regex_priority\"]),\n                                        overall_matches=nrow(filing_text_letter_matches_pos),\n                                        unique_matches=length(unique(filing_text_letter_matches_pos[,c(\"text_id\")])),\n                                        stringsAsFactors=FALSE)\n      matches_summary0e_h <- data.frame(file=file,type=\"letter_closing\",\n                                        final_overall_priority=unique(filing_text_letter_matches_close[,\"overall_priority\"]),\n                                        final_regex_priority=unique(filing_text_letter_matches_close[,\"regex_priority\"]),\n                                        overall_matches=nrow(filing_text_letter_matches_close),\n                                        unique_matches=length(unique(filing_text_letter_matches_close[,c(\"text_id\")])),\n                                        stringsAsFactors=FALSE)\n      filing_text_letter_matches_summary_h <- rbindlist(list(matches_summary0a_h,matches_summary0b_h,matches_summary0c_h,matches_summary0d_h,matches_summary0e_h))\n      filing_text_letter_matches_summary_h <- data.frame(filing_text_letter_matches_summary_h,stringsAsFactors=FALSE)\n      rm(matches_summary0a_h,matches_summary0b_h,matches_summary0c_h,matches_summary0d_h,matches_summary0e_h)\n      \n      matches_summary0a_v <- data.frame(file=file,type=\"final_overall_priority\",\n                                        letter_beginning=unique(filing_text_letter_matches_beg[,\"overall_priority\"]),\n                                        letter_ending=unique(filing_text_letter_matches_end[,\"overall_priority\"]),\n                                        letter_signature=unique(filing_text_letter_matches_sign[,\"overall_priority\"]),\n                                        letter_position=unique(filing_text_letter_matches_pos[,\"overall_priority\"]),\n                                        letter_closing=unique(filing_text_letter_matches_close[,\"overall_priority\"]),\n                                        stringsAsFactors=FALSE)\n      matches_summary0b_v <- data.frame(file=file,type=\"final_regex_priority\",\n                                        letter_beginning=unique(filing_text_letter_matches_beg[,\"regex_priority\"]),\n                                        letter_ending=unique(filing_text_letter_matches_end[,\"regex_priority\"]),\n                                        letter_signature=unique(filing_text_letter_matches_sign[,\"regex_priority\"]),\n                                        letter_position=unique(filing_text_letter_matches_pos[,\"regex_priority\"]),\n                                        letter_closing=unique(filing_text_letter_matches_close[,\"regex_priority\"]),\n                                        stringsAsFactors=FALSE)\n      matches_summary0c_v <- data.frame(file=file,type=\"overall_matches\",\n                                        letter_beginning=nrow(filing_text_letter_matches_beg),\n                                        letter_ending=nrow(filing_text_letter_matches_end),\n                                        letter_signature=nrow(filing_text_letter_matches_sign),\n                                        letter_position=nrow(filing_text_letter_matches_pos),\n                                        letter_closing=nrow(filing_text_letter_matches_close),\n                                        stringsAsFactors=FALSE)\n      matches_summary0d_v <- data.frame(file=file,type=\"unique_matches\",\n                                        letter_beginning=length(unique(filing_text_letter_matches_beg[,c(\"text_id\")])),\n                                        letter_ending=length(unique(filing_text_letter_matches_end[,c(\"text_id\")])),\n                                        letter_signature=length(unique(filing_text_letter_matches_sign[,c(\"text_id\")])),\n                                        letter_position=length(unique(filing_text_letter_matches_pos[,c(\"text_id\")])),\n                                        letter_closing=length(unique(filing_text_letter_matches_close[,c(\"text_id\")])),\n                                        stringsAsFactors=FALSE)\n      filing_text_letter_matches_summary_v <- rbindlist(list(matches_summary0a_v,matches_summary0b_v,matches_summary0c_v,matches_summary0d_v))\n      filing_text_letter_matches_summary_v <- data.frame(filing_text_letter_matches_summary_v,stringsAsFactors=FALSE)\n      rm(matches_summary0a_v,matches_summary0b_v,matches_summary0c_v,matches_summary0d_v)\n      #rm(i,j,k,l,m)\n      \n      \n      #REMOVE TEXT BEFORE LETTER\n      filing_text_letter6 <- ddply(.data=filing_text_letter5, .variables=c(\"file\",\"DOCUMENT_INDEX\"), .fun = function(x){\n        \n        #  x <- filing_text_letter5[(filing_text_letter5[,\"DOCUMENT_INDEX\"]==1),]\n        \n        x[,\"beg_cum_sum\"] <- cumsum(x[,\"letter_beginning\"])\n        x_trim <- x[!(x[,\"beg_cum_sum\"]==0),]\n        \n        #if (nrow(x_trim) == 0) {\n        #  x_trim[1,] <- NA\n        #  x_trim[,\"file\"] <- file_temp\n        #  x_trim[,\"DOCUMENT_INDEX\"] <- index_temp \n        #} \n        \n        return(x_trim)\n      })\n      rm(filing_text_letter5)\n      \n      \n      #REMOVE TEXT AFTER LETTER\n      \n      #  THE CRITERIA NEEDS TO BE NOT IF END !=0.\n      #  WHAT ABOUT THE MINIMUM OF THE THREE????\n      #  WHAT ABOUT GETTING THE DIFFERENCE IN THE THREE ROWS: ABS(END-SIGN) & ABS(SIGN-POS).  IF END IS MUCH HIGHER ROW THAN SIGNATURE, USE SIGNATURE\n      \n      filing_text_letter7 <- ddply(.data=filing_text_letter6, .variables=c(\"file\",\"DOCUMENT_INDEX\",\"beg_cum_sum\"),      .fun = function(x,bycol,xmlcol,summary){\n        \n        # x <- filing_text_letter6[(filing_text_letter6[,\"DOCUMENT_INDEX\"]==1 & filing_text_letter6[,\"beg_cum_sum\"]==1),]\n        # x <- filing_text_letter6[(filing_text_letter6[,\"DOCUMENT_INDEX\"]==1 & filing_text_letter6[,\"beg_cum_sum\"]==2),]\n        # bycol <- c(\"file\",\"DOCUMENT_INDEX\",\"beg_cum_sum\")\n        # xmlcol <- xmlcol\n        # summary <- filing_text_letter_matches_summary_h\n        \n        file_temp <- unique(x[,\"file\"])\n        index_temp <- unique(x[,\"DOCUMENT_INDEX\"])\n        beg_cum_sum_temp <- unique(x[,\"beg_cum_sum\"])\n        \n        filing_text_letter_extract0 <- x\n        \n        ending_summary_temp <- data.frame(matrix(NA, ncol=7, nrow=4, dimnames=list(c(), c(\"file\",\"DOCUMENT_INDEX\",\"beg_cum_sum\",\"TYPE\",\"final_overall_priority\",\"final_regex_priority\",\"local_matches\"))), stringsAsFactors=FALSE)\n        ending_summary_temp[1,] <- c(file_temp,index_temp,beg_cum_sum_temp,\"letter_ending\",\n                                     summary[summary[,\"type\"]==\"letter_ending\",\"final_overall_priority\"],\n                                     summary[summary[,\"type\"]==\"letter_ending\",\"final_regex_priority\"],\n                                     sum(filing_text_letter_extract0[,\"letter_ending\"], na.rm = TRUE))\n        ending_summary_temp[2,] <- c(file_temp,index_temp,beg_cum_sum_temp,\"letter_signature\",\n                                     summary[summary[,\"type\"]==\"letter_signature\",\"final_overall_priority\"],\n                                     summary[summary[,\"type\"]==\"letter_signature\",\"final_regex_priority\"],\n                                     sum(filing_text_letter_extract0[,\"letter_signature\"], na.rm = TRUE))\n        ending_summary_temp[3,] <- c(file_temp,index_temp,beg_cum_sum_temp,\"letter_closing\",\n                                     summary[summary[,\"type\"]==\"letter_closing\",\"final_overall_priority\"],\n                                     summary[summary[,\"type\"]==\"letter_closing\",\"final_regex_priority\"],\n                                     sum(filing_text_letter_extract0[,\"letter_closing\"], na.rm = TRUE))\n        ending_summary_temp[4,] <- c(file_temp,index_temp,beg_cum_sum_temp,\"letter_position\",\n                                     summary[summary[,\"type\"]==\"letter_position\",\"final_overall_priority\"],\n                                     summary[summary[,\"type\"]==\"letter_position\",\"final_regex_priority\"],\n                                     sum(filing_text_letter_extract0[,\"letter_position\"], na.rm = TRUE))\n                \n        ending_summary_temp[,\"DOCUMENT_INDEX\"] <- as.numeric(ending_summary_temp[,\"DOCUMENT_INDEX\"])\n        ending_summary_temp[,\"beg_cum_sum\"] <- as.numeric(ending_summary_temp[,\"beg_cum_sum\"])\n        ending_summary_temp[,\"final_overall_priority\"] <- as.numeric(ending_summary_temp[,\"final_overall_priority\"])\n        ending_summary_temp[,\"final_regex_priority\"] <- as.numeric(ending_summary_temp[,\"final_regex_priority\"])\n        ending_summary_temp[,\"local_matches\"] <- as.numeric(ending_summary_temp[,\"local_matches\"])\n        \n        #ending_summary_temp <- ending_summary_temp[order(ending_summary_temp[,\"final_regex_priority\"]),]\n        ending_summary_temp <- ending_summary_temp[order(ending_summary_temp[,\"final_overall_priority\"]),]\n        row.names(ending_summary_temp) <- seq(nrow(ending_summary_temp))\n        \n        for (z in 1:nrow(ending_summary_temp))\n        {\n          #  z <- 1\n          \n          #cat(\"CLOSING PRIORITY:\",z,\"\\n\")\n          \n          matches <- as.integer(ending_summary_temp[z,\"local_matches\"])\n          \n          filing_text_letter_extract0[,\"end_cum_sum\"] <- cumsum(filing_text_letter_extract0[,ending_summary_temp[z,\"TYPE\"]])\n          letter_flag_good <- matches\n          \n          if (matches!=0) { rm(matches) ; break }\n          if (z==nrow(ending_summary_temp)) { \n            \n            filing_text_letter_extract0[,\"end_cum_sum\"] <- NA\n            letter_flag_good <- NA\n            rm(matches)\n          } \n          \n        }\n        rm(ending_summary_temp,z)\n        \n        #Check for no ending matches\n        if (is.na(letter_flag_good)) {\n          \n          #cat(\"NO END MATCHES FOUND\", \"\\n\")\n          \n          filing_text_letter_extract0_trim <- filing_text_letter_extract0[1,]\n          filing_text_letter_extract0_trim[,xmlcol] <- NA\n          filing_text_letter_extract0_trim[,xmltrim_col] <- NA\n          \n          \n        } else {\n          \n          #cat(\"END MATCHES FOUND\", \"\\n\")\n          \n          filing_text_letter_extract0_trim <- filing_text_letter_extract0[(filing_text_letter_extract0[,\"end_cum_sum\"]==0),]\n          #filing_text_letter_extract0_trim[,\"LETTER_INDEX\"] <- filing_text_letter_extract0_trim[,\"beg_cum_sum\"]\n          \n        }\n        rm(filing_text_letter_extract0,letter_flag_good)\n        rm(file_temp,index_temp,beg_cum_sum_temp)\n        \n        return(filing_text_letter_extract0_trim)\n        \n      }, bycol=c(\"file\",\"DOCUMENT_INDEX\",\"beg_cum_sum\"),xmlcol=xmlcol,summary=filing_text_letter_matches_summary_h,\n      .progress = \"none\", .inform = FALSE, .drop = FALSE, .parallel = FALSE, .paropts = NULL)\n      rm(filing_text_letter6)\n      \n      \n    }\n\n    #filing_text_letter8 <- filing_text_letter7[,(colnames(filing_text_letter7) %in% c(\"file\",\"DOCUMENT_INDEX\",\"beg_cum_sum\",xmlcol,xmltrim_col))]\n    filing_text_letter8 <- filing_text_letter7[,c(\"file\",\"DOCUMENT_INDEX\",\"beg_cum_sum\",xmlcol,xmltrim_col)]\n    colnames(filing_text_letter8)[match(\"beg_cum_sum\",names(filing_text_letter8))] <- \"LETTER_INDEX\"\n    \n    rm(filing_text_letter7)\n    \n    \n    #CREATE FINAL DATA AND OUTPUT\n    filing_text_comb <- merge(filing_no_text2, filing_text_letter8, \n                              by.x=c(\"file\",\"DOCUMENT_INDEX\"), by.y=c(\"file\",\"DOCUMENT_INDEX\"), \n                              all.x=FALSE, all.y=FALSE, sort=FALSE, suffixes=c(\".x\",\".y\"))\n    \n    rm(filing_no_text2,filing_text_letter8)\n    \n    #filing_text_letter_matches_summary <- filing_text_letter_matches_summary_h\n    filing_text_letter_matches_summary <- filing_text_letter_matches_summary_v\n    \n    rm(filing_text_letter_matches_summary_h,filing_text_letter_matches_summary_v)\n    \n    #df_comb_list <- list(filing_text_comb,filing_text_letter_matches_summary,\n    #                     filing_text_letter_matches_beg,filing_text_letter_matches_end,filing_text_letter_matches_sign,\n    #                     filing_text_letter_matches_pos,filing_text_letter_matches_close)\n    \n    #rm(filing_text_comb,filing_text_letter_matches_summary)\n    #rm(filing_text_letter_matches_beg,filing_text_letter_matches_end,filing_text_letter_matches_sign)\n    #rm(filing_text_letter_matches_pos,filing_text_letter_matches_close)\n    \n    rm(xmlcol,xmltrim_col)\n    rm(flags,file,filepath)\n    #rm(file_out,filepath_out)\n    \n    return(list(filing_text_comb,filing_text_letter_matches_summary,\n                filing_text_letter_matches_beg,filing_text_letter_matches_end,filing_text_letter_matches_sign,\n                filing_text_letter_matches_pos,filing_text_letter_matches_close))\n    \n  },\n  letter_regex_start=letter_regex_start,letter_regex_stop=letter_regex_stop,\n  .progress = \"none\",.inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)\n  \n  \n  \n  #letters <- bad_tags\n  \n  letters_comb0 <- sapply(letters, \"[\", 1)\n  letters_comb1 <- rbindlist(letters_comb0,fill=TRUE,use.names=TRUE)\n  #letters_comb  <- as.data.frame(letters_comb1,stringsAsFactors=FALSE) \n  letters_comb <- data.frame(yr=NA,letters_comb1,stringsAsFactors=FALSE) \n  letters_comb[,\"yr\"] <- yr\n  rm(letters_comb0,letters_comb1)\n  \n  letter_matches_summary0 <- sapply(letters, \"[\", 2)\n  letter_matches_summary1 <- rbindlist(letter_matches_summary0,fill=TRUE,use.names=TRUE)\n  letter_matches_summary <- data.frame(yr=NA,letter_matches_summary1,stringsAsFactors=FALSE) \n  letter_matches_summary[,\"yr\"] <- yr\n  rm(letter_matches_summary0,letter_matches_summary1)\n  \n  letter_matches_beg0 <- sapply(letters, \"[\", 3)\n  letter_matches_beg1 <- rbindlist(letter_matches_beg0,fill=TRUE,use.names=TRUE)\n  letter_matches_beg <- data.frame(yr=NA,letter_matches_beg1,stringsAsFactors=FALSE) \n  letter_matches_beg[,\"yr\"] <- yr\n  rm(letter_matches_beg0,letter_matches_beg1)\n  \n  letter_matches_end0 <- sapply(letters, \"[\", 4)\n  letter_matches_end1 <- rbindlist(letter_matches_end0,fill=TRUE,use.names=TRUE)\n  letter_matches_end <- data.frame(yr=NA,letter_matches_end1,stringsAsFactors=FALSE) \n  letter_matches_end[,\"yr\"] <- yr\n  rm(letter_matches_end0,letter_matches_end1)\n  \n  letter_matches_sign0 <- sapply(letters, \"[\", 5)\n  letter_matches_sign1 <- rbindlist(letter_matches_sign0,fill=TRUE,use.names=TRUE)\n  letter_matches_sign <- data.frame(yr=NA,letter_matches_sign1,stringsAsFactors=FALSE) \n  letter_matches_sign[,\"yr\"] <- yr\n  rm(letter_matches_sign0,letter_matches_sign1)\n  \n  letter_matches_pos0 <- sapply(letters, \"[\", 6)\n  letter_matches_pos1 <- rbindlist(letter_matches_pos0,fill=TRUE,use.names=TRUE)\n  letter_matches_pos <- data.frame(yr=NA,letter_matches_pos1,stringsAsFactors=FALSE) \n  letter_matches_pos[,\"yr\"] <- yr\n  rm(letter_matches_pos0,letter_matches_pos1)\n  \n  letter_matches_close0 <- sapply(letters, \"[\", 7)\n  letter_matches_close1 <- rbindlist(letter_matches_close0,fill=TRUE,use.names=TRUE)\n  letter_matches_close <- data.frame(yr=NA,letter_matches_close1,stringsAsFactors=FALSE) \n  letter_matches_close[,\"yr\"] <- yr\n  rm(letter_matches_close0,letter_matches_close1)\n  \n  \n  df_comb_list_all <- list(letters_comb,letter_matches_summary,\n                           letter_matches_beg,letter_matches_end,letter_matches_sign,\n                           letter_matches_pos,letter_matches_close)\n  \n  rm(letters,letters_comb,letter_matches_summary)\n  rm(letter_matches_beg,letter_matches_end,letter_matches_sign,letter_matches_pos,letter_matches_close)\n  rm(yr,yr_folder_path,sub_folder_path,downloaded_files3)\n  \n  return(df_comb_list_all)\n  \n},\npath_output=paste(output_directory,downloadfolder,sep=slash),subfolder=txtfolder_in,\nletter_regex_start=letter_regex_start,letter_regex_stop=letter_regex_stop,\n.progress = \"text\",.inform = TRUE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)\n\n\n###############################################################################\ncat(\"Seperate Data \\n\")\n###############################################################################\n\nletter_all_comb0 <- sapply(letters_all, \"[\", 1)\nletter_all_comb <- rbindlist(letter_all_comb0,fill=TRUE,use.names=TRUE)\n\nletter_all_matches_summary0 <- sapply(letters_all, \"[\", 2)\nletter_all_matches_summary <- rbindlist(letter_all_matches_summary0,fill=TRUE,use.names=TRUE)\n\nletter_all_matches_beg0 <- sapply(letters_all, \"[\", 3)\nletter_all_matches_beg <- rbindlist(letter_all_matches_beg0,fill=TRUE,use.names=TRUE)\n\nletter_all_matches_end0 <- sapply(letters_all, \"[\", 4)\nletter_all_matches_end <- rbindlist(letter_all_matches_end0,fill=TRUE,use.names=TRUE)\n\nletter_all_matches_sign0 <- sapply(letters_all, \"[\", 5)\nletter_all_matches_sign <- rbindlist(letter_all_matches_sign0,fill=TRUE,use.names=TRUE)\n\nletter_all_matches_pos0 <- sapply(letters_all, \"[\", 6)\nletter_all_matches_pos <- rbindlist(letter_all_matches_pos0,fill=TRUE,use.names=TRUE)\n\nletter_all_matches_close0 <- sapply(letters_all, \"[\", 7)\nletter_all_matches_close <- rbindlist(letter_all_matches_close0,fill=TRUE,use.names=TRUE)\n\n#rm(letter_all_comb0,letter_all_matches_summary0)\n#rm(letter_all_matches_beg0,letter_all_matches_end0,letter_all_matches_sign0,letter_all_matches_pos0,letter_all_matches_close0)\n\n\n###############################################################################\ncat(\"Output Combined Files \\n\")\n###############################################################################\n\n#Check to see if yr folder exists.  If not, create it.\nout_folder_path <- paste(download_folder_path, txtfolder_out, sep = \"\\\\\", collapse = \"\\\\\")   \ncreate_directory(out_folder_path,remove=1)\n\nwrite.table(letter_all_comb,file=paste(out_folder_path,\"\\\\\",\"letter_all_comb\",\".csv\",sep=\"\"), append=FALSE, na=\"NA\", \n            sep = \",\", quote = TRUE,dec = \".\",  qmethod = \"double\", col.names=TRUE, row.names = FALSE)\n\nwrite.table(letter_all_matches_summary,file=paste(out_folder_path,\"\\\\\",\"letter_all_matches_summary\",\".csv\",sep=\"\"), append=FALSE, na=\"NA\", \n            sep = \",\", quote = TRUE,dec = \".\",  qmethod = \"double\", col.names=TRUE, row.names = FALSE)\n\nwrite.table(letter_all_matches_beg,file=paste(out_folder_path,\"\\\\\",\"letter_all_matches_beg\",\".csv\",sep=\"\"), append=FALSE, na=\"NA\", \n            sep = \",\", quote = TRUE,dec = \".\",  qmethod = \"double\", col.names=TRUE, row.names = FALSE)\n\nwrite.table(letter_all_matches_end,file=paste(out_folder_path,\"\\\\\",\"letter_all_matches_end\",\".csv\",sep=\"\"), append=FALSE, na=\"NA\", \n            sep = \",\", quote = TRUE,dec = \".\",  qmethod = \"double\", col.names=TRUE, row.names = FALSE)\n\nwrite.table(letter_all_matches_sign,file=paste(out_folder_path,\"\\\\\",\"letter_all_matches_sign\",\".csv\",sep=\"\"), append=FALSE, na=\"NA\", \n            sep = \",\", quote = TRUE,dec = \".\",  qmethod = \"double\", col.names=TRUE, row.names = FALSE)\n\nwrite.table(letter_all_matches_pos,file=paste(out_folder_path,\"\\\\\",\"letter_all_matches_pos\",\".csv\",sep=\"\"), append=FALSE, na=\"NA\", \n            sep = \",\", quote = TRUE,dec = \".\",  qmethod = \"double\", col.names=TRUE, row.names = FALSE)\n\nwrite.table(letter_all_matches_close,file=paste(out_folder_path,\"\\\\\",\"letter_all_matches_close\",\".csv\",sep=\"\"), append=FALSE, na=\"NA\", \n            sep = \",\", quote = TRUE,dec = \".\",  qmethod = \"double\", col.names=TRUE, row.names = FALSE)\n\n",
    "created" : 1407261480114.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4473980",
    "id" : "1F72EFBC",
    "lastKnownWriteTime" : 1407704789,
    "path" : "//tsclient/C/Users/S.Brad/Documents/GitHub/Edgar_Filings_Shareholder_Letters/Extract_Filings.R",
    "project_path" : "Extract_Filings.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}