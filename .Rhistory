row.names(descrip_stats_data_yearly) <- seq(nrow(descrip_stats_data_yearly))
rm2(descrip_stats_data_yearly0)
### Create Aggregate Averages From Yearly Variables
yearly_avg_cols <- c("all_similarity_050pct_ios","all_similarity_100pct_ios","all_similarity_250pct_ios",
"all_similarity_500pct_ios","all_similarity_750pct_ios","all_similarity_900pct_ios",
"main_investment_strategy_similarity_050pct_ios","main_investment_strategy_similarity_100pct_ios","main_investment_strategy_similarity_250pct_ios",
"main_investment_strategy_similarity_500pct_ios","main_investment_strategy_similarity_750pct_ios","main_investment_strategy_similarity_900pct_ios",
"all_similarity_050pct_ios_below_quartile1","all_similarity_050pct_ios_above_quartile3",
"main_investment_strategy_similarity_050pct_ios_below_quartile1","main_investment_strategy_similarity_050pct_ios_above_quartile3",
"all_similarity_100pct_ios_below_quartile1","all_similarity_100pct_ios_above_quartile3",
"main_investment_strategy_similarity_100pct_ios_below_quartile1","main_investment_strategy_similarity_100pct_ios_above_quartile3",
"all_similarity_250pct_ios_below_quartile1","all_similarity_250pct_ios_above_quartile3",
"main_investment_strategy_similarity_250pct_ios_below_quartile1","main_investment_strategy_similarity_250pct_ios_above_quartile3",
"all_similarity_500pct_ios_below_quartile1","all_similarity_500pct_ios_above_quartile3",
"main_investment_strategy_similarity_500pct_ios_below_quartile1","main_investment_strategy_similarity_500pct_ios_above_quartile3",
"all_similarity_750pct_ios_below_quartile1","all_similarity_750pct_ios_above_quartile3",
"main_investment_strategy_similarity_750pct_ios_below_quartile1","main_investment_strategy_similarity_750pct_ios_above_quartile3",
"all_similarity_900pct_ios_below_quartile1","all_similarity_900pct_ios_above_quartile3")
descrip_stats_data_yearly_averages0 <- data.frame(descrip_stats_data_yearly,
matrix(NA, ncol=length(yearly_avg_cols), nrow=nrow(descrip_stats_data_yearly), dimnames=list(c(),paste("avg",yearly_avg_cols,sep="_"))),stringsAsFactors=FALSE)
descrip_stats_data_yearly_averages <- ddply(.data=descrip_stats_data_yearly_averages0, .variables=identifier, .fun = function(z,yearly_cols){
# z <- descrip_stats_data_yearly_averages0[descrip_stats_data_yearly_averages0[,identifier]==5002,]
# yearly_cols <- yearly_avg_cols
z_out <- z
for (j in 1:length(yearly_cols))
{
# j <- 1
z_out[,paste("avg",yearly_cols[j],sep="_")] <- mean(z_out[,yearly_cols[j]])
}
rm(j)
return(z_out)
}, yearly_cols=yearly_avg_cols,.progress = "none", .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)
descrip_stats_data_yearly_averages <- descrip_stats_data_yearly_averages[,colnames(descrip_stats_data_yearly_averages)[!(colnames(descrip_stats_data_yearly_averages) %in% c(yearly_avg_cols))]]
rm2(descrip_stats_data_yearly,descrip_stats_data_yearly_averages0,yearly_avg_cols)
### Create Aggregate Level Data
descrip_stats_strategy_cols <- unique(descrip_stats_data_yearly_averages[,"main_investment_strategy"])
descrip_stats_strategy_cols <- sort(descrip_stats_strategy_cols)
descrip_stats_strategy_cols <- c(descrip_stats_strategy_cols[!(descrip_stats_strategy_cols %in% c("Others"))],"Others")
descrip_stats_ios_read_cols <- c("sentences_ios","words_ios","chars_no_space_ios","num_syll_ios","sntc_per_word_ios",
"avg_sentc_length_ios","avg_word_length_ios","avg_syll_word_ios","sntc_per100_ios",
"syll_per100_ios","lett_per100_ios","fog_hard_words_ios",
"ari_ios","coleman_liau_ios","flesch_kincaid_ios","fog_ios","smog_ios",
"avg_grade_level_ios","avg_grade_level_ac_ios","avg_grade_level_acf_ios")
descrip_stats_ios_sim_cols <- names(descrip_stats_data_yearly_averages)[grep("pct_ios", names(descrip_stats_data_yearly_averages))]
descrip_stats_ios_quartile_cols <- c(names(descrip_stats_data_yearly_averages)[grep("below_quartile1", names(descrip_stats_data_yearly_averages))],
names(descrip_stats_data_yearly_averages)[grep("above_quartile3", names(descrip_stats_data_yearly_averages))])
descrip_stats_pattern_cols_99 <- c("per_positive_percent_99","num_zero_percent_99","per_repeats_percent_99","uniform_percent_99",
"string_percent_99","num_pairs_percent_99","per_negative_percent_99","ar_1_percent_99","indexrsq_percent_99",
"kink_percent_99","quality_score_trim0_99","quality_score_trim1_99","quality_score_trim2_99")
descrip_stats_pattern_cols_95 <- c("per_positive_percent_95","num_zero_percent_95","per_repeats_percent_95","uniform_percent_95",
"string_percent_95","num_pairs_percent_95","per_negative_percent_95","ar_1_percent_95","indexrsq_percent_95",
"kink_percent_95","quality_score_trim0_95","quality_score_trim1_95","quality_score_trim2_95")
descrip_stats_pattern_cols_90 <- c("per_positive_percent_90","num_zero_percent_90","per_repeats_percent_90","uniform_percent_90",
"string_percent_90","num_pairs_percent_90","per_negative_percent_90","ar_1_percent_90","indexrsq_percent_90",
"kink_percent_90","quality_score_trim0_90","quality_score_trim1_90","quality_score_trim2_90")
descrip_stats_pattern_cols <- c(descrip_stats_pattern_cols_99,descrip_stats_pattern_cols_95,descrip_stats_pattern_cols_90)
#descrip_stats_pattern_cols_trim <- descrip_stats_pattern_cols[!(descrip_stats_pattern_cols %in% c(descrip_stats_pattern_cols[grep("per_positive", descrip_stats_pattern_cols)],descrip_stats_pattern_cols[grep("per_repeats", descrip_stats_pattern_cols)]))]
descrip_stats_pattern_cols_trim <- descrip_stats_pattern_cols[!(descrip_stats_pattern_cols %in% c(descrip_stats_pattern_cols[grep("per_positive", descrip_stats_pattern_cols)]))]
rm2(descrip_stats_pattern_cols_99,descrip_stats_pattern_cols_95,descrip_stats_pattern_cols_90)
#yearly_level_cols <- c("yr","year_group_id","sdnet_flow","sdpct_flow",descrip_stats_ios_read_cols,
#                       descrip_stats_ios_sim_cols,descrip_stats_ios_quartile_cols)
yearly_level_cols <- c("yr","year_group_id","sdnet_flow","sdpct_flow",descrip_stats_ios_quartile_cols)
descrip_stats_data_aggregate0 <-  descrip_stats_data_yearly_averages[,!(colnames(descrip_stats_data_yearly_averages) %in% yearly_level_cols)]
#descrip_stats_data_aggregate <- unique(descrip_stats_data_aggregate0)
descrip_stats_data_aggregate <- data.frame(yr=NA,year_group_id=NA,unique(descrip_stats_data_aggregate0),stringsAsFactors=FALSE)
descrip_stats_data_aggregate[,"yr"] <- 9999
descrip_stats_data_aggregate[,"year_group_id"] <- 9999
row.names(descrip_stats_data_aggregate) <- seq(nrow(descrip_stats_data_aggregate))
rm2(descrip_stats_data_aggregate0)
###############################################################################
cat("PANEL REGRESSION - VARIABLES", "\n")
###############################################################################
pattern_str <- "kink_percent_90  + indexrsq_percent_90 + ar_1_percent_90 + num_zero_percent_90 + uniform_percent_90 + string_percent_90 + num_pairs_percent_90 + per_negative_percent_90"
quality_str <- "num_zero_percent_90 + uniform_percent_90 + string_percent_90 + num_pairs_percent_90 + per_negative_percent_90"
nonquality_str <- "kink_percent_90  + indexrsq_percent_90 + ar_1_percent_90"
pb_str <- "kink_percent_90  + indexrsq_percent_90 + ar_1_percent_90 + num_zero_percent_90 + uniform_percent_90 + string_percent_90"
str <- "kink_percent_90  + indexrsq_percent_90 + ar_1_percent_90 + num_zero_percent_90 + uniform_percent_90 + string_percent_90"
###############################################################################
cat("PANEL REGRESSION - READBILITY", "\n")
###############################################################################
output_directory_reg_readability <- paste(output_directory,"reg_readability","\\",sep="")
create_directory(output_directory_reg_readability,remove=1)
#Regression equations
regression_equations1_1 <- list(#time_frame=list(c(beg_year,2000,2000,2006),
#                c(end_year,2011,2005,2011)),
time_frame=list(c(9999),c(9999)),
dep_var= c("kink_percent_90","indexrsq_percent_90","ar_1_percent_90","num_zero_percent_90","uniform_percent_90","string_percent_90","num_pairs_percent_90","per_negative_percent_90"),
models=c("                                                 avg_grade_level_XXX ",
"ari_XXX + coleman_liau_XXX + flesch_kincaid_XXX + fog_XXX + smog_XXX ",
"                                                    coleman_liau_XXX ",
"                                                 avg_grade_level_XXX + avg_return + volatilty + size + max_age_y ",
"ari_XXX + coleman_liau_XXX + flesch_kincaid_XXX + fog_XXX + smog_XXX + avg_return + volatilty + size + max_age_y ",
"                                                    coleman_liau_XXX + avg_return + volatilty + size + max_age_y ",
"                                                 avg_grade_level_XXX + avg_return + volatilty + size + max_age_y + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin ",
"ari_XXX + coleman_liau_XXX + flesch_kincaid_XXX + fog_XXX + smog_XXX + avg_return + volatilty + size + max_age_y + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin ",
"                                                    coleman_liau_XXX + avg_return + volatilty + size + max_age_y + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin "),
model_type=c("pooling"),
note=c("readability"))
# regression_equations1_2 <- list(time_frame=list(c(end_year),c(end_year)),
#                                 #time_frame=list(c(beg_year),c(end_year)),
#                                 dep_var=c("ari_ios","coleman_liau_ios","flesch_kincaid_ios","fog_ios","smog_ios","avg_grade_level_ios"),
#                                 models=c("quality_score_trim2_90",
#                                          pattern_str,
#                                          quality_str,
#                                          nonquality_str,
#                                          "quality_score_trim2_90 + mktadjret_lag1 + mktadjret_lag2 + mktadjret_lag3 + mktadjret_lag1_sq + age_y + log_aum_lag1 + management_fee + other_fee + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin",
#                                          paste(pattern_str, "    + mktadjret_lag1 + mktadjret_lag2 + mktadjret_lag3 + mktadjret_lag1_sq + age_y + log_aum_lag1 + management_fee + other_fee + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin",sep=""),
#                                          paste(pattern_str, "    + mktadjret_lag1 + mktadjret_lag2 + mktadjret_lag3 + mktadjret_lag1_sq + age_y + log_aum_lag1 + management_fee + other_fee + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin",sep=""),
#                                          paste(nonquality_str, " + mktadjret_lag1 + mktadjret_lag2 + mktadjret_lag3 + mktadjret_lag1_sq + age_y + log_aum_lag1 + management_fee + other_fee + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin",sep="")),
#                                 model_type=c("pooling"),
#                                 note=c("readability"))
#regression_equations1 <- list(regression_equations1_1,regression_equations1_2)
#rm(regression_equations1_1,regression_equations1_2)
regression_equations1 <- list(regression_equations1_1)
rm(regression_equations1_1)
regression_equations_expand1 <- regression_expand(regression_equations1)
regression_equations_expand_adj_read1 <- regression_read_adjustment(equations_df=regression_equations_expand1,equations_col="indep_var",
name_col="outname_short", read_prefix="XXX", read_list="ios",
index_list=c("date_index","list_index","dep_index","model_index"))
regression_equations_expand_adj_sim1 <- regression_sim_adjustment(equations_df=regression_equations_expand_adj_read1,equations_col="indep_var",
name_col="outname_short", sim_prefix="YYYpct", sim_list=c('NOSIM'),
index_list=c("date_index","list_index","dep_index","model_index","read_index"))
regression_equations_final1 <- regression_equations_expand_adj_sim1
regression_equations_final1 <- regression_equations_final1[order(regression_equations_final1[,"date_index"],regression_equations_final1[,"list_index"],
regression_equations_final1[,"dep_index"],regression_equations_final1[,"read_index"],
regression_equations_final1[,"sim_index"],regression_equations_final1[,"model_index"]),]
row.names(regression_equations_final1) <- seq(nrow(regression_equations_final1))
rm2(regression_equations_expand1,regression_equations_expand_adj_read1,regression_equations_expand_adj_sim1)
# regression_correlation1 <- regression_correlation(x=regression_equations_final1,data=data_all,decimals=corr_decimals,
#                                                   read_abrev <- c('ios'), sim_abrev <- c('NOSIM'),
#                                                   additional_vars=c("pflow_lag1","pflow_lag2","pflow_lag3","pflow_lag4",
#                                                                     "mktadjret_lag1","mktadjret_lag2","mktadjret_lag3","mktadjret_lag4",
#                                                                     "exret_lag1","exret_lag2","exret_lag3","exret_lag4"))
#
#
# rm2(regression_correlation1)
equations_df <- regression_equations_final1
data_all <- descrip_stats_data_aggregate
date_index_var <- "date_index"
id <- identifier
output_dir <- output_directory_reg_readability
x <- regression_equations_final1[regression_equations_final1[,"date_index"]==1,]
Start_yr_temp <- as.integer(unique(x["beg_years"]))
End_yr_temp <- as.integer(unique(x["end_years"]))
cat("\n","START YEAR:", Start_yr_temp, "END YEAR:", End_yr_temp,"\n")
data_temp <- data_all
#data_temp.pd <- pdata.frame(data_all, index=c(id, "yr_month"), drop.index=TRUE, row.names=TRUE)
data_temp <- data_temp[(data_temp[,"yr"]>=Start_yr_temp & data_temp[,"yr"]<=End_yr_temp),]
row.names(data_temp) <- seq(nrow(data_temp))
#data_temp.pd <- pdata.frame(data_temp, index=c(id, "yr_month"), drop.index=TRUE, row.names=TRUE)
y <- x[(x[,"list_index"]==1 & x[,"dep_index"]==1 & x[,"read_index"]==1 & x[,"sim_index"]==1),]
dep_var_temp <- unique(y[,c("dep_var")])
note_temp <- unique(y[,c("note")])
model_type_temp <- unique(y[,c("model_type")])
#out_file_name <- paste("reg_compare_plm",dep_var_temp,name_short,note_temp,sep="_")
out_file_name <- paste("reg_compare_probit",unique(y[,c("outname_short")]),sep="_")
note_temp_clean1 <- gsub("_", " ", note_temp, perl=TRUE)
note_temp_clean2 <- gsub("(^|[[:space:]])([[:alpha:]])", "\\1\\U\\2", note_temp_clean1, perl=TRUE)
regressions_temp <- dlply(.data=y, .variables="model_index",
.fun = function(z,data_temp.pd,data_temp,model_type_temp,id){
#l <- 1
#l <- 2
#l <- 5
#z <- y[l,]
model_count <- as.integer(unique(z[,c("model_index")]))
cat(model_count, "\n")
ind_vars_reg0 <- z[,"indep_var"]
ind_vars_reg0 <- gsub("XXX","ios",ind_vars_reg0,ignore.case = TRUE)
#reg0 <- plm(as.formula(paste(z[,"dep_var"],ind_vars_reg0,sep="~")),data=data_temp.pd,model=model_type_temp)
#reg0_rse <- mcl.plm(data_temp, reg0, data_temp[,id], data_temp[,"month"])
reg0 <- glm(as.formula(paste(z[,"dep_var"],ind_vars_reg0,sep="~")), family = binomial(link = "probit"), data=data_temp)
reg0_rse <- coeftest(reg0)
rm(model_count,ind_vars_reg0)
return(list(reg0,reg0_rse))
},
data_temp.pd=data_temp.pd, data_temp=data_temp, model_type_temp=model_type_temp, id=id,
.progress = "none", .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)
reg <- sapply(regressions_temp, "[",1)
rse <- sapply(regressions_temp, "[[",2)
se <- llply(.data=rse, .fun = function(w){w[,4]},
.progress = "none", .inform = FALSE,.parallel = FALSE, .paropts = NULL)
pval <- llply(.data=rse, .fun = function(w){w[,4]},
.progress = "none", .inform = FALSE,.parallel = FALSE, .paropts = NULL)
cat("\n")
htmlreg(l=reg,
model.names=paste("(",seq(1,nrow(y)),")",sep=""),
override.se=se,
override.pval=pval,
stars=c(0.01, 0.05, 0.1), digits=3,
caption=paste("Effect Of",note_temp_clean2,"On Hedge Fund Flows – Multivariate",sep=" "),
file=paste(output_dir,out_file_name,".doc",sep=""))
rm(dep_var_temp,note_temp,model_type_temp,out_file_name,note_temp_clean1,note_temp_clean2)
rm(regressions_temp,reg,rse,se,pval)
regression_execute_probit <- function(equations_df,data_all,date_index_var,id,output_dir){
# equations_df <- regression_equations_final1
# data_all <- descrip_stats_data_aggregate
# date_index_var <- "date_index"
# id <- identifier
# output_dir <- output_directory_reg_readability
require(plyr)
invisible(d_ply(.data=equations_df, .variables=date_index_var,
.fun = function(x,data_all,id,output_dir){
# x <- regression_equations_final1[regression_equations_final1[,"date_index"]==1,]
# x <- regression_equations_final1[regression_equations_final1[,"date_index"]==2,]
Start_yr_temp <- as.integer(unique(x["beg_years"]))
End_yr_temp <- as.integer(unique(x["end_years"]))
cat("\n","START YEAR:", Start_yr_temp, "END YEAR:", End_yr_temp,"\n")
data_temp <- data_all
#data_temp.pd <- pdata.frame(data_all, index=c(id, "yr_month"), drop.index=TRUE, row.names=TRUE)
data_temp <- data_temp[(data_temp[,"yr"]>=Start_yr_temp & data_temp[,"yr"]<=End_yr_temp),]
row.names(data_temp) <- seq(nrow(data_temp))
#data_temp.pd <- pdata.frame(data_temp, index=c(id, "yr_month"), drop.index=TRUE, row.names=TRUE)
d_ply(.data=x, .variables=c("list_index","dep_index","read_index","sim_index"),
.fun = function(y,data_temp.pd,data_temp,id,output_dir){
# y <- x[(x[,"list_index"]==1 & x[,"dep_index"]==1 & x[,"read_index"]==1 & x[,"sim_index"]==1),]
dep_var_temp <- unique(y[,c("dep_var")])
note_temp <- unique(y[,c("note")])
model_type_temp <- unique(y[,c("model_type")])
#out_file_name <- paste("reg_compare_plm",dep_var_temp,name_short,note_temp,sep="_")
out_file_name <- paste("reg_compare_probit",unique(y[,c("outname_short")]),sep="_")
note_temp_clean1 <- gsub("_", " ", note_temp, perl=TRUE)
note_temp_clean2 <- gsub("(^|[[:space:]])([[:alpha:]])", "\\1\\U\\2", note_temp_clean1, perl=TRUE)
regressions_temp <- dlply(.data=y, .variables="model_index",
.fun = function(z,data_temp.pd,data_temp,model_type_temp,id){
#l <- 1
#l <- 2
#l <- 5
#z <- y[l,]
model_count <- as.integer(unique(z[,c("model_index")]))
cat(model_count, "\n")
ind_vars_reg0 <- z[,"indep_var"]
ind_vars_reg0 <- gsub("XXX","ios",ind_vars_reg0,ignore.case = TRUE)
#reg0 <- plm(as.formula(paste(z[,"dep_var"],ind_vars_reg0,sep="~")),data=data_temp.pd,model=model_type_temp)
#reg0_rse <- mcl.plm(data_temp, reg0, data_temp[,id], data_temp[,"month"])
reg0 <- glm(as.formula(paste(z[,"dep_var"],ind_vars_reg0,sep="~")), family = binomial(link = "probit"), data=data_temp)
reg0_rse <- coeftest(reg0)
rm(model_count,ind_vars_reg0)
return(list(reg0,reg0_rse))
},
data_temp.pd=data_temp.pd, data_temp=data_temp, model_type_temp=model_type_temp, id=id,
.progress = "none", .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)
reg <- sapply(regressions_temp, "[",1)
rse <- sapply(regressions_temp, "[[",2)
se <- llply(.data=rse, .fun = function(w){w[,4]},
.progress = "none", .inform = FALSE,.parallel = FALSE, .paropts = NULL)
pval <- llply(.data=rse, .fun = function(w){w[,4]},
.progress = "none", .inform = FALSE,.parallel = FALSE, .paropts = NULL)
cat("\n")
htmlreg(l=reg,
model.names=paste("(",seq(1,nrow(y)),")",sep=""),
override.se=se,
override.pval=pval,
stars=c(0.01, 0.05, 0.1), digits=3,
caption=paste("Effect Of",note_temp_clean2,"On Hedge Fund Flows – Multivariate",sep=" "),
file=paste(output_dir,out_file_name,".doc",sep=""))
rm(dep_var_temp,note_temp,model_type_temp,out_file_name,note_temp_clean1,note_temp_clean2)
rm(regressions_temp,reg,rse,se,pval)
},
data_temp.pd=data_temp.pd, data_temp=data_temp,id=id,output_dir=output_dir,
.progress = "text", .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)
rm(Start_yr_temp,End_yr_temp,data_temp,data_temp.pd)
},
data_all=data_all,id=id,output_dir=output_dir,
.progress = "text", .inform = FALSE,.print = FALSE, .parallel = FALSE, .paropts = NULL))
}
regression_execute_probit(equations_df=regression_equations_final1,data_all=data_all,date_index_var="date_index",
id=identifier,output_dir=output_directory_reg_readability)
regression_execute_probit(equations_df=regression_equations_final1,data_all=data_all,date_index_var="date_index",
id=identifier,output_dir=output_directory_reg_readability)
regression_execute_probit <- function(equations_df,data_all,date_index_var,id,output_dir){
# equations_df <- regression_equations_final1
# data_all <- descrip_stats_data_aggregate
# date_index_var <- "date_index"
# id <- identifier
# output_dir <- output_directory_reg_readability
require(plyr)
invisible(d_ply(.data=equations_df, .variables=date_index_var,
.fun = function(x,data_all,id,output_dir){
# x <- regression_equations_final1[regression_equations_final1[,"date_index"]==1,]
# x <- regression_equations_final1[regression_equations_final1[,"date_index"]==2,]
Start_yr_temp <- as.integer(unique(x["beg_years"]))
End_yr_temp <- as.integer(unique(x["end_years"]))
cat("\n","START YEAR:", Start_yr_temp, "END YEAR:", End_yr_temp,"\n")
data_temp <- data_all
data_temp <- data_temp[(data_temp[,"yr"]>=Start_yr_temp & data_temp[,"yr"]<=End_yr_temp),]
row.names(data_temp) <- seq(nrow(data_temp))
d_ply(.data=x, .variables=c("list_index","dep_index","read_index","sim_index"),
.fun = function(y,data_temp.pd,data_temp,id,output_dir){
# y <- x[(x[,"list_index"]==1 & x[,"dep_index"]==1 & x[,"read_index"]==1 & x[,"sim_index"]==1),]
dep_var_temp <- unique(y[,c("dep_var")])
note_temp <- unique(y[,c("note")])
model_type_temp <- unique(y[,c("model_type")])
out_file_name <- paste("reg_compare_probit",unique(y[,c("outname_short")]),sep="_")
note_temp_clean1 <- gsub("_", " ", note_temp, perl=TRUE)
note_temp_clean2 <- gsub("(^|[[:space:]])([[:alpha:]])", "\\1\\U\\2", note_temp_clean1, perl=TRUE)
regressions_temp <- dlply(.data=y, .variables="model_index",
.fun = function(z,data_temp,model_type_temp,id){
#l <- 1
#l <- 2
#l <- 5
#z <- y[l,]
model_count <- as.integer(unique(z[,c("model_index")]))
#cat(model_count, "\n")
ind_vars_reg0 <- z[,"indep_var"]
ind_vars_reg0 <- gsub("XXX","ios",ind_vars_reg0,ignore.case = TRUE)
#reg0 <- plm(as.formula(paste(z[,"dep_var"],ind_vars_reg0,sep="~")),data=data_temp.pd,model=model_type_temp)
#reg0_rse <- mcl.plm(data_temp, reg0, data_temp[,id], data_temp[,"month"])
reg0 <- glm(as.formula(paste(z[,"dep_var"],ind_vars_reg0,sep="~")), family = binomial(link = "probit"), data=data_temp)
reg0_rse <- coeftest(reg0)
rm(model_count,ind_vars_reg0)
return(list(reg0,reg0_rse))
}, data_temp=data_temp, model_type_temp=model_type_temp, id=id,
.progress = "none", .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)
reg <- sapply(regressions_temp, "[",1)
rse <- sapply(regressions_temp, "[[",2)
se <- llply(.data=rse, .fun = function(w){w[,4]})
pval <- llply(.data=rse, .fun = function(w){w[,4]})
cat("\n")
htmlreg(l=reg,
model.names=paste("(",seq(1,nrow(y)),")",sep=""),
override.se=se,
override.pval=pval,
stars=c(0.01, 0.05, 0.1), digits=3,
caption=paste("Effect Of",note_temp_clean2,"On Hedge Fund Flows – Multivariate",sep=" "),
file=paste(output_dir,out_file_name,".doc",sep=""))
rm(dep_var_temp,note_temp,model_type_temp,out_file_name,note_temp_clean1,note_temp_clean2)
rm(regressions_temp,reg,rse,se,pval)
},
data_temp=data_temp,id=id,output_dir=output_dir,
.progress = "text", .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)
rm(Start_yr_temp,End_yr_temp,data_temp)
},
data_all=data_all,id=id,output_dir=output_dir,
.progress = "text", .inform = FALSE,.print = FALSE, .parallel = FALSE, .paropts = NULL))
}
regression_execute_probit(equations_df=regression_equations_final1,data_all=data_all,date_index_var="date_index",
id=identifier,output_dir=output_directory_reg_readability)
output_directory_reg_similarity <- paste(output_directory,"reg_similarity","\\",sep="")
create_directory(output_directory_reg_similarity,remove=1)
#sim_type2 <- c("050pct","100pct","250pct","500pct","750pct","900pct")
sim_type2 <- c("050pct","750pct","900pct")
#Regression equations
regression_equations2_1 <- list(time_frame=list(c(9999),c(9999)),
dep_var= c("kink_percent_90","indexrsq_percent_90","ar_1_percent_90","num_zero_percent_90","uniform_percent_90","string_percent_90","num_pairs_percent_90","per_negative_percent_90"),
models=c("all_similarity_YYYpct_XXX ",
"                            main_investment_strategy_similarity_YYYpct_XXX ",
"all_similarity_YYYpct_XXX + main_investment_strategy_similarity_YYYpct_XXX "
"all_similarity_YYYpct_XXX                                                  + avg_return + volatilty + size + max_age_y ",
"                            main_investment_strategy_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y ",
"all_similarity_YYYpct_XXX + main_investment_strategy_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y ",
"                                                 all_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin ",
"                            main_investment_strategy_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin ",
"all_similarity_YYYpct_XXX + main_investment_strategy_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin "),
model_type=c("pooling"),
note=c("similarity"))
#regression_equations2 <- list(regression_equations2_1,regression_equations2_2)
#rm(regression_equations2_1,regression_equations2_2)
regression_equations2 <- list(regression_equations2_1)
rm(regression_equations2_1)
regression_equations_expand2 <- regression_expand(regression_equations2)
regression_equations_expand_adj_read2 <- regression_read_adjustment(equations_df=regression_equations_expand2,equations_col="indep_var",
name_col="outname_short", read_prefix="XXX", read_list="ios",
index_list=c("date_index","list_index","dep_index","model_index"))
regression_equations_expand_adj_sim2 <- regression_sim_adjustment(equations_df=regression_equations_expand_adj_read2,equations_col="indep_var",
#name_col="outname_short", sim_prefix="YYYpct", sim_list=sim_type2,
name_col="outname_short", sim_prefix="YYYpct", sim_list="NOSIM",
index_list=c("date_index","list_index","dep_index","model_index","read_index"))
regression_equations_final2 <- regression_equations_expand_adj_sim2
regression_equations_final2 <- regression_equations_final2[order(regression_equations_final2[,"date_index"],regression_equations_final2[,"list_index"],
regression_equations_final2[,"dep_index"],regression_equations_final2[,"read_index"],
regression_equations_final2[,"sim_index"],regression_equations_final2[,"model_index"]),]
row.names(regression_equations_final2) <- seq(nrow(regression_equations_final2))
rm2(regression_equations_expand2,regression_equations_expand_adj_read2,regression_equations_expand_adj_sim2)
#
# regression_correlation2 <- regression_correlation(x=regression_equations_final2,data=data_all,decimals=corr_decimals,
#                                                   read_abrev <- c('ios'), sim_abrev <- sim_type2,
#                                                   additional_vars=c("pflow_lag1","pflow_lag2","pflow_lag3","pflow_lag4",
#                                                                     "mktadjret_lag1","mktadjret_lag2","mktadjret_lag3","mktadjret_lag4",
#                                                                     "exret_lag1","exret_lag2","exret_lag3","exret_lag4"))
#
# rm2(regression_correlation2,sim_type2)
output_directory_reg_similarity <- paste(output_directory,"reg_similarity","\\",sep="")
create_directory(output_directory_reg_similarity,remove=1)
#sim_type2 <- c("050pct","100pct","250pct","500pct","750pct","900pct")
sim_type2 <- c("050pct","750pct","900pct")
#Regression equations
regression_equations2_1 <- list(time_frame=list(c(9999),c(9999)),
dep_var= c("kink_percent_90","indexrsq_percent_90","ar_1_percent_90","num_zero_percent_90","uniform_percent_90","string_percent_90","num_pairs_percent_90","per_negative_percent_90"),
models=c("all_similarity_YYYpct_XXX ",
"                            main_investment_strategy_similarity_YYYpct_XXX ",
"all_similarity_YYYpct_XXX + main_investment_strategy_similarity_YYYpct_XXX ",
"all_similarity_YYYpct_XXX                                                  + avg_return + volatilty + size + max_age_y ",
"                            main_investment_strategy_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y ",
"all_similarity_YYYpct_XXX + main_investment_strategy_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y ",
"                                                 all_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin ",
"                            main_investment_strategy_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin ",
"all_similarity_YYYpct_XXX + main_investment_strategy_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin "),
model_type=c("pooling"),
note=c("similarity"))
#regression_equations2 <- list(regression_equations2_1,regression_equations2_2)
#rm(regression_equations2_1,regression_equations2_2)
regression_equations2 <- list(regression_equations2_1)
rm(regression_equations2_1)
regression_equations_expand2 <- regression_expand(regression_equations2)
regression_equations_expand_adj_read2 <- regression_read_adjustment(equations_df=regression_equations_expand2,equations_col="indep_var",
name_col="outname_short", read_prefix="XXX", read_list="ios",
index_list=c("date_index","list_index","dep_index","model_index"))
regression_equations_expand_adj_sim2 <- regression_sim_adjustment(equations_df=regression_equations_expand_adj_read2,equations_col="indep_var",
#name_col="outname_short", sim_prefix="YYYpct", sim_list=sim_type2,
name_col="outname_short", sim_prefix="YYYpct", sim_list="NOSIM",
index_list=c("date_index","list_index","dep_index","model_index","read_index"))
regression_equations_final2 <- regression_equations_expand_adj_sim2
regression_equations_final2 <- regression_equations_final2[order(regression_equations_final2[,"date_index"],regression_equations_final2[,"list_index"],
regression_equations_final2[,"dep_index"],regression_equations_final2[,"read_index"],
regression_equations_final2[,"sim_index"],regression_equations_final2[,"model_index"]),]
row.names(regression_equations_final2) <- seq(nrow(regression_equations_final2))
rm2(regression_equations_expand2,regression_equations_expand_adj_read2,regression_equations_expand_adj_sim2)
#
# regression_correlation2 <- regression_correlation(x=regression_equations_final2,data=data_all,decimals=corr_decimals,
#                                                   read_abrev <- c('ios'), sim_abrev <- sim_type2,
#                                                   additional_vars=c("pflow_lag1","pflow_lag2","pflow_lag3","pflow_lag4",
#                                                                     "mktadjret_lag1","mktadjret_lag2","mktadjret_lag3","mktadjret_lag4",
#                                                                     "exret_lag1","exret_lag2","exret_lag3","exret_lag4"))
#
# rm2(regression_correlation2,sim_type2)
regression_execute_probit(equations_df=regression_equations_final2,data_all=data_all,date_index_var="date_index",
id=identifier,output_dir=output_directory_reg_similarity)
View(regression_equations_final2)
output_directory_reg_similarity <- paste(output_directory,"reg_similarity","\\",sep="")
create_directory(output_directory_reg_similarity,remove=1)
#sim_type2 <- c("050pct","100pct","250pct","500pct","750pct","900pct")
sim_type2 <- c("050pct","750pct","900pct")
#Regression equations
regression_equations2_1 <- list(time_frame=list(c(9999),c(9999)),
dep_var= c("kink_percent_90","indexrsq_percent_90","ar_1_percent_90","num_zero_percent_90","uniform_percent_90","string_percent_90","num_pairs_percent_90","per_negative_percent_90"),
models=c("all_similarity_YYYpct_XXX ",
"                            main_investment_strategy_similarity_YYYpct_XXX ",
"all_similarity_YYYpct_XXX + main_investment_strategy_similarity_YYYpct_XXX ",
"all_similarity_YYYpct_XXX                                                  + avg_return + volatilty + size + max_age_y ",
"                            main_investment_strategy_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y ",
"all_similarity_YYYpct_XXX + main_investment_strategy_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y ",
"                                                 all_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin ",
"                            main_investment_strategy_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin ",
"all_similarity_YYYpct_XXX + main_investment_strategy_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin "),
model_type=c("pooling"),
note=c("similarity"))
#regression_equations2 <- list(regression_equations2_1,regression_equations2_2)
#rm(regression_equations2_1,regression_equations2_2)
regression_equations2 <- list(regression_equations2_1)
rm(regression_equations2_1)
regression_equations_expand2 <- regression_expand(regression_equations2)
regression_equations_expand_adj_read2 <- regression_read_adjustment(equations_df=regression_equations_expand2,equations_col="indep_var",
name_col="outname_short", read_prefix="XXX", read_list="ios",
index_list=c("date_index","list_index","dep_index","model_index"))
regression_equations_expand_adj_sim2 <- regression_sim_adjustment(equations_df=regression_equations_expand_adj_read2,equations_col="indep_var",
name_col="outname_short", sim_prefix="YYYpct", sim_list=sim_type2,
#name_col="outname_short", sim_prefix="YYYpct", sim_list="NOSIM",
index_list=c("date_index","list_index","dep_index","model_index","read_index"))
regression_equations_final2 <- regression_equations_expand_adj_sim2
regression_equations_final2 <- regression_equations_final2[order(regression_equations_final2[,"date_index"],regression_equations_final2[,"list_index"],
regression_equations_final2[,"dep_index"],regression_equations_final2[,"read_index"],
regression_equations_final2[,"sim_index"],regression_equations_final2[,"model_index"]),]
row.names(regression_equations_final2) <- seq(nrow(regression_equations_final2))
rm2(regression_equations_expand2,regression_equations_expand_adj_read2,regression_equations_expand_adj_sim2)
regression_execute_probit(equations_df=regression_equations_final2,data_all=data_all,date_index_var="date_index",
id=identifier,output_dir=output_directory_reg_similarity)
output_directory_reg_similarity <- paste(output_directory,"reg_similarity","\\",sep="")
create_directory(output_directory_reg_similarity,remove=1)
#sim_type2 <- c("050pct","100pct","250pct","500pct","750pct","900pct")
sim_type2 <- c("050pct","750pct","900pct")
#Regression equations
regression_equations2_1 <- list(time_frame=list(c(9999),c(9999)),
dep_var= c("kink_percent_90","indexrsq_percent_90","ar_1_percent_90","num_zero_percent_90","uniform_percent_90","string_percent_90","num_pairs_percent_90","per_negative_percent_90"),
models=c("avg_all_similarity_YYYpct_XXX ",
"                                avg_main_investment_strategy_similarity_YYYpct_XXX ",
"avg_all_similarity_YYYpct_XXX + avg_main_investment_strategy_similarity_YYYpct_XXX ",
"avg_all_similarity_YYYpct_XXX                                                      + avg_return + volatilty + size + max_age_y ",
"                                avg_main_investment_strategy_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y ",
"avg_all_similarity_YYYpct_XXX + avg_main_investment_strategy_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y ",
"avg_all_similarity_YYYpct_XXX                                                      + avg_return + volatilty + size + max_age_y + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin ",
"                                avg_main_investment_strategy_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin ",
"avg_all_similarity_YYYpct_XXX + avg_main_investment_strategy_similarity_YYYpct_XXX + avg_return + volatilty + size + max_age_y + listed_on_exchange_bin + domicile_onshore_bin + flagship_bin + dead_bin "),
model_type=c("pooling"),
note=c("similarity"))
#regression_equations2 <- list(regression_equations2_1,regression_equations2_2)
#rm(regression_equations2_1,regression_equations2_2)
regression_equations2 <- list(regression_equations2_1)
rm(regression_equations2_1)
regression_equations_expand2 <- regression_expand(regression_equations2)
regression_equations_expand_adj_read2 <- regression_read_adjustment(equations_df=regression_equations_expand2,equations_col="indep_var",
name_col="outname_short", read_prefix="XXX", read_list="ios",
index_list=c("date_index","list_index","dep_index","model_index"))
regression_equations_expand_adj_sim2 <- regression_sim_adjustment(equations_df=regression_equations_expand_adj_read2,equations_col="indep_var",
name_col="outname_short", sim_prefix="YYYpct", sim_list=sim_type2,
#name_col="outname_short", sim_prefix="YYYpct", sim_list="NOSIM",
index_list=c("date_index","list_index","dep_index","model_index","read_index"))
regression_equations_final2 <- regression_equations_expand_adj_sim2
regression_equations_final2 <- regression_equations_final2[order(regression_equations_final2[,"date_index"],regression_equations_final2[,"list_index"],
regression_equations_final2[,"dep_index"],regression_equations_final2[,"read_index"],
regression_equations_final2[,"sim_index"],regression_equations_final2[,"model_index"]),]
row.names(regression_equations_final2) <- seq(nrow(regression_equations_final2))
rm2(regression_equations_expand2,regression_equations_expand_adj_read2,regression_equations_expand_adj_sim2)
#
# regression_correlation2 <- regression_correlation(x=regression_equations_final2,data=data_all,decimals=corr_decimals,
#                                                   read_abrev <- c('ios'), sim_abrev <- sim_type2,
#                                                   additional_vars=c("pflow_lag1","pflow_lag2","pflow_lag3","pflow_lag4",
#                                                                     "mktadjret_lag1","mktadjret_lag2","mktadjret_lag3","mktadjret_lag4",
#                                                                     "exret_lag1","exret_lag2","exret_lag3","exret_lag4"))
#
# rm2(regression_correlation2,sim_type2)
regression_execute_probit(equations_df=regression_equations_final2,data_all=data_all,date_index_var="date_index",
id=identifier,output_dir=output_directory_reg_similarity)
