#       temp[8,] <- "072BB000100        0"
#       temp[9,] <- "072 Z000300     -115"
#       temp[10,] <- "072AA000300        0"
#       temp[11,] <- "072BB000300      607"
#       temp[12,] <- "072CC020300        0"
#       temp[13,] <- "073 A010300   0.0000"
#       temp[14,] <- "077 Q030000 N"
#       temp[15,] <- "078  000000 N"
#       temp[16,] <- "085 B00AA00 N"
#       temp[17,] <- "000A 0 AA1  FEDERATED SERVICES COMPANY"
#       temp[18,] <- "075 A000600        0"
#       temp[19,] <- "076  000600     0.00"
#       temp[20,] <- "000C 1 100  10"
#
#       filing_text_trim_backup <-  filing_text_trim
#       filing_text_trim <- temp
#       ###############################################################
filing_text_sig_title <-  data.frame(filing_text_trim,
org_order=NA,
TEXT_CLEAN=NA,
item_number=NA,
item_letter=NA,
item_subnumber=NA,
series_number=NA,
repetition=NA,
value=NA,
error=NA,
stringsAsFactors=FALSE)
filing_text_sig_title <- filing_text_sig_title[,c("org_order",colnames(filing_text_sig_title[,!(colnames(filing_text_sig_title) %in% c("org_order"))]))]
filing_text_sig_title[,"org_order"] <- seq(1,nrow(filing_text_sig_title))
filing_text_sig_title[,"item_number"] <- ldply(filing_text_sig_title[,"TEXT"], function(z) {
return(unlist(strsplit(z, split=" "))[1])
})
rm(filing_text_trim)
filing_text_sig_title2 <- filing_text_sig_title
#filing_text_sig_title2 <- filing_text_sig_title2[!(filing_text_sig_title2[,"item_number"]=="SIGNATURE"),]
#filing_text_sig_title2 <- filing_text_sig_title2[!(filing_text_sig_title2[,"item_number"]=="TITLE"),]
filing_text_sig_title2[,"item_letter"] <- nchar(filing_text_sig_title2[,"item_number"])
filing_text_sig_title2[,"item_subnumber"] <- gsub("[^0-9]","",filing_text_sig_title2[,"item_number"])
filing_text_sig_title2[,"series_number"] <- nchar(filing_text_sig_title2[,"item_subnumber"])
rm(filing_text_sig_title)
filing_text_sig_title3 <- filing_text_sig_title2[!(filing_text_sig_title2[,"series_number"]==0),]
if(nrow(filing_text_sig_title3)==0){
filing_text_sig_title3 <- filing_text_sig_title2[1,]
filing_text_sig_title3[,"TEXT"] <- paste("999__00",filing_text_sig_title3[,"org_order"],"00  TRASH FILINGS!!",sep="")
filing_text_sig_title3[,"item_number"] <- NA
filing_text_sig_title3[,"item_letter"] <- NA
filing_text_sig_title3[,"item_subnumber"] <- NA
filing_text_sig_title3[,"series_number"] <- NA
filing_text_sig_title3[,"repetition"] <- NA
}
rm(filing_text_sig_title2)
filing_text_sig_title4 <- filing_text_sig_title3
filing_text_sig_title4[,"item_number"] <- substr(filing_text_sig_title4[,"TEXT"], 1, 3)
filing_text_sig_title4[,"item_letter"] <- nchar(filing_text_sig_title4[,"item_number"])
filing_text_sig_title4[,"item_subnumber"] <- gsub("[^0-9]","",filing_text_sig_title4[,"item_number"])
filing_text_sig_title4[,"series_number"] <- nchar(filing_text_sig_title4[,"item_subnumber"])
filing_text_sig_title4[,"repetition"] <- filing_text_sig_title4[,"item_letter"] - filing_text_sig_title4[,"series_number"]
rm(filing_text_sig_title3)
filing_text_sig_title5 <- filing_text_sig_title4[filing_text_sig_title4[,"repetition"]==0,]
filing_text_sig_title5 <- filing_text_sig_title5[rowSums(is.na(filing_text_sig_title5[,1:ncol(filing_text_sig_title5)]))<(ncol(filing_text_sig_title5)),]
if(nrow(filing_text_sig_title5)==0){
filing_text_sig_title5 <- filing_text_sig_title4[1,]
filing_text_sig_title5[,"TEXT"] <- paste("999__00",filing_text_sig_title5[,"org_order"],"00  TRASH FILINGS!!",sep="")
filing_text_sig_title5[,"item_number"] <- NA
filing_text_sig_title5[,"item_letter"] <- NA
filing_text_sig_title5[,"item_subnumber"] <- NA
filing_text_sig_title5[,"series_number"] <- NA
filing_text_sig_title5[,"repetition"] <- NA
}
rm(filing_text_sig_title4)
filing_text_sig_title6 <- filing_text_sig_title5
filing_text_sig_title6[,"item_letter"] <- NA
filing_text_sig_title6[,"item_subnumber"] <- NA
filing_text_sig_title6[,"series_number"] <- NA
filing_text_sig_title6[,"repetition"] <- NA
#row.names(filing_text_sig_title6) <- seq(nrow(filing_text_sig_title6))
rm(filing_text_sig_title5)
#EXPAND ID VARIABLES
filing_text_expand_id <- filing_text_sig_title6
#See if question doesn't have subpart
filing_text_expand_id[,"TEXT_CLEAN"] <- filing_text_expand_id[,"TEXT"]
#filing_text_expand_id[,"TEXT_CLEAN"] <- ifelse(grepl("[0-9]",substr(filing_text_expand_id[,"TEXT_CLEAN"], 5, 5)),
#                                               paste(substr(filing_text_expand_id[,"TEXT_CLEAN"], 1, 4),substr(filing_text_expand_id[,"TEXT_CLEAN"], 5, nchar(filing_text_expand_id[,"TEXT_CLEAN"])),sep="0"),
#                                               filing_text_expand_id[,"TEXT_CLEAN"])
filing_text_expand_id[,"item_letter"] <- substr(filing_text_expand_id[,"TEXT_CLEAN"], 4, 5)
filing_text_expand_id[,"item_subnumber"] <- substr(filing_text_expand_id[,"TEXT_CLEAN"], 6, 7)
filing_text_expand_id[,"series_number"] <- substr(filing_text_expand_id[,"TEXT_CLEAN"], 8, 9)
filing_text_expand_id[,"repetition"] <- substr(filing_text_expand_id[,"TEXT_CLEAN"], 10, 11)
#filing_text_expand_id[,"value"] <- substr(filing_text_expand_id[,"TEXT_CLEAN"], 12, nchar(encodeString(filing_text_expand_id[,"TEXT_CLEAN"])))
filing_text_expand_id[,"value"] <- substr(filing_text_expand_id[,"TEXT_CLEAN"], 12, nchar(filing_text_expand_id[,"TEXT_CLEAN"]))
rm(filing_text_sig_title6)
#CLEAN DATA
filing_text_expand_id_clean <- filing_text_expand_id
rm(filing_text_expand_id)
filing_text_expand_id_clean[,"item_letter"] <- gsub("^\\s+|\\s+$", "", filing_text_expand_id_clean[,"item_letter"])
filing_text_expand_id_clean[,"item_letter"] <- formatC( filing_text_expand_id_clean[,"item_letter"], width = 2, format = "s", flag = " ")
filing_text_expand_id_clean[,"item_letter"] <- gsub(" ", "_", filing_text_expand_id_clean[,"item_letter"])
filing_text_expand_id_clean[,"item_subnumber"] <- gsub("^\\s+|\\s+$", "", filing_text_expand_id_clean[,"item_subnumber"])
filing_text_expand_id_clean[,"item_subnumber"] <- formatC( filing_text_expand_id_clean[,"item_subnumber"], width = 2, format = "s", flag = " ")
filing_text_expand_id_clean[,"item_subnumber"] <- gsub(" ", "0", filing_text_expand_id_clean[,"item_subnumber"])
filing_text_expand_id_clean[,"repetition"] <- gsub("^\\s+|\\s+$", "", filing_text_expand_id_clean[,"repetition"])
filing_text_expand_id_clean[,"repetition"] <- formatC( filing_text_expand_id_clean[,"repetition"], width = 2, format = "s", flag = " ")
filing_text_expand_id_clean[,"repetition"] <- gsub(" ", "0", filing_text_expand_id_clean[,"repetition"])
filing_text_expand_id_clean[,"value"] <- gsub("^\\s+|\\s+$", "", filing_text_expand_id_clean[,"value"])
#FIND ERROR ROWS
filing_text_expand_id_trim <- filing_text_expand_id_clean
filing_text_expand_id_trim[,"TEXT_CLEAN"] <- substr(filing_text_expand_id_trim[,"TEXT_CLEAN"], 1, 11)
filing_text_expand_id_trim[,"TEXT_CLEAN"] <- gsub(pattern="  ", replacement=" ", x=filing_text_expand_id_trim[,"TEXT_CLEAN"])
filing_text_expand_id_trim[,"TEXT_CLEAN"] <- gsub(pattern="  ", replacement=" ", x=filing_text_expand_id_trim[,"TEXT_CLEAN"])
filing_text_expand_id_trim[,"TEXT_CLEAN"] <- gsub(pattern=" ", replacement="", x=filing_text_expand_id_trim[,"TEXT_CLEAN"])
filing_text_expand_id_trim[,"TEXT_CLEAN"] <- gsub(pattern=" ", replacement="", x=filing_text_expand_id_trim[,"TEXT_CLEAN"])
filing_text_expand_id_trim[,"TEXT_CLEAN"] <- gsub("^\\s+|\\s+$", "", filing_text_expand_id_trim[,"TEXT_CLEAN"])
filing_text_expand_id_trim[,"error"] <- ifelse((filing_text_expand_id_trim[,"item_number"]=="000" & nchar(filing_text_expand_id_trim[,"TEXT_CLEAN"])<9),1,0)
filing_text_expand_id_trim[,"item_number"] <- ifelse(filing_text_expand_id_trim[,"error"]==1,"999",filing_text_expand_id_trim[,"item_number"])
#filing_text_expand_id_trim[,"item_letter"] <- ifelse(filing_text_expand_id_trim[,"error"]==1,"__",filing_text_expand_id_trim[,"item_letter"])
#filing_text_expand_id_trim[,"item_subnumber"] <- ifelse(filing_text_expand_id_trim[,"error"]==1,"00",filing_text_expand_id_trim[,"item_subnumber"])
#filing_text_expand_id_trim[,"series_number"] <- ifelse(filing_text_expand_id_trim[,"error"]==1,filing_text_expand_id_trim[,"org_order"],filing_text_expand_id_trim[,"series_number"])
#filing_text_expand_id_trim[,"repetition"] <- ifelse(filing_text_expand_id_trim[,"error"]==1,"00",filing_text_expand_id_trim[,"repetition"])
#filing_text_expand_id_trim[,"value"] <- ifelse(filing_text_expand_id_trim[,"error"]==1,filing_text_expand_id_trim[,"TEXT"],filing_text_expand_id_trim[,"value"])
#filing_text_expand_id_trim <- filing_text_expand_id_trim[order(filing_text_expand_id_trim[,"file"], filing_text_expand_id_trim[,"DOCUMENT_INDEX"],
#                                                               filing_text_expand_id_trim[,"item_number"], filing_text_expand_id_trim[,"series_number"],
#                                                               filing_text_expand_id_trim[,"repetition"], filing_text_expand_id_trim[,"item_letter"],
#                                                               filing_text_expand_id_trim[,"item_subnumber"]),]
#filing_text_expand_id_trim_order <- c("file","DOCUMENT_INDEX","item_number","item_letter","item_subnumber","series_number","repetition")
filing_text_expand_id_trim_order <- c("file","DOCUMENT_INDEX","item_number","series_number","repetition","item_letter","item_subnumber")
filing_text_expand_id_trim <- setorderv(data.table(filing_text_expand_id_trim), filing_text_expand_id_trim_order, rep(1,length(filing_text_expand_id_trim_order)))
filing_text_expand_id_trim <- as.data.frame(filing_text_expand_id_trim,stringsAsFactors=FALSE)
rm(filing_text_expand_id_clean)
#SEQUENCE DATA
filing_text_cast_temp <- filing_text_expand_id_trim[,!(colnames(filing_text_expand_id_trim) %in% c("TEXT","TEXT_CLEAN","error"))]
rm(filing_text_expand_id_trim)
filing_text_cast_id <- ddply(.data=filing_text_cast_temp,  .variables=filing_text_expand_id_trim_order, .fun = function(x){
#filing_text_cast_id <- ddply(.data=filing_text_cast_temp,  .variables=c("file","DOCUMENT_INDEX","item_number","series_number","repetition", "item_letter","item_subnumber"), .fun = function(x){
x_out <- data.frame(x,row_id=NA,stringsAsFactors=FALSE)
x_out[,"row_id"] <- seq(1,nrow(x_out))
return(x_out)
}, .progress = "none", .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)
rm(filing_text_cast_temp)
#CAST DATA
#     filing_text_questions <- dlply(.data=filing_text_cast_id, .variables=c("file","DOCUMENT_INDEX","item_number"), .fun = function(x){
#
#       # x <- filing_text_cast_id[filing_text_cast_id[,"item_number"]=="000",]
#       # x <- filing_text_cast_id[filing_text_cast_id[,"item_number"]=="001",]
#       # x <- filing_text_cast_id[filing_text_cast_id[,"item_number"]=="002",]
#       # x <- filing_text_cast_id[filing_text_cast_id[,"item_number"]=="008",]
#       # x <- filing_text_cast_id[filing_text_cast_id[,"item_number"]=="010",]
#       # x <- filing_text_cast_id[filing_text_cast_id[,"item_number"]=="071",]
#       # x <- filing_text_cast_id[filing_text_cast_id[,"item_number"]=="072",]
#
#       filing_text_questions_temp <- dcast(x, file + DOCUMENT_INDEX + item_number + series_number + repetition + row_id ~ item_number + item_letter + item_subnumber, value.var = "value")
#
#       return(filing_text_questions_temp)
#
#     },.progress = "none", .inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)
questions_present <- unique(filing_text_cast_id[,"item_number"])
#test <- filing_text_cast_id
#test[,"DOCUMENT_INDEX"] <- 1
#test <- rbind(test,filing_text_cast_id)
for (j in 1:length(questions_present))
{
#j <- 1
cast_temp <- dcast(filing_text_cast_id[filing_text_cast_id[,"item_number"]==questions_present[j],],
file + DOCUMENT_INDEX + item_number + series_number + repetition + row_id ~ item_number + item_letter + item_subnumber, value.var = "value")
col_all <- colnames(cast_temp)
col_no_change <- c("file","DOCUMENT_INDEX","item_number","series_number","repetition","row_id")
col_change <- col_all[!(col_all %in% col_no_change)]
colnames(cast_temp) <- c(col_no_change,paste("q",col_change,sep="_"))
cast_temp2 <- merge(filing_no_text2, cast_temp,
by.x=c("file","DOCUMENT_INDEX"), by.y=c("file","DOCUMENT_INDEX"),
all.x=FALSE, all.y=FALSE, sort=FALSE, suffixes=c(".x",".y"))
rm(cast_temp)
assign(paste("filing_text_q", questions_present[j], sep = ""), cast_temp2, envir = .GlobalEnv)
rm(cast_temp2,col_all,col_no_change,col_change)
}
rm(j)
questions_not_present <- questions_all[!(questions_all %in% questions_present)]
rm(filing_text_cast_id,questions_present)
}
rm(flag_sum)
#CREATE EMPTY QUESTIONS FOR THE ONES THAT AREN'T PRESENT
for (l in 1:length(questions_not_present))
{
#l <- 1
#cast_temp <- data.frame(file=file,DOCUMENT_INDEX=1,item_number=questions_not_present[l],stringsAsFactors=FALSE)
cast_temp <- filing_no_text2[,c("file","DOCUMENT_INDEX","TYPE")]
colnames(cast_temp)[match("TYPE",names(cast_temp))] <- "item_number"
cast_temp[,"item_number"] <- questions_not_present[l]
cast_temp2 <- merge(filing_no_text2, cast_temp,
by.x=c("file","DOCUMENT_INDEX"), by.y=c("file","DOCUMENT_INDEX"),
all.x=FALSE, all.y=FALSE, sort=FALSE, suffixes=c(".x",".y"))
rm(cast_temp)
assign(paste("filing_text_q", questions_not_present[l], sep = ""),
cast_temp2,
envir = .GlobalEnv)
rm(cast_temp2)
}
rm(questions_not_present,l)
str_comb <- paste0("filing_text_questions <- list(",paste("filing_text_q", questions_all, sep="", collapse = ","),")")
expr_comb <- parse(text=str_comb)
eval(expr_comb)
rm(str_comb,expr_comb)
str_rm <- paste0("rm(",paste("filing_text_q", questions_all, sep="", collapse = ","),",envir = .GlobalEnv)")
expr_rm <- parse(text=str_rm)
eval(expr_rm)
rm(str_rm,expr_rm)
rm(questions_all)
rm(file,filepath)
#rm(file_out,filepath_out)
rm(filing_no_text2)
return(filing_text_questions)
},
sub_folder_output_path=sub_folder_output_path,
.progress = "none",.inform = FALSE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)
#questions_all <- formatC(seq(0,137,1), width = 3, format = "d", flag = "0")
questions_all <- formatC(c(seq(0,137,1),999), width = 3, format = "d", flag = "0")
for (k in 1:length(questions_all))
{
# k <- 1
# k <- 139
#cat("Question Num", k, "\n")
#cat("Question ID", questions_all[k], "\n")
#output_files_comb0 <- sapply(output_files, "[", (as.numeric(questions_all[k])+1))
output_files_comb0 <- sapply(output_files, "[", k)
output_files_comb1 <- rbindlist(output_files_comb0,fill=TRUE,use.names=TRUE)
output_files_comb  <- data.frame(yr=NA,output_files_comb1,stringsAsFactors=FALSE)
output_files_comb[,"yr"] <- yr
rm(output_files_comb0,output_files_comb1)
output_files_comb_id_cols_possible <- c("yr","file","DOCUMENT_INDEX","TYPE","SEQUENCE","FILENAME","DESCRIPTION")
output_files_comb_id_cols <- colnames(output_files_comb)[colnames(output_files_comb) %in% output_files_comb_id_cols_possible]
output_files_comb_question_cols <- colnames(output_files_comb)[grep(questions_all[k], colnames(output_files_comb))]
output_files_comb_question_cols <- sort(output_files_comb_question_cols)
output_files_comb_other_cols <- colnames(output_files_comb)[!(colnames(output_files_comb) %in% c(output_files_comb_id_cols,output_files_comb_question_cols))]
#output_files_comb <- output_files_comb[,c(output_files_comb_id_cols,colnames(output_files_comb[,!(colnames(output_files_comb) %in% c(output_files_comb_id_cols))]))]
output_files_comb <- output_files_comb[,c(output_files_comb_id_cols,output_files_comb_other_cols,output_files_comb_question_cols)]
rm(output_files_comb_id_cols_possible,output_files_comb_id_cols,output_files_comb_other_cols,output_files_comb_question_cols)
assign(paste("filing_text_comb_q", questions_all[k], sep = ""), output_files_comb, envir = .GlobalEnv)
write.table(output_files_comb,file=paste(sub_folder_output_path,"\\",paste("nsar_b_temp_q", questions_all[k], sep = ""),".csv",sep=""), append=FALSE, na="NA",
sep = ",", quote = TRUE,dec = ".",  qmethod = "double", col.names=TRUE, row.names = FALSE)
rm(output_files_comb)
}
rm(k)
file_str <- paste("filing_text_comb_q", questions_all, sep="", collapse = ",")
str_comb <- paste0("filing_text_questions_comb <- list(",file_str,")")
expr_comb <- parse(text=str_comb)
eval(expr_comb)
str_rm <- paste0("rm(",file_str,",envir = .GlobalEnv)")
expr_rm <- parse(text=str_rm)
eval(expr_rm)
#rm(str_comb,expr_comb,str_rm,expr_rm)
rm(file_str)
rm(output_files)
rm(yr,yr_folder_path,sub_folder_path,sub_folder_output_path,downloaded_files3)
return(questions_all)
},
path_output=paste(output_directory,downloadfolder,sep=slash),
subfolder=txtfolder,subfolder_output=txtfolder_clean,
.progress = "text",.inform = TRUE, .drop = TRUE, .parallel = FALSE, .paropts = NULL)
###############################################################################
# FUNCTIONS;
cat("SECTION: FUNCTIONS", "\n")
###############################################################################
#source(file=paste(function_directory,"functions_db.R",sep="\\"),echo=FALSE)
#source(file=paste(function_directory,"functions_statistics.R",sep="\\"),echo=FALSE)
#source(file=paste(function_directory,"functions_text_analysis.R",sep="\\"),echo=FALSE)
source(file=paste(function_directory,"functions_text_parse.R",sep="\\"),echo=FALSE)
source(file=paste(function_directory,"functions_utilities.R",sep="\\"),echo=FALSE)
###############################################################################
# LIBRARIES;
cat("SECTION: LIBRARIES", "\n")
###############################################################################
#Load External Packages
external_packages <- c("data.table","gdata","plyr","reshape2","stringr","XML")
invisible(unlist(sapply(external_packages,load_external_packages, repo_str=repo, simplify=FALSE, USE.NAMES=FALSE)))
installed_packages <- list_installed_packages(external_packages)
rm(installed_packages)
###############################################################################
#PARAMETERS;
###############################################################################
#If using windows, set to "\\" - if mac (or unix), set to "/";
slash <- "\\"
#First year you want index files for:
#startyear <- 1993
startyear <- 2003
#Last year you want index files for:
#endyear <- 2004
endyear <- 2013
#First qtr you want index files for (usually 1):
startqtr <- 1
#Last qtr you want index files for (usually 4):
endqtr <- 4
downloadfolder <- "MF_Shareholder_Reports_N-SAR-B"
#The sub directory where the downloaded filings are
txtfolder <- "txt_extract"
#The sub directory where the combined filings will be located
txtfolder_clean <- "txt_clean"
#Output Folder
txtoutput <- "questions"
#The file that will contain the filings you want to download.
infile <- "filings_list_comb.csv"
yr_qtr_comb <- expand.grid(yr = seq(startyear, endyear, 1), qtr = seq(1, 4, 1))
yr_qtr_comb <- yr_qtr_comb[order(yr_qtr_comb[,"yr"],yr_qtr_comb[,"qtr"]),]
row.names(yr_qtr_comb) <- seq(nrow(yr_qtr_comb))
yr_qtr_comb[,"qtr"] <- ifelse((yr_qtr_comb[,"yr"]==startyear & yr_qtr_comb[,"qtr"] < startqtr),NA,yr_qtr_comb[,"qtr"])
yr_qtr_comb[,"qtr"] <- ifelse((yr_qtr_comb[,"yr"]==endyear & yr_qtr_comb[,"qtr"] > endqtr),NA,yr_qtr_comb[,"qtr"])
rm(startyear,startqtr,endyear,endqtr)
yr_qtr_comb <- yr_qtr_comb[(!is.na(yr_qtr_comb[,"qtr"])),]
row.names(yr_qtr_comb) <- seq(nrow(yr_qtr_comb))
yr_qtr_comb2 <- data.frame(yr_qtr_comb,yr_qtr=NA,stringsAsFactors=FALSE)
rm(yr_qtr_comb)
yr_qtr_comb2[,"yr_qtr"] <- paste(yr_qtr_comb2[,"yr"],yr_qtr_comb2[,"qtr"],sep="_")
#Check to see if output directory exists.  If not, create it.
create_directory(output_directory,remove=1)
#Check to see if download folder exists.  If not, create it.
download_folder_path <- paste(output_directory, downloadfolder, sep = slash, collapse = slash)
create_directory(download_folder_path,remove=1)
###############################################################################
cat("Get list files \n")
###############################################################################
filings <- read.table(file=paste(download_folder_path,"\\",infile,sep=""), header = TRUE, na.strings="NA",stringsAsFactors=FALSE,
sep = ",", quote = "\"",dec = ".", fill = TRUE, comment.char = "")
filings2 <- data.frame(yr_qtr=NA,
filings,
stringsAsFactors=FALSE)
rm(filings)
filings2[,"yr_qtr"] <- paste(filings2[,"yr"],
filings2[,"qtr"],
sep="_")
filings2 <- filings2[,c(c("yr","qtr","yr_qtr"),
colnames(filings2[,!(colnames(filings2) %in% c("yr","qtr","yr_qtr"))]))]
filings_trim <- filings2[ filings2[,"yr_qtr"] %in% yr_qtr_comb2[,"yr_qtr"],]
row.names(filings_trim) <- seq(nrow(filings_trim))
rm(filings2,yr_qtr_comb2)
filings_trim2 <- data.frame(overall_id=NA,
filings_trim,
stringsAsFactors=FALSE)
filings_trim2[,"overall_id"] <- seq(1,nrow(filings_trim2),1)
rm(filings_trim)
#Check to see if download folder exists.  If not, create it.
question_folder_path <- paste(output_directory, downloadfolder, txtoutput, sep = slash, collapse = slash)
create_directory(question_folder_path,remove=1)
yrs <- unique(filings_trim2[,"yr"])
questions_all <- formatC(c(seq(0,137,1),999), width = 3, format = "d", flag = "0")
for (m in 1:length(questions_all))
{
# m <- 1
# m <- 139
#cat("Question Num", m, "\n")
#cat("Question ID", questions_all[m], "\n")
filings_info_comb <- ldply(.data=yrs, .fun = function(x,path_output,subfolder_output,question_str,question_id){
# x <- 2003
# path_output <- paste(output_directory,downloadfolder,sep=slash)
# subfolder_output <- txtfolder_clean
# question_str <- "nsar_b_temp_q"
# question_id <- questions_all[m]
yr <-  as.numeric(x)
#cat("\n",yr,"\n")
#Check to see if yr folder exists.  If not, create it.
yr_folder_path <- paste(path_output, yr, sep = "\\", collapse = "\\")
#create_directory(yr_folder_path,remove=1)
sub_folder_output_path <- paste(yr_folder_path, subfolder_output, sep = "\\", collapse = "\\")
#create_directory(sub_folder_output_path,remove=1)
question_str_full <- paste(question_str,question_id,".csv",sep="")
filings <- read.table(file=paste(sub_folder_output_path,"\\",question_str_full,sep=""), header = TRUE, na.strings="NA",stringsAsFactors=FALSE,
sep = ",", quote = "\"",dec = ".", fill = TRUE, comment.char = "")
rm(yr,yr_folder_path,sub_folder_output_path,question_str_full)
return(filings)
}, path_output=paste(output_directory,downloadfolder,sep=slash), subfolder_output=txtfolder_clean,
question_str="nsar_b_temp_q",question_id=questions_all[m],
.progress = "none", .inform = FALSE, .parallel = FALSE, .paropts = NULL, .id = NA)
#filings_info_comb0 <- sapply(filings_info, "[", (as.numeric(questions_all[m])+1))
#filings_info_comb0 <- sapply(filings_info, "[", m)
#filings_info_comb1 <- rbindlist(filings_info_comb0,fill=TRUE,use.names=TRUE)
#filings_info_comb  <- as.data.frame(filings_info_comb1,stringsAsFactors=FALSE)
#rm(filings_info_comb0,filings_info_comb1)
## ORDER COLUMNS
filings_info_comb_id_cols_possible <- c("yr","file","DOCUMENT_INDEX","TYPE","SEQUENCE","FILENAME","DESCRIPTION")
filings_info_comb_id_cols <- colnames(filings_info_comb)[colnames(filings_info_comb) %in% filings_info_comb_id_cols_possible]
filings_info_comb_question_cols <- colnames(filings_info_comb)[grep(questions_all[m], colnames(filings_info_comb))]
filings_info_comb_question_cols <- sort(filings_info_comb_question_cols)
filings_info_comb_other_cols <- colnames(filings_info_comb)[!(colnames(filings_info_comb) %in% c(filings_info_comb_id_cols,filings_info_comb_question_cols))]
#filings_info_comb <- filings_info_comb[,c(filings_info_comb_id_cols,colnames(filings_info_comb[,!(colnames(filings_info_comb) %in% c(filings_info_comb_id_cols))]))]
filings_info_comb <- filings_info_comb[,c(filings_info_comb_id_cols,filings_info_comb_other_cols,filings_info_comb_question_cols)]
rm(filings_info_comb_id_cols_possible,filings_info_comb_id_cols,filings_info_comb_other_cols,filings_info_comb_question_cols)
## FIX COLUMN TYPE
col_temp <- "item_number"
if (col_temp %in% colnames(filings_info_comb)) { filings_info_comb[,col_temp] <- as.numeric(filings_info_comb[,col_temp]) }
col_temp <- "repetition"
if (col_temp %in% colnames(filings_info_comb)) { filings_info_comb[,col_temp] <- as.numeric(filings_info_comb[,col_temp]) }
col_temp <- "row_id"
if (col_temp %in% colnames(filings_info_comb)) { filings_info_comb[,col_temp] <- as.numeric(filings_info_comb[,col_temp]) }
#col_temp <- "item_subnumber"
#if (col_temp %in% colnames(filings_info_comb)) { filings_info_comb[,col_temp] <- as.numeric(filings_info_comb[,col_temp]) }
write.table(filings_info_comb,file=paste(question_folder_path,"\\",paste("nsar_b_q", questions_all[m], sep = ""),".csv",sep=""), append=FALSE, na="NA",
sep = ",", quote = TRUE,dec = ".",  qmethod = "double", col.names=TRUE, row.names = FALSE)
rm(filings_info_comb,col_temp)
}
warnings()
###############################################################################
#Check to see if download folder exists.  If not, create it.
question_folder_path <- paste(output_directory, downloadfolder, txtoutput, sep = slash, collapse = slash)
create_directory(question_folder_path,remove=1)
yrs <- unique(filings_trim2[,"yr"])
questions_all <- formatC(c(seq(0,137,1),999), width = 3, format = "d", flag = "0")
m <- 1
# m <- 139
#cat("Question Num", m, "\n")
#cat("Question ID", questions_all[m], "\n")
filings_info_comb <- ldply(.data=yrs, .fun = function(x,path_output,subfolder_output,question_str,question_id){
# x <- 2003
# path_output <- paste(output_directory,downloadfolder,sep=slash)
# subfolder_output <- txtfolder_clean
# question_str <- "nsar_b_temp_q"
# question_id <- questions_all[m]
yr <-  as.numeric(x)
#cat("\n",yr,"\n")
#Check to see if yr folder exists.  If not, create it.
yr_folder_path <- paste(path_output, yr, sep = "\\", collapse = "\\")
#create_directory(yr_folder_path,remove=1)
sub_folder_output_path <- paste(yr_folder_path, subfolder_output, sep = "\\", collapse = "\\")
#create_directory(sub_folder_output_path,remove=1)
question_str_full <- paste(question_str,question_id,".csv",sep="")
filings <- read.table(file=paste(sub_folder_output_path,"\\",question_str_full,sep=""), header = TRUE, na.strings="NA",stringsAsFactors=FALSE,
sep = ",", quote = "\"",dec = ".", fill = TRUE, comment.char = "")
rm(yr,yr_folder_path,sub_folder_output_path,question_str_full)
return(filings)
}, path_output=paste(output_directory,downloadfolder,sep=slash), subfolder_output=txtfolder_clean,
question_str="nsar_b_temp_q",question_id=questions_all[m],
.progress = "none", .inform = FALSE, .parallel = FALSE, .paropts = NULL, .id = NA)
#filings_info_comb0 <- sapply(filings_info, "[", (as.numeric(questions_all[m])+1))
#filings_info_comb0 <- sapply(filings_info, "[", m)
#filings_info_comb1 <- rbindlist(filings_info_comb0,fill=TRUE,use.names=TRUE)
#filings_info_comb  <- as.data.frame(filings_info_comb1,stringsAsFactors=FALSE)
#rm(filings_info_comb0,filings_info_comb1)
## ORDER COLUMNS
filings_info_comb_id_cols_possible <- c("yr","file","DOCUMENT_INDEX","TYPE","SEQUENCE","FILENAME","DESCRIPTION")
filings_info_comb_id_cols <- colnames(filings_info_comb)[colnames(filings_info_comb) %in% filings_info_comb_id_cols_possible]
filings_info_comb_question_cols <- colnames(filings_info_comb)[grep(questions_all[m], colnames(filings_info_comb))]
filings_info_comb_question_cols <- sort(filings_info_comb_question_cols)
filings_info_comb_other_cols <- colnames(filings_info_comb)[!(colnames(filings_info_comb) %in% c(filings_info_comb_id_cols,filings_info_comb_question_cols))]
#filings_info_comb <- filings_info_comb[,c(filings_info_comb_id_cols,colnames(filings_info_comb[,!(colnames(filings_info_comb) %in% c(filings_info_comb_id_cols))]))]
filings_info_comb <- filings_info_comb[,c(filings_info_comb_id_cols,filings_info_comb_other_cols,filings_info_comb_question_cols)]
rm(filings_info_comb_id_cols_possible,filings_info_comb_id_cols,filings_info_comb_other_cols,filings_info_comb_question_cols)
## FIX COLUMN TYPE
col_temp <- "item_number"
if (col_temp %in% colnames(filings_info_comb)) { filings_info_comb[,col_temp] <- as.numeric(filings_info_comb[,col_temp]) }
col_temp <- "repetition"
if (col_temp %in% colnames(filings_info_comb)) { filings_info_comb[,col_temp] <- as.numeric(filings_info_comb[,col_temp]) }
col_temp <- "row_id"
if (col_temp %in% colnames(filings_info_comb)) { filings_info_comb[,col_temp] <- as.numeric(filings_info_comb[,col_temp]) }
#col_temp <- "item_subnumber"
#if (col_temp %in% colnames(filings_info_comb)) { filings_info_comb[,col_temp] <- as.numeric(filings_info_comb[,col_temp]) }
#Check to see if download folder exists.  If not, create it.
question_folder_path <- paste(output_directory, downloadfolder, txtoutput, sep = slash, collapse = slash)
create_directory(question_folder_path,remove=1)
yrs <- unique(filings_trim2[,"yr"])
questions_all <- formatC(c(seq(0,137,1),999), width = 3, format = "d", flag = "0")
for (m in 1:length(questions_all))
{
# m <- 1
# m <- 139
#cat("Question Num", m, "\n")
cat("Question ID", questions_all[m], "\n")
filings_info_comb <- ldply(.data=yrs, .fun = function(x,path_output,subfolder_output,question_str,question_id){
# x <- 2003
# path_output <- paste(output_directory,downloadfolder,sep=slash)
# subfolder_output <- txtfolder_clean
# question_str <- "nsar_b_temp_q"
# question_id <- questions_all[m]
yr <-  as.numeric(x)
#cat("\n",yr,"\n")
#Check to see if yr folder exists.  If not, create it.
yr_folder_path <- paste(path_output, yr, sep = "\\", collapse = "\\")
#create_directory(yr_folder_path,remove=1)
sub_folder_output_path <- paste(yr_folder_path, subfolder_output, sep = "\\", collapse = "\\")
#create_directory(sub_folder_output_path,remove=1)
question_str_full <- paste(question_str,question_id,".csv",sep="")
filings <- read.table(file=paste(sub_folder_output_path,"\\",question_str_full,sep=""), header = TRUE, na.strings="NA",stringsAsFactors=FALSE,
sep = ",", quote = "\"",dec = ".", fill = TRUE, comment.char = "")
rm(yr,yr_folder_path,sub_folder_output_path,question_str_full)
return(filings)
}, path_output=paste(output_directory,downloadfolder,sep=slash), subfolder_output=txtfolder_clean,
question_str="nsar_b_temp_q",question_id=questions_all[m],
.progress = "none", .inform = FALSE, .parallel = FALSE, .paropts = NULL, .id = NA)
#filings_info_comb0 <- sapply(filings_info, "[", (as.numeric(questions_all[m])+1))
#filings_info_comb0 <- sapply(filings_info, "[", m)
#filings_info_comb1 <- rbindlist(filings_info_comb0,fill=TRUE,use.names=TRUE)
#filings_info_comb  <- as.data.frame(filings_info_comb1,stringsAsFactors=FALSE)
#rm(filings_info_comb0,filings_info_comb1)
## ORDER COLUMNS
filings_info_comb_id_cols_possible <- c("yr","file","DOCUMENT_INDEX","TYPE","SEQUENCE","FILENAME","DESCRIPTION")
filings_info_comb_id_cols <- colnames(filings_info_comb)[colnames(filings_info_comb) %in% filings_info_comb_id_cols_possible]
filings_info_comb_question_cols <- colnames(filings_info_comb)[grep(questions_all[m], colnames(filings_info_comb))]
filings_info_comb_question_cols <- sort(filings_info_comb_question_cols)
filings_info_comb_other_cols <- colnames(filings_info_comb)[!(colnames(filings_info_comb) %in% c(filings_info_comb_id_cols,filings_info_comb_question_cols))]
#filings_info_comb <- filings_info_comb[,c(filings_info_comb_id_cols,colnames(filings_info_comb[,!(colnames(filings_info_comb) %in% c(filings_info_comb_id_cols))]))]
filings_info_comb <- filings_info_comb[,c(filings_info_comb_id_cols,filings_info_comb_other_cols,filings_info_comb_question_cols)]
rm(filings_info_comb_id_cols_possible,filings_info_comb_id_cols,filings_info_comb_other_cols,filings_info_comb_question_cols)
## FIX COLUMN TYPE
col_temp <- "item_number"
#if (col_temp %in% colnames(filings_info_comb)) { filings_info_comb[,col_temp] <- as.numeric(filings_info_comb[,col_temp]) }
col_temp <- "repetition"
#if (col_temp %in% colnames(filings_info_comb)) { filings_info_comb[,col_temp] <- as.numeric(filings_info_comb[,col_temp]) }
col_temp <- "row_id"
#if (col_temp %in% colnames(filings_info_comb)) { filings_info_comb[,col_temp] <- as.numeric(filings_info_comb[,col_temp]) }
col_temp <- "item_subnumber"
#if (col_temp %in% colnames(filings_info_comb)) { filings_info_comb[,col_temp] <- as.numeric(filings_info_comb[,col_temp]) }
write.table(filings_info_comb,file=paste(question_folder_path,"\\",paste("nsar_b_q", questions_all[m], sep = ""),".csv",sep=""), append=FALSE, na="NA",
sep = ",", quote = TRUE,dec = ".",  qmethod = "double", col.names=TRUE, row.names = FALSE)
rm(filings_info_comb,col_temp)
}
rm(m)
