data_s5_2_full[,"Prop_u_one_minus"] <- 1-data_s5_2_full[,"Prop_u"]
data_s5_2_full[,"cutoff_99"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="Per_Repeat"),"Per_0.99"]
data_s5_2_full[,"cutoff_95"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="Per_Repeat"),"Per_0.95"]
data_s5_2_full[,"cutoff_90"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="Per_Repeat"),"Per_0.90"]
data_s5_2_full[,"per_repeats_percent_99"] <- ifelse(data_s5_2_full[,"cutoff_99"]<=0.01,1,0)
data_s5_2_full[,"per_repeats_percent_95"] <- ifelse(data_s5_2_full[,"cutoff_95"]<=0.05,1,0)
data_s5_2_full[,"per_repeats_percent_90"] <- ifelse(data_s5_2_full[,"cutoff_90"]<=0.10,1,0)
View(data_s5_2_full)
View(data_s5_2_full)
data_s5_2_full[,"per_repeats_percent_99"] <- ifelse(data_s5_2_full[,"Prop_u_one_minus"]>=data_s5_2_full[,"cutoff_99"],1,0)
data_s5_2_full[,"per_repeats_percent_95"] <- ifelse(data_s5_2_full[,"Prop_u_one_minus"]>=data_s5_2_full[,"cutoff_95"],1,0)
data_s5_2_full[,"per_repeats_percent_90"] <- ifelse(data_s5_2_full[,"Prop_u_one_minus"]>=data_s5_2_full[,"cutoff_90"],1,0)
View(data_s5_2_full)
x <- data_s5_2[data_s5_2[,identifier]==5002, c(data_trim_id_full_cols,analysis_col)]
data_s5_2 <- data_s5[c(data_trim_id_full_cols,analysis_col)]
data_s5_2[,analysis_col] <- round(data_s5_2[,analysis_col],digits=6)
x <- data_s5_2[data_s5_2[,identifier]==5002, c(data_trim_id_full_cols,analysis_col)]
analysis_col <- analysis_col
id_col <- identifier
data <- x
ret_col <- analysis_col
repeat_num_data_count <- per_repeat_screen_counts(ret=data[,ret_col],ret_col=ret_col)
View(repeat_num_data_count)
View(data_s5_2)
View(data_s5_2_full)
x <- data_s5_2[data_s5_2[,identifier]==6094, c(data_trim_id_full_cols,analysis_col)]
repeat_num_data_count <- per_repeat_screen_counts(ret=data[,ret_col],ret_col=ret_col)
data <- x
repeat_num_data_count <- per_repeat_screen_counts(ret=data[,ret_col],ret_col=ret_col)
View(repeat_num_data_count)
repeat_num_data_sum <- per_repeat_screen_sum(data=repeat_num_data_count,data_col="freq")
View(repeat_num_data_sum)
View(repeat_num_data_count)
data <- repeat_num_data_count
data_col <- "Freq"
sum_temp <- data.frame(Count_1s=NA,Count_u=NA,Total=NA,Prop_u=NA,stringsAsFactors=FALSE)
View(data)
which(data[,data_col]==1])
which(data[,data_col]==1)
data_col <- "Freq"
which(data[,data_col]==1)
data_col
View(data)
data_col <- "freq"
which(data[,data_col]==1)
per_repeat_screen_sum <- function(data,data_col){
# data <- repeat_num_data_count
# data_col <- "freq"
sum_temp <- data.frame(Count_1s=NA,Count_u=NA,Total=NA,Prop_1s=NA,Prop_u=NA,
Prop_1s_one_minus=NA,Prop_u_one_minus=NA,stringsAsFactors=FALSE)
sum_temp[,"Count_1s"] <- length(which(data[,data_col]==1))
sum_temp[,"Count_u"] <- nrow(data)
sum_temp[,"Total"] <- sum(data[,data_col])
sum_temp[,"Prop_1s"] <- sum_temp[,"Count_1s"]/sum_temp[,"Total"]
sum_temp[,"Prop_u"] <- sum_temp[,"Count_u"]/sum_temp[,"Total"]
sum_temp[,"Prop_1s_one_minus"] <- 1 - sum_temp[,"Prop_1s"]
sum_temp[,"Prop_u_one_minus"] <- 1 - sum_temp[,"Prop_u"]
return(sum_temp)
}
repeat_num_data_sum <- per_repeat_screen_sum(data=repeat_num_data_count,data_col="freq")
View(repeat_num_data_sum)
per_repeat_screen_execute <- function(data,ret_col){
# data <- x
# ret_col <- analysis_col
repeat_num_data_count <- per_repeat_screen_counts(ret=data[,ret_col],ret_col=ret_col)
repeat_num_data_sum <- per_repeat_screen_sum(data=repeat_num_data_count,data_col="freq")
rm(repeat_num_data_count)
return(repeat_num_data_sum)
}
data_s5_2 <- data_s5[c(data_trim_id_full_cols,analysis_col)]
data_s5_2[,analysis_col] <- round(data_s5_2[,analysis_col],digits=6)
data_s5_2_screen <- ddply(.data=data_s5_2, .variables=identifier, .fun = function(x,analysis_col,id_col){
# x <- data_s5_2[data_s5_2[,identifier]==0, c(data_trim_id_full_cols,analysis_col)]
# x <- data_s5_2[data_s5_2[,identifier]==6094, c(data_trim_id_full_cols,analysis_col)]
# analysis_col <- analysis_col
# id_col <- identifier
per_repeat_screen <- per_repeat_screen_execute(data=x,ret_col=analysis_col)
return(per_repeat_screen)
}, analysis_col=analysis_col,id_col=identifier, .progress = "text", .inform = FALSE, .drop = TRUE)
rm(data_s5_2)
### Create Flags
data_s5_2_full <- data.frame(data_s5_2_screen,cutoff_99=NA,cutoff_95=NA,cutoff_90=NA,
per_repeats_percent_99=NA,per_repeats_percent_95=NA,per_repeats_percent_90=NA,stringsAsFactors=FALSE)
rm(data_s5_2_screen)
data_s5_2_full[,"cutoff_99"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="Per_Repeat"),"Per_0.99"]
data_s5_2_full[,"cutoff_95"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="Per_Repeat"),"Per_0.95"]
data_s5_2_full[,"cutoff_90"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="Per_Repeat"),"Per_0.90"]
View(data_s5_2_full)
data_s5_2_full[,"per_repeats_percent_99"] <- ifelse(data_s5_2_full[,"Prop_u_one_minus"]>=data_s5_2_full[,"cutoff_99"],1,0)
data_s5_2_full[,"per_repeats_percent_95"] <- ifelse(data_s5_2_full[,"Prop_u_one_minus"]>=data_s5_2_full[,"cutoff_95"],1,0)
data_s5_2_full[,"per_repeats_percent_90"] <- ifelse(data_s5_2_full[,"Prop_u_one_minus"]>=data_s5_2_full[,"cutoff_90"],1,0)
View(data_s5_2_full)
data_s5_2_final <- data_s5_2_full[,c(identifier,"per_repeats_percent_99","per_repeats_percent_95","per_repeats_percent_90")]
rm2(data_s5_2_full)
###############################################################################
cat("S5 - (3) STRING", "\n")
###############################################################################
string_screen_execute <- function(data,ret_col){
# data <- x
# ret_col <- analysis_col
string_screen_counts <- string_screen_rle(data=data,ret_col=ret_col)
string_screen_temp <- data.frame(Max_Length=NA,Total=NA,Prop_u=NA, stringsAsFactors=FALSE)
string_screen_temp[,"Max_Length"] <- tail(string_screen_counts,1)
string_screen_temp[,"Total"] <- nrow(data)
string_screen_temp[,"Prop_u"] <- string_screen_temp[,"Max_Length"]/string_screen_temp[,"Total"]
return(string_screen_temp)
}
data_s5_3 <- data_s5[c(data_trim_id_full_cols,analysis_col)]
data_s5_3[,analysis_col] <- round(data_s5_3[,analysis_col],digits=6)
data_s5_3_screen <- ddply(.data=data_s5_3, .variables=identifier, .fun = function(x,analysis_col,id_col){
# x <- data_s5_3[data_s5_3[,identifier]==0, c(data_trim_id_full_cols,analysis_col)]
# analysis_col <- analysis_col
# id_col <- identifier
string_screen <- string_screen_execute(data=x,ret_col=analysis_col)
return(string_screen)
}, analysis_col=analysis_col,id_col=identifier, .progress = "text", .inform = FALSE, .drop = TRUE)
rm(data_s5_3)
### Create Flags
data_s5_3_full <- data.frame(data_s5_3_screen,cutoff=NA,
string_percent_99=NA,string_percent_95=NA,string_percent_90=NA,
stringsAsFactors=FALSE)
View(data_s5_3_full)
View(cutoffs_comb)
data_s5_3_full[,"cutoff_99"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="String"),"Per_0.99"]
data_s5_3_full[,"cutoff_95"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="String"),"Per_0.95"]
data_s5_3_full[,"cutoff_90"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="String"),"Per_0.90"]
View(data_s5_3_full)
View(data_s5_3_full)
data_s5_3_full[,"string_percent_99"] <- ifelse(data_s5_3_full[,"Max_Length"]>=data_s5_3_full[,"cutoff_99"],1,0)
data_s5_3_full[,"string_percent_95"] <- ifelse(data_s5_3_full[,"Max_Length"]>=data_s5_3_full[,"cutoff_95"],1,0)
data_s5_3_full[,"string_percent_90"] <- ifelse(data_s5_3_full[,"Max_Length"]>=data_s5_3_full[,"cutoff_90"],1,0)
data_s5_3_final <- data_s5_3_full[,c(identifier,"string_percent_99","string_percent_95","string_percent_90")]
View(data_s5_3_final)
data_s5_2_full[,"per_repeats_percent_99"] <- ifelse(data_s5_2_full[,"Prop_u_one_minus"]>data_s5_2_full[,"cutoff_99"],1,0)
data_s5_2_full[,"per_repeats_percent_95"] <- ifelse(data_s5_2_full[,"Prop_u_one_minus"]>data_s5_2_full[,"cutoff_95"],1,0)
data_s5_2_full[,"per_repeats_percent_90"] <- ifelse(data_s5_2_full[,"Prop_u_one_minus"]>data_s5_2_full[,"cutoff_90"],1,0)
data_s5_3_full[,"string_percent_99"] <- ifelse(data_s5_3_full[,"Max_Length"]>data_s5_3_full[,"cutoff_99"],1,0)
data_s5_3_full[,"string_percent_95"] <- ifelse(data_s5_3_full[,"Max_Length"]>data_s5_3_full[,"cutoff_95"],1,0)
data_s5_3_full[,"string_percent_90"] <- ifelse(data_s5_3_full[,"Max_Length"]>data_s5_3_full[,"cutoff_90"],1,0)
View(data_s5_3_full)
data_s5_3_final <- data_s5_3_full[,c(identifier,"string_percent_99","string_percent_95","string_percent_90")]
View(data_s5_3_final)
num_pairs_screen_execute <- function(data,ret_col,lag_ret_col){
# data <- x
# ret_col <- analysis_col
# lag_ret_col <- paste(analysis_col,"lag1",sep="_")
num_pair_data <- num_pairs_screen_pairs(data=data,ret_col=ret_col,lag_ret_col=lag_ret_col)
num_pairs_counts <- num_pairs_screen_counts(pairs=num_pair_data,pair_col="Pair")
num_pairs_screen_temp <- data.frame(Max_Pairs=NA,Total=NA,Prop_u=NA, stringsAsFactors=FALSE)
num_pairs_screen_temp[,"Max_Pairs"] <- tail(num_pairs_counts[,"freq"],1)
num_pairs_screen_temp[,"Total"] <- nrow(data)
num_pairs_screen_temp[,"Prop_u"] <- num_pairs_screen_temp[,"Max_Pairs"]/num_pairs_screen_temp[,"Total"]
return(num_pairs_screen_temp)
}
data_s5_4 <- data_s5[c(data_trim_id_full_cols,data_trim_lagged_trim_cols)]
data_s5_4[,data_trim_lagged_trim_cols] <- round(data_s5_4[,data_trim_lagged_trim_cols],digits=6)
data_s5_4_screen <- ddply(.data=data_s5_4, .variables=identifier, .fun = function(x,analysis_col,id_col){
# x <- data_s5_4[data_s5_4[,identifier]==0,]
# analysis_col <- analysis_col
# id_col <- identifier
num_pairs_screen <- num_pairs_screen_execute(data=x,ret_col=analysis_col,lag_ret_col=paste(analysis_col,"lag1",sep="_"))
return(num_pairs_screen)
}, analysis_col=analysis_col,id_col=identifier, .progress = "text", .inform = FALSE, .drop = TRUE)
rm(data_s5_4)
### Create Flags
data_s5_4_full <- data.frame(data_s5_4_screen,cutoff_99=NA,cutoff_95=NA,cutoff_90=NA,
num_pairs_percent_99=NA,num_pairs_percent_95=NA,num_pairs_percent_90=NA,stringsAsFactors=FALSE)
View(cutoffs_comb)
data_s5_4_full[,"cutoff_99"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="Num_Pairs"),"Per_0.99"]
data_s5_4_full[,"cutoff_95"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="Num_Pairs"),"Per_0.95"]
data_s5_4_full[,"cutoff_90"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="Num_Pairs"),"Per_0.90"]
View(data_s5_4_full)
num_pairs_screen_sum <- function(data,data_col){
# data <- num_pairs_counts
# data_col <- "freq"
sum_temp <- data.frame(Max_Pairs=NA,Max_Pairs_Adj=NA,Total=NA,Prop_u=NA,Prop_Adj=NA,stringsAsFactors=FALSE)
sum_temp[,"Max_Pairs"] <- tail(num_pairs_counts[,"freq"],1)
sum_temp[,"Max_Pairs_Adj"] <- sum_temp[,"Max_Pairs"]-1
sum_temp[,"Total"] <- nrow(data)
sum_temp[,"Prop"] <- sum_temp[,"Max_Pairs"]/sum_temp[,"Total"]
sum_temp[,"Prop_Adj"] <- sum_temp[,"Max_Pairs_Adj"]/sum_temp[,"Total"]
return(sum_temp)
}
num_pairs_sum <- num_pairs_screen_sum(data=num_pairs_counts,data_col="freq")
num_pairs_screen_execute <- function(data,ret_col,lag_ret_col){
# data <- x
# ret_col <- analysis_col
# lag_ret_col <- paste(analysis_col,"lag1",sep="_")
num_pair_data <- num_pairs_screen_pairs(data=data,ret_col=ret_col,lag_ret_col=lag_ret_col)
num_pairs_counts <- num_pairs_screen_counts(pairs=num_pair_data,pair_col="Pair")
num_pairs_sum <- num_pairs_screen_sum(data=num_pairs_counts,data_col="freq")
return(num_pairs_sum)
}
data_s5_4 <- data_s5[c(data_trim_id_full_cols,data_trim_lagged_trim_cols)]
data_s5_4[,data_trim_lagged_trim_cols] <- round(data_s5_4[,data_trim_lagged_trim_cols],digits=6)
data_s5_4_screen <- ddply(.data=data_s5_4, .variables=identifier, .fun = function(x,analysis_col,id_col){
# x <- data_s5_4[data_s5_4[,identifier]==0,]
# analysis_col <- analysis_col
# id_col <- identifier
num_pairs_screen <- num_pairs_screen_execute(data=x,ret_col=analysis_col,lag_ret_col=paste(analysis_col,"lag1",sep="_"))
return(num_pairs_screen)
}, analysis_col=analysis_col,id_col=identifier, .progress = "text", .inform = FALSE, .drop = TRUE)
rm(data_s5_4)
### Create Flags
data_s5_4_full <- data.frame(data_s5_4_screen,cutoff_99=NA,cutoff_95=NA,cutoff_90=NA,
num_pairs_percent_99=NA,num_pairs_percent_95=NA,num_pairs_percent_90=NA,stringsAsFactors=FALSE)
rm(data_s5_4_screen)
data_s5_4_full[,"cutoff_99"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="Num_Pairs"),"Per_0.99"]
data_s5_4_full[,"cutoff_95"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="Num_Pairs"),"Per_0.95"]
data_s5_4_full[,"cutoff_90"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="Num_Pairs"),"Per_0.90"]
num_pairs_screen_sum
num_pairs_screen_sum <- function(data,data_col){
# data <- num_pairs_counts
# data_col <- "freq"
sum_temp <- data.frame(Max_Pairs=NA,Max_Pairs_Adj=NA,Total=NA,Prop_u=NA,Prop_Adj=NA,stringsAsFactors=FALSE)
sum_temp[,"Max_Pairs"] <- tail(data[,"freq"],1)
sum_temp[,"Max_Pairs_Adj"] <- sum_temp[,"Max_Pairs"]-1
sum_temp[,"Total"] <- nrow(data)
sum_temp[,"Prop"] <- sum_temp[,"Max_Pairs"]/sum_temp[,"Total"]
sum_temp[,"Prop_Adj"] <- sum_temp[,"Max_Pairs_Adj"]/sum_temp[,"Total"]
return(sum_temp)
}
num_pairs_screen_execute <- function(data,ret_col,lag_ret_col){
# data <- x
# ret_col <- analysis_col
# lag_ret_col <- paste(analysis_col,"lag1",sep="_")
num_pair_data <- num_pairs_screen_pairs(data=data,ret_col=ret_col,lag_ret_col=lag_ret_col)
num_pairs_counts <- num_pairs_screen_counts(pairs=num_pair_data,pair_col="Pair")
num_pairs_sum <- num_pairs_screen_sum(data=num_pairs_counts,data_col="freq")
return(num_pairs_sum)
}
data_s5_4 <- data_s5[c(data_trim_id_full_cols,data_trim_lagged_trim_cols)]
data_s5_4[,data_trim_lagged_trim_cols] <- round(data_s5_4[,data_trim_lagged_trim_cols],digits=6)
data_s5_4_screen <- ddply(.data=data_s5_4, .variables=identifier, .fun = function(x,analysis_col,id_col){
# x <- data_s5_4[data_s5_4[,identifier]==0,]
# analysis_col <- analysis_col
# id_col <- identifier
num_pairs_screen <- num_pairs_screen_execute(data=x,ret_col=analysis_col,lag_ret_col=paste(analysis_col,"lag1",sep="_"))
return(num_pairs_screen)
}, analysis_col=analysis_col,id_col=identifier, .progress = "text", .inform = FALSE, .drop = TRUE)
rm(data_s5_4)
### Create Flags
data_s5_4_full <- data.frame(data_s5_4_screen,cutoff_99=NA,cutoff_95=NA,cutoff_90=NA,
num_pairs_percent_99=NA,num_pairs_percent_95=NA,num_pairs_percent_90=NA,stringsAsFactors=FALSE)
rm(data_s5_4_screen)
data_s5_4_full[,"cutoff_99"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="Num_Pairs"),"Per_0.99"]
data_s5_4_full[,"cutoff_95"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="Num_Pairs"),"Per_0.95"]
data_s5_4_full[,"cutoff_90"] <- cutoffs_comb[(cutoffs_comb[,"Type"]==cutoff_type & cutoffs_comb[,"Flag"]=="Num_Pairs"),"Per_0.90"]
View(data_s5_4_full)
data_s5_4_full[,"num_pairs_percent_99"] <- ifelse(data_s5_4_full[,"Max_Pairs_Adj"]>data_s5_4_full[,"cutoff_99"],1,0)
data_s5_4_full[,"num_pairs_percent_95"] <- ifelse(data_s5_4_full[,"Max_Pairs_Adj"]>data_s5_4_full[,"cutoff_95"],1,0)
data_s5_4_full[,"num_pairs_percent_90"] <- ifelse(data_s5_4_full[,"Max_Pairs_Adj"]>data_s5_4_full[,"cutoff_90"],1,0)
data_s5_4_final <- data_s5_4_full[,c(identifier,"num_pairs_percent_99","num_pairs_percent_95","num_pairs_percent_90")]
rm2(data_s5_4_full)
uniform_screen_execute <- function(data,ret_col,graph,rounding_digit){
# data <- x
# ret_col <- analysis_col
# graph <- FALSE
# rounding_digit <- rounding_digit
screen_uniform <- data.frame(data,Ret_Digits=NA,stringsAsFactors=FALSE)
#suppressWarnings(screen_uniform[,"Ret_Digits"] <- uniform_screen_LHS_digits(screen_uniform[,analysis_col],1))
suppressWarnings(screen_uniform[,"Ret_Digits"] <- uniform_screen_RHS_digits(screen_uniform[,analysis_col],1,rounding_digit))
#suppressWarnings(screen_uniform[,"Ret_Digits"] <- uniform_screen_RHS_digits(screen_uniform[,"Monthly_Ret_Percent"],1,2))
### Expand Digits
screen_uniform_all <- uniform_screen_expand_digits(z=screen_uniform,test_col="Ret_Digits")
#rm(screen_uniform)
### Compute Stats
screen_uniform_all_stats <- uniform_screen_probs(y=screen_uniform_all,test_col="Ret_Digits")
#rm(screen_uniform_all)
### Goodness of Fit test
screen_uniform_gof <- uniform_screen_gof(w=screen_uniform_all_stats,test_col="Ret_Digits")
### Graph
if(graph){
screen_uniform_graph_temp  <- uniform_screen_graph(g=screen_uniform_all_stats,test_col="Ret_Digits")
ggplot(screen_uniform_graph_temp, aes(x = fd, y = prob_actual)) + geom_bar(stat = "identity", fill = "blue") +
geom_line(aes(x = fd, y = prob_theoretical, size = 0.1)) + geom_point(aes(x = fd, y = prob_theoretical, color = "red", size = 1)) +
theme_bw() + scale_x_continuous(breaks = seq(min(screen_uniform_graph_temp[,"fd"]):max(screen_uniform_graph_temp[,"fd"])))
}
rm(screen_uniform_all_stats)
return(screen_uniform_gof)
}
data_s5_5 <- data_s5[c(data_trim_id_full_cols,analysis_col)]
data_s5_5[,analysis_col] <- round(data_s5_5[,analysis_col],digits=4)
data_s5_5_screen <- ddply(.data=data_s5_5, .variables=identifier, .fun = function(x,analysis_col,id_col){
# x <- data_s5_5[data_s5_5[,identifier]==0,c(data_trim_id_full_cols,analysis_col)]
# x <- uniform_data[uniform_data[,identifier]==0,]
# analysis_col <- analysis_col
# id_col <- identifier
uniform_out <- uniform_screen_execute(data=x,ret_col=analysis_col,graph=FALSE,rounding_digit=4)
return(uniform_out)
}, analysis_col=analysis_col,id_col=identifier, .progress = "text", .inform = FALSE, .drop = TRUE)
rm(data_s5_5)
### Create Flags
data_s5_5_screen_full <- data.frame(data_s5_5_screen,uniform_percent_99=NA, uniform_percent_95=NA, uniform_percent_90=NA, stringsAsFactors=FALSE)
View(data_s5_5_screen_full)
data_s5_5_screen_full[,"uniform_percent_99"] <- ifelse(data_s5_5_screen_full[,"pval_uniform"]<=0.01,1,0)
data_s5_5_screen_full[,"uniform_percent_95"] <- ifelse(data_s5_5_screen_full[,"pval_uniform"]<=0.05,1,0)
data_s5_5_screen_full[,"uniform_percent_90"] <- ifelse(data_s5_5_screen_full[,"pval_uniform"]<=0.10,1,0)
data_s5_5_final <- data_s5_5_screen_full[,c(identifier, "uniform_percent_99", "uniform_percent_95", "uniform_percent_90")]
View(data_s5_5_final)
###############################################################################
cat("S5 - MERGE FLAGS", "\n")
###############################################################################
data_s5_final0 <- data.frame(temp_id=unique(data_trim_full[,identifier]),stringsAsFactors=FALSE)
colnames(data_s5_final0)[match("temp_id",names(data_s5_final0))] <- identifier
data_s5_final1 <- merge(data_s5_final0, data_s5_1_final,
by.x=c(identifier), by.y=c(identifier),
all.x=TRUE, all.y=FALSE, sort=FALSE, suffixes=c(".x",".y"))
#rm(data_s5_final0,data_s5_1_final)
data_s5_final2 <- merge(data_s5_final1, data_s5_2_final,
by.x=c(identifier), by.y=c(identifier),
all.x=TRUE, all.y=FALSE, sort=FALSE, suffixes=c(".x",".y"))
#rm(data_s5_final1,data_s5_2_final)
data_s5_final3 <- merge(data_s5_final2, data_s5_3_final,
by.x=c(identifier), by.y=c(identifier),
all.x=TRUE, all.y=FALSE, sort=FALSE, suffixes=c(".x",".y"))
#rm(data_s5_final2,data_s5_3_final)
data_s5_final4 <- merge(data_s5_final3, data_s5_4_final,
by.x=c(identifier), by.y=c(identifier),
all.x=TRUE, all.y=FALSE, sort=FALSE, suffixes=c(".x",".y"))
#rm(data_s5_final3,data_s5_4_final)
data_s5_final5 <- merge(data_s5_final4, data_s5_5_final,
by.x=c(identifier), by.y=c(identifier),
all.x=TRUE, all.y=FALSE, sort=FALSE, suffixes=c(".x",".y"))
#rm(data_s5_final4,data_s5_5_final)
data_s5_final <- data_s5_final5
#rm2(data_s5,data_s5_final5)
###############################################################################
cat("MERGE ALL FLAGS", "\n")
###############################################################################
data_screen_final0 <- data.frame(temp_id=unique(data_trim_full[,identifier]),stringsAsFactors=FALSE)
colnames(data_screen_final0)[match("temp_id",names(data_screen_final0))] <- identifier
data_screen_final1 <- merge(data_screen_final0, data_s1_final,
by.x=c(identifier), by.y=c(identifier),
all.x=TRUE, all.y=FALSE, sort=FALSE, suffixes=c(".x",".y"))
#rm(data_screen_final0,data_s1_final)
data_screen_final2 <- merge(data_screen_final1, data_s2_final,
by.x=c(identifier), by.y=c(identifier),
all.x=TRUE, all.y=FALSE, sort=FALSE, suffixes=c(".x",".y"))
#rm(data_screen_final1,data_s2_final)
data_screen_final3 <- merge(data_screen_final2, data_s3_final,
by.x=c(identifier), by.y=c(identifier),
all.x=TRUE, all.y=FALSE, sort=FALSE, suffixes=c(".x",".y"))
#rm(data_screen_final2,data_s3_final)
data_screen_final4 <- merge(data_screen_final3, data_s5_final,
by.x=c(identifier), by.y=c(identifier),
all.x=TRUE, all.y=FALSE, sort=FALSE, suffixes=c(".x",".y"))
#rm(data_screen_final3,data_s5_final)
data_screen_final <- data_screen_final4
#rm(data_prescreen,data_trim_full,data_screen_final4)
gc()
data_screens <- data_screen_final
View(data_screens)
write.csv(data_screens,file=paste(output_directory,"data_screens.csv",sep="\\"),na="",quote=TRUE,row.names=FALSE)
# TODO: Add comment
#
# Author: Brad
# File: HF_Misreporting_Screens_Combination.R
# Version: 1.0
# Date: 09.8.2014
# Purpose: Compute descriptive statistics
#
###############################################################################
###############################################################################
cat("SECTION: INITIAL SETUP", "\n")
###############################################################################
# Clear workspace
rm(list = ls(all = TRUE))
rm(list = ls(all.names = TRUE))
# Limit History to not exceed 500 lines
Sys.setenv(R_HISTSIZE = 500)
repo <- c("http://cran.us.r-project.org")
options(repos = structure(repo))
options(install.packages.check.source = FALSE)
# String as factors is False -- used for read.csv
options(StringsAsFactors = FALSE)
# Default maxprint option
options(max.print = 500)
# options(max.print=99999)
# Memory limit
#memory.limit(size = 8183)
#Remove scientific notation if digits less than 100
options("scipen"=100)
#Uknown Strings
unknowns_strings <- c(" ","\n","",".","n/a","na","NA",NA,"<NA>","null","NULL",NULL,"nan","NaN",NaN,Inf,
NA_integer_,"NA_integer_",NA_complex_,"NA_complex_",
NA_character_,"NA_character_",NA_real_,"NA_real_")
# Set location (1=HOME,2=WORK,3=CORALSEA FROM HOME,4=CORALSEA FROM WORK,5=CORALSEA FROM LAPTOP)
Location <- 1
if (Location == 1) {
input_directory <- normalizePath("F:/Dropbox/Research/Fund_Strategies/Data/",winslash="\\", mustWork=TRUE)
output_directory <- normalizePath("F:/Research_temp4/",winslash="\\", mustWork=TRUE)
function_directory <- normalizePath("F:/Dropbox/Research_Methods/R/", winslash = "\\", mustWork = TRUE)
} else if (Location == 2) {
input_directory <- normalizePath("C:/Users/bdaughdr/Dropbox/Research/Fund_Strategies/Data/",winslash="\\", mustWork=TRUE)
output_directory <- normalizePath("C:/Research_temp4/",winslash="\\", mustWork=TRUE)
function_directory <- normalizePath("C:/Users/bdaughdr/Dropbox/Research_Methods/R/",winslash="\\", mustWork=TRUE)
} else if (Location == 3) {
input_directory <- normalizePath("//tsclient/F/Dropbox/Research/Fund_Strategies/Data/", winslash = "\\", mustWork = TRUE)
#output_directory <- normalizePath("//tsclient/C/Research_temp4/", winslash = "\\", mustWork = TRUE)
output_directory <- normalizePath("C:/Users/bdaughdr/Documents/Research_temp4/", winslash = "\\", mustWork = TRUE)
function_directory <- normalizePath("//tsclient/F/Dropbox/Research_Methods/R/", winslash = "\\", mustWork = TRUE)
} else if (Location == 4) {
input_directory <- normalizePath("//tsclient/C/Users/bdaughdr/Dropbox/Research/Fund_Strategies/Data/", winslash = "\\", mustWork = TRUE)
#output_directory <- normalizePath("//tsclient/C/Research_temp4/", winslash = "\\", mustWork = TRUE)
output_directory <- normalizePath("C:/Users/bdaughdr/Documents/Research_temp4/", winslash = "\\", mustWork = TRUE)
function_directory <- normalizePath("//tsclient/C/Users/bdaughdr/Dropbox/Research_Methods/R/", winslash = "\\", mustWork = TRUE)
} else if (Location == 5) {
input_directory <- normalizePath("//tsclient/C/Users/S. Brad Daughdrill/Documents/My Dropbox/Research/Fund_Strategies/Data/", winslash = "\\", mustWork = TRUE)
#output_directory <- normalizePath("//tsclient/C/Research_temp4/", winslash = "\\", mustWork = TRUE)
output_directory <- normalizePath("C:/Users/bdaughdr/Documents/Research_temp4/", winslash = "\\", mustWork = TRUE)
function_directory <- normalizePath("//tsclient/C/Users/S. Brad Daughdrill/Documents/My Dropbox/Research_Methods/R/", winslash = "\\", mustWork = TRUE)
} else {
cat("ERROR ASSIGNING DIRECTORIES", "\n")
}
rm(Location)
###############################################################################
cat("SECTION: FUNCTIONS", "\n")
###############################################################################
source(file=paste(function_directory,"functions_db.R",sep=""),echo=FALSE)
source(file=paste(function_directory,"functions_statistics.R",sep=""),echo=FALSE)
source(file=paste(function_directory,"functions_text_analysis.R",sep=""),echo=FALSE)
source(file=paste(function_directory,"functions_utilities.R",sep=""),echo=FALSE)
###############################################################################
cat("SECTION: LIBRARIES", "\n")
###############################################################################
#Load External Packages
external_packages <- c("compare","cwhmisc","data.table","descr","fastmatch","formatR","gdata",
"gtools","Hmisc","installr","knitr","leaps","lmtest","markdown","memisc","mitools",
"pander","pbapply","PerformanceAnalytics","plm","plyr","psych","quantreg","R.oo","R2wd",
"reporttools","reshape2","rms","RSQLite","sandwich","sqldf","stargazer","stringr",
"texreg","taRifx","UsingR","xtable","zoo")
invisible(unlist(sapply(external_packages,load_external_packages, repo_str=repo, simplify=FALSE, USE.NAMES=FALSE)))
installed_packages <- list_installed_packages(external_packages)
rm2(repo,external_packages,installed_packages)
###############################################################################
cat("SECTION: SQLITE DATABASES", "\n")
###############################################################################
#crsp_db <- paste(output_directory,"CRSPMF_Formatted.s3db",sep="")
#mflinks_db <- paste(output_directory,"MFLinks_Formatted.s3db",sep="")
#msd_db <- paste(output_directory,"MDMF_Formatted.s3db",sep="")
#similarity_db <- paste(output_directory,"Similarity_Analysis.s3db",sep="")
descriptive_stats_db <- paste(output_directory,"Descriptive_stats.s3db",sep="")
data_fulll_db <- paste(output_directory,"Data_full.s3db",sep="")
###############################################################################
cat("IMPORT DATA", "\n")
###############################################################################
identifier <- "fund_id"
data_prescreen <- read.csv(file=paste(output_directory,"data_prescreen",".csv",sep=""),header=TRUE,na.strings="NA",stringsAsFactors=FALSE)
data_screens <- read.csv(file=paste(output_directory,"data_screens",".csv",sep=""),header=TRUE,na.strings="NA",stringsAsFactors=FALSE)
###############################################################################
cat("CLEAN SCREENS", "\n")
###############################################################################
data_screens_cols_99 <- colnames(data_screens)[grep("99", colnames(data_screens))]
data_screens_99 <- data.frame(data_screens[,c(identifier,data_screens_cols_99)],quality_score_99=NA,stringsAsFactors=FALSE)
data_screens_99[,"quality_score_99"] <- rowSums(data_screens_99[,data_screens_cols_99], na.rm = TRUE)
data_screens_cols_95 <- colnames(data_screens)[grep("95", colnames(data_screens))]
data_screens_95 <- data.frame(data_screens[,c(identifier,data_screens_cols_95)],quality_score_95=NA,stringsAsFactors=FALSE)
data_screens_95[,"quality_score_95"] <- rowSums(data_screens_95[,data_screens_cols_95], na.rm = TRUE)
data_screens_cols_90 <- colnames(data_screens)[grep("90", colnames(data_screens))]
data_screens_90 <- data.frame(data_screens[,c(identifier,data_screens_cols_90)],quality_score_90=NA,stringsAsFactors=FALSE)
data_screens_90[,"quality_score_90"] <- rowSums(data_screens_90[,data_screens_cols_90], na.rm = TRUE)
View(data_screens_90)
max(data_screens_90[,"quality_score_90"])
min(data_screens_90[,"quality_score_90"])
mean(data_screens_90[,"quality_score_90"])
median(data_screens_90[,"quality_score_90"])
t(quantile(data_screens_90[,"quality_score_90"],c(0.01,0.05, 0.10, 0.25, 0.50, 0.75, 0.90, 0.95,0.99)))
### Make sure funds have atleast 24 months of returns
data_prescreen_firm_counts <- count(data_prescreen, c(identifier))
data_prescreen_firm_keep <- data_prescreen_firm_counts[data_prescreen_firm_counts[,"freq"]>=24,]
data_prescreen_firm_keep <- data_prescreen_firm_keep[!is.na(data_prescreen_firm_keep[,c(identifier)]),]
row.names(data_prescreen_firm_keep) <- seq(nrow(data_prescreen_firm_keep))
data_trim <- data_trim0[(data_trim0[,c(identifier)] %in% data_trim0_firm_keep[,c(identifier)]),]
row.names(data_trim) <- seq(nrow(data_trim))
#rm(data_prescreen,data_prescreen_firm_counts,data_prescreen_firm_keep)
data_prescreen_firm_counts <- count(data_prescreen, c(identifier))
data_prescreen_firm_keep <- data_prescreen_firm_counts[data_prescreen_firm_counts[,"freq"]>=24,]
data_prescreen_firm_keep <- data_prescreen_firm_keep[!is.na(data_prescreen_firm_keep[,c(identifier)]),]
row.names(data_prescreen_firm_keep) <- seq(nrow(data_prescreen_firm_keep))
data_trim <- data_prescreen[(data_prescreen[,c(identifier)] %in% data_trim0_firm_keep[,c(identifier)]),]
row.names(data_trim) <- seq(nrow(data_trim))
#rm(data_prescreen,data_prescreen_firm_counts,data_prescreen_firm_keep)
data_prescreen_firm_counts <- count(data_prescreen, c(identifier))
data_prescreen_firm_keep <- data_prescreen_firm_counts[data_prescreen_firm_counts[,"freq"]>=24,]
data_prescreen_firm_keep <- data_prescreen_firm_keep[!is.na(data_prescreen_firm_keep[,c(identifier)]),]
row.names(data_prescreen_firm_keep) <- seq(nrow(data_prescreen_firm_keep))
data_trim <- data_prescreen[(data_prescreen[,c(identifier)] %in% data_prescreen_firm_keep[,c(identifier)]),]
row.names(data_trim) <- seq(nrow(data_trim))
View(data_screens_90)
View(data_screens_95)
View(data_screens_99)
data_screens_95[,colnames(data_screens_95)[colnames(data_screens_95) %in% identifier]]
!(colnames(data_screens_95) %in% identifier])
!(colnames(data_screens_95) %in% identifier)
data_screens_merge1 <- cbind(data_screens_99,data_screens_95[,colnames(data_screens_95)[!(colnames(data_screens_95) %in% identifier)])
data_screens_merge1 <- cbind(data_screens_99,data_screens_95[,colnames(data_screens_95)[!(colnames(data_screens_95) %in% identifier)]])
data_screens_merge0 <- data_screens_99
data_screens_merge1 <- cbind(data_screens_merge0,data_screens_95[,colnames(data_screens_95)[!(colnames(data_screens_95) %in% identifier)]])
data_screens_merge2 <- cbind(data_screens_merge1,data_screens_90[,colnames(data_screens_90)[!(colnames(data_screens_90) %in% identifier)]])
data_all <- merge(data_trim,  data_screens_merge2,
by.x=c(identifier), by.y=c(identifier),
all.x=TRUE, all.y=FALSE, sort=FALSE, suffixes=c(".x",".y"))
data_all_stats <- unique(data_all[,c(identifier,"quality_score_90")])
data_all <- merge(data_trim,  data_screens_merge2,
by.x=c(identifier), by.y=c(identifier),
all.x=FALSE, all.y=FALSE, sort=FALSE, suffixes=c(".x",".y"))
max(data_all_stats[,"quality_score_90"])
min(data_all_stats[,"quality_score_90"])
mean(data_all_stats[,"quality_score_90"])
median(data_all_stats[,"quality_score_90"])
t(quantile(data_all_stats[,"quality_score_90"],c(0.01,0.05, 0.10, 0.25, 0.50, 0.75, 0.90, 0.95,0.99)))
